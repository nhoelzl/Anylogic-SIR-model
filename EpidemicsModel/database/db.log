/*C2*/SET SCHEMA PUBLIC
CREATE TABLE IF NOT EXISTS AL_CONFIGURATION ( PROPERTY_NAME VARCHAR(255) NOT NULL UNIQUE , PROPERTY_VALUE LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_GROUPS ( GROUP_NAME VARCHAR(255) NOT NULL PRIMARY KEY , DESCRIPTION LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_TABLES ( TABLE_NAME VARCHAR(255) NOT NULL PRIMARY KEY , GROUP_NAME VARCHAR(255) , DESCRIPTION LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_CUSTOM_TYPE ( TABLE_NAME VARCHAR(255) , COLUMN_NAME VARCHAR(255) , TYPE VARCHAR(255) , NAME VARCHAR(255) ) 
CREATE TABLE IF NOT EXISTS AL_VIEWS ( VIEW_NAME VARCHAR(255) NOT NULL UNIQUE , VIEW_DEFINITION LONGVARCHAR , IS_VALID BOOLEAN ) 
CREATE TABLE IF NOT EXISTS AL_SELECTED_LOG_OBJECTS ( NAME VARCHAR(255) NOT NULL UNIQUE , TYPE VARCHAR(255) ) 
CREATE TABLE IF NOT EXISTS AL_DB_OBJECTS ( NAME VARCHAR(255) NOT NULL UNIQUE , TYPE VARCHAR(255) , USAGE VARCHAR(255) ) 
/*C3*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.8')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1000.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,0.0E0)
COMMIT
DISCONNECT
/*C4*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.8')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1000.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.10935975435780133E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.35266653449542773E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.8939825753787665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,2.0983183359846307E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,4.777759761563958E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,10.739059415657403E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,24.001933246986315E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,53.50956287016108E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,119.15900031878937E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,265.2177889222483E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,590.1736538525963E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,1313.1449667211332E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,2921.632689639724E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,6500.243221936558E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,14462.040604280703E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,32175.680293597925E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,71585.5039771576E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,159265.63239859822E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,354338.94664961984E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,788343.7618566706E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,2.2248292488073758E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,4.949865186348782E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,11.012604844242182E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,24.501165363027887E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,54.51090932951627E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,121.27746545536282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,269.8216523662472E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,600.3071041458053E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,1335.5808035704438E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,2971.439235929181E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,6610.944923149081E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,14708.223627276677E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,32723.28612396482E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,72803.72408568936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,161975.8547679437E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,360368.619288297E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,801758.6445441629E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,1783776.082864297E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,3968597.2024757373E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,8829451.13279468E0)
COMMIT
DISCONNECT
/*C5*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.8')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,241.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,242.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,243.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,244.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,245.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,246.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,247.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,248.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,249.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,250.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,251.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,252.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,253.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,254.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,255.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,256.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,257.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,258.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,259.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,260.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,261.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,262.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,263.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,264.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,265.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,266.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,267.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,268.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,269.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,270.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,271.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,272.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,273.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,274.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,275.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,276.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,277.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,278.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,279.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,280.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,281.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,282.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,283.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,284.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,285.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,286.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,287.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,288.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,289.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,290.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,291.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,292.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,293.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,294.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,295.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,296.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,297.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,298.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,299.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,300.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,301.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,302.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,303.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,304.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,305.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,306.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,307.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,308.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,309.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,310.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,311.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,312.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,313.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,314.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,315.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,316.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,317.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,318.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,319.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,320.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,321.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,322.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,323.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,324.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,325.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,326.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,327.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,328.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,329.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,330.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,331.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,332.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,333.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,334.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,335.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,336.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,337.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,338.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,339.0E0,1000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,340.0E0,1000.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,241.0E0,4.4594690037980844E82)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,242.0E0,9.921557073762026E82)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,243.0E0,2.2073770371333313E83)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,244.0E0,4.911036995341254E83)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,245.0E0,1.092621874916866E84)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,246.0E0,2.4308971051925272E84)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,247.0E0,5.408330980452869E84)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,248.0E0,1.2032612952496714E85)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,249.0E0,2.6770509236191084E85)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,250.0E0,5.95598119539189E85)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,251.0E0,1.3251041168804036E86)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,252.0E0,2.948130396939348E86)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,253.0E0,6.559086736383748E86)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,254.0E0,1.4592848016515412E87)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,255.0E0,3.246659509042037E87)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,256.0E0,7.22326303660777E87)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,257.0E0,1.607052687567411E88)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,258.0E0,3.575417823674469E88)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,259.0E0,7.954694150818187E88)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,260.0E0,1.7697836212057272E89)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,261.0E0,3.937466364518736E89)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,262.0E0,8.760190333976505E89)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,263.0E0,1.9489927680150577E90)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,264.0E0,4.336176115993954E90)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,265.0E0,9.647251450843319E90)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,266.0E0,2.1463487198435535E91)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,267.0E0,4.775259410048215E91)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,268.0E0,1.0624136806117905E92)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,269.0E0,2.3636890309582135E92)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,270.0E0,5.258804491161004E92)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,271.0E0,1.1699942045694573E93)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,272.0E0,2.6030373272612544E93)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,273.0E0,5.791313581428228E93)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,274.0E0,1.288468384497688E94)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,275.0E0,2.866622147994035E94)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,276.0E0,6.3777448001361744E94)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,277.0E0,1.41893931727721E95)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,278.0E0,3.156897695361107E95)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,279.0E0,7.023558328131971E95)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,280.0E0,1.5626217999132657E96)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,281.0E0,3.4765666852710717E96)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,282.0E0,7.734767246820372E96)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,283.0E0,1.720853640344326E97)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,284.0E0,3.828605511954699E97)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,285.0E0,8.517993525141929E97)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,286.0E0,1.895108113588759E98)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,287.0E0,4.216291960764437E98)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,288.0E0,9.380529675820112E98)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,289.0E0,2.0870076792070148E99)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,290.0E0,4.64323572718536E99)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,291.0E0,1.033040665494937E100)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,292.0E0,2.298339087800571E100)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,293.0E0,5.1134120262159545E100)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,294.0E0,1.137646863712866E101)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,295.0E0,2.5310700172023634E101)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,296.0E0,5.631198605051201E101)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,297.0E0,1.25284553623612E102)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,298.0E0,2.787367393255876E102)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,299.0E0,6.201416503687644E102)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,300.0E0,1.3797092821441084E103)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,301.0E0,3.0696175657652428E103)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,302.0E0,6.8293749429674095E103)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,303.0E0,1.5194193124186048E104)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,304.0E0,3.380448527471703E104)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,305.0E0,7.520920758006878E104)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,306.0E0,1.6732764480376218E105)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,307.0E0,3.722754382934617E105)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,308.0E0,8.282492837278783E105)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,309.0E0,1.8427132317415397E106)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,310.0E0,4.0997222951429465E106)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,311.0E0,9.121182074221726E106)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,312.0E0,2.0293072662426018E107)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,313.0E0,4.514862160753869E107)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,314.0E0,1.004479738957889E108)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,315.0E0,2.2347959030679033E108)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,316.0E0,4.97203929026036E108)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,317.0E0,1.1061938439190728E109)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,318.0E0,2.461092418801816E109)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,319.0E0,5.475510397368363E109)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,320.0E0,1.2182075684214054E110)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,321.0E0,2.7103038293424533E110)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,322.0E0,6.02996323267571E110)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,323.0E0,1.341563856928999E111)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,324.0E0,2.9847505080384724E111)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,325.0E0,6.640560230676672E111)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,326.0E0,1.4774112629676486E112)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,327.0E0,3.2869877903678727E112)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,328.0E0,7.312986576483164E112)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,329.0E0,1.627014643149546E113)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,330.0E0,3.6198297663170004E113)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,331.0E0,8.053503139805617E113)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,332.0E0,1.7917669340801558E114)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,333.0E0,3.986375481987444E114)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,334.0E0,8.869004769054258E114)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,335.0E0,1.973202121800398E115)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,336.0E0,4.390037794390308E115)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,337.0E0,9.767084488329372E115)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,338.0E0,2.1730095245207983E116)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,339.0E0,4.8345751480908776E116)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,340.0E0,1.0756104195029848E117)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,241.0E0,4.994605284253854E83)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,242.0E0,1.111214392261346E84)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,243.0E0,2.4722622815893223E84)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,244.0E0,5.500361434782194E84)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,245.0E0,1.2237364999068878E85)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,246.0E0,2.722604757815623E85)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,247.0E0,6.057330698107204E85)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,248.0E0,1.347652650679634E86)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,249.0E0,2.9982970344534E86)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,250.0E0,6.670698938838897E86)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,251.0E0,1.48411661090605E87)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,252.0E0,3.301906044572069E87)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,253.0E0,7.346177144749801E87)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,254.0E0,1.6343989778497273E88)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,255.0E0,3.6362586501270846E88)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,256.0E0,8.09005460100071E88)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,257.0E0,1.7998990100755004E89)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,258.0E0,4.0044679625154154E89)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,259.0E0,8.909257448916384E89)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,260.0E0,1.9821576557504146E90)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,261.0E0,4.409962328260986E90)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,262.0E0,9.81141317405369E90)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,263.0E0,2.182871900176866E91)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,264.0E0,4.856517249913229E91)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,265.0E0,1.0804921624944503E92)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,266.0E0,2.403910566224785E92)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,267.0E0,5.348290539254006E92)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,268.0E0,1.1899033222852085E93)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,269.0E0,2.647331714673202E93)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,270.0E0,5.889861030100321E93)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,271.0E0,1.3103935091177944E94)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,272.0E0,2.915401806532607E94)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,273.0E0,6.4862712111995944E94)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,274.0E0,1.4430845906374065E95)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,275.0E0,3.2106168057533216E95)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,276.0E0,7.143074176152527E95)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,277.0E0,1.5892120353504775E96)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,278.0E0,3.53572541880444E96)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,279.0E0,7.866385327507822E96)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,280.0E0,1.7501364159028617E97)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,281.0E0,3.8937546875035996E97)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,282.0E0,8.662939316438812E97)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,283.0E0,1.927356077185639E98)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,284.0E0,4.288038173389253E98)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,285.0E0,9.540152748158957E98)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,286.0E0,2.12252108721941E99)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,287.0E0,4.722246996056166E99)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,288.0E0,1.0506193236918525E100)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,289.0E0,2.337448600711852E100)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,290.0E0,5.200424014447602E100)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,291.0E0,1.1570055453543276E101)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,292.0E0,2.5741397783366373E101)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,293.0E0,5.727021469361887E101)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,294.0E0,1.2741644873584132E102)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,295.0E0,2.8347984192666477E102)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,296.0E0,6.306942437657339E102)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,297.0E0,1.4031870005844546E103)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,298.0E0,3.121851480446593E103)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,299.0E0,6.945586484130184E103)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,300.0E0,1.545274396001403E104)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,301.0E0,3.43797167365707E104)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,302.0E0,7.648899936123499E104)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,303.0E0,1.701749629908839E105)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,304.0E0,3.786102350768309E105)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,305.0E0,8.423431248967699E105)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,306.0E0,1.874069621802139E106)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,307.0E0,4.169484908886773E106)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,308.0E0,9.27639197775223E106)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,309.0E0,2.0638388195505276E107)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,310.0E0,4.591688970560108E107)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,311.0E0,1.0215723923128334E108)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,312.0E0,2.2728241381917126E108)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,313.0E0,5.056645620044339E108)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,314.0E0,1.1250173076328351E109)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,315.0E0,2.5029714114360566E109)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,316.0E0,5.5686840050916265E109)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,317.0E0,1.2389371051893655E110)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,318.0E0,2.756423509058036E110)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,319.0E0,6.132571645052577E110)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,320.0E0,1.3643924766319734E111)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,321.0E0,3.0355402888635447E111)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,322.0E0,6.753558820596787E111)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,323.0E0,1.5025515197604844E112)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,324.0E0,3.342920569003101E112)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,325.0E0,7.437427458357878E112)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,326.0E0,1.654700614523769E113)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,327.0E0,3.6814263252120126E113)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,328.0E0,8.19054496566114E113)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,329.0E0,1.8222564003274915E114)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,330.0E0,4.0542093382750405E114)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,331.0E0,9.019923516582298E114)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,332.0E0,2.0067789661697733E115)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,333.0E0,4.46474053982593E115)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,334.0E0,9.93328534134076E115)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,335.0E0,2.2099863764164525E116)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,336.0E0,4.9168423297171565E116)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,337.0E0,1.0939134626928901E117)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,338.0E0,2.4337706674632963E117)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,339.0E0,5.414724165861775E117)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,340.0E0,1.2046836698433422E118)
COMMIT
DISCONNECT
/*C6*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.8')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,999.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.10931033873774282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.35231285320930317E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.8925199618998607E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,2.0934281949459956E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,4.763109065479314E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,10.697947177476255E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,23.89139805184062E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,53.2211190466555E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,118.42259982872848E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,263.3688506616539E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,585.5918336141779E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,1301.910125023467E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,2894.322590161373E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,6434.337538177977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,14303.973142352717E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,31798.57851886216E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,70689.98755905963E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,157147.59346562484E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,349347.3055246306E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,776617.1671893912E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,1726460.0817874E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,3838009.8150094366E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,2.2230515180688593E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,4.941958051988267E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10.986227349705196E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,24.42294938761176E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,54.293474711834996E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,120.69719137934649E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,268.316074522434E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,596.4804567892189E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,1326.006784963676E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,2947.781396283118E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,6553.069907942329E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,14567.812006862576E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,32384.99659679759E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,71993.5158471656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,160045.29469515578E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,355788.9353318454E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,790937.132800808E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,1758293.993768188E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,3908778.132053982E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,8689415.16024867E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,1.9317017563102886E7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,4.294272521817764E7)
COMMIT
DISCONNECT
/*C7*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.05')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,1001.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1002.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,1003.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,1004.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,1005.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,1006.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,1007.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,1008.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,1009.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,1010.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,1011.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,1012.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,1013.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,1014.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,1015.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,1016.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,1017.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,1018.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,1019.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,1020.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,1021.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,1022.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,1023.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,1024.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,1025.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,1026.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,1027.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,1028.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,1029.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,1030.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,1031.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,1032.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,1033.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,1034.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,1035.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,1036.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,1037.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,1038.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,1039.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,1040.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,1041.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,1042.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,1043.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,1044.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,1045.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,1046.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,1047.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,1048.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,1049.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,1050.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,1051.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,1052.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,1053.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,1054.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,1055.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,1056.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,1057.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,1058.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,1059.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,1060.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,1061.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,1062.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,1063.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,1064.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,1065.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,1066.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,1067.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,1068.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,1069.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,1070.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,1071.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,1072.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,1073.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,1074.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,1075.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,1076.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,1077.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,1078.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,1079.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,1080.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,1081.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,1082.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,1083.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,1084.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,1085.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,1086.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,1087.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,1088.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,1089.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,1090.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,1091.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,1092.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,1093.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,1094.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,1095.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,1096.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,1097.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,1098.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,1099.0E0,996.6833727908979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,1100.0E0,996.6833727908979E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,1001.0E0,3.316627209596268E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1002.0E0,3.3166272096253557E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,1003.0E0,3.316627209653843E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,1004.0E0,3.3166272096816747E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,1005.0E0,3.3166272097089498E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,1006.0E0,3.316627209735651E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,1007.0E0,3.316627209761734E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,1008.0E0,3.3166272097872835E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,1009.0E0,3.3166272098123053E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,1010.0E0,3.316627209836806E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,1011.0E0,3.3166272098607354E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,1012.0E0,3.316627209884159E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,1013.0E0,3.3166272099070895E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,1014.0E0,3.316627209929535E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,1015.0E0,3.316627209951504E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,1016.0E0,3.3166272099730048E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,1017.0E0,3.3166272099940453E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,1018.0E0,3.3166272100146355E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,1019.0E0,3.3166272100347842E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,1020.0E0,3.3166272100545022E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,1021.0E0,3.3166272100737992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,1022.0E0,3.3166272100926864E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,1023.0E0,3.316627210111175E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,1024.0E0,3.316627210129277E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,1025.0E0,3.316627210147005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,1026.0E0,3.3166272101643246E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,1027.0E0,3.3166272101812475E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,1028.0E0,3.3166272101978236E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,1029.0E0,3.3166272102140675E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,1030.0E0,3.3166272102299943E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,1031.0E0,3.3166272102455374E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,1032.0E0,3.3166272102607195E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,1033.0E0,3.3166272102756182E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,1034.0E0,3.3166272102902523E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,1035.0E0,3.316627210304463E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,1036.0E0,3.3166272103184076E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,1037.0E0,3.3166272103321273E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,1038.0E0,3.31662721034545E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,1039.0E0,3.316627210358523E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,1040.0E0,3.3166272103714016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,1041.0E0,3.3166272103838517E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,1042.0E0,3.316627210396148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,1043.0E0,3.3166272104081385E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,1044.0E0,3.316627210419864E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,1045.0E0,3.3166272104314105E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,1046.0E0,3.316627210442595E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,1047.0E0,3.316627210453697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,1048.0E0,3.316627210464372E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,1049.0E0,3.316627210475016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,1050.0E0,3.31662721048523E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,1051.0E0,3.3166272104954357E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,1052.0E0,3.3166272105052057E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,1053.0E0,3.3166272105149757E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,1054.0E0,3.31662721052434E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,1055.0E0,3.316627210533666E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,1056.0E0,3.3166272105426775E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,1057.0E0,3.3166272105515593E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,1058.0E0,3.316627210560267E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,1059.0E0,3.3166272105687047E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,1060.0E0,3.3166272105771424E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,1061.0E0,3.3166272105851564E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,1062.0E0,3.31662721059315E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,1063.0E0,3.3166272106009744E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,1064.0E0,3.316627210608524E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,1065.0E0,3.3166272106160735E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,1066.0E0,3.3166272106233317E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,1067.0E0,3.316627210630437E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,1068.0E0,3.3166272106375425E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,1069.0E0,3.31662721064431E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,1070.0E0,3.3166272106509713E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,1071.0E0,3.3166272106576327E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,1072.0E0,3.316627210663995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,1073.0E0,3.3166272106702124E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,1074.0E0,3.3166272106764296E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,1075.0E0,3.3166272106824852E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,1076.0E0,3.3166272106882584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,1077.0E0,3.3166272106940315E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,1078.0E0,3.3166272106998047E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,1079.0E0,3.3166272107052226E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,1080.0E0,3.3166272107105517E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,1081.0E0,3.3166272107158807E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,1082.0E0,3.31662721072121E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,1083.0E0,3.3166272107261223E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,1084.0E0,3.3166272107310073E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,1085.0E0,3.3166272107358923E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,1086.0E0,3.3166272107407773E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,1087.0E0,3.31662721074534E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,1088.0E0,3.3166272107497807E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,1089.0E0,3.3166272107542216E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,1090.0E0,3.3166272107586625E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,1091.0E0,3.316627210763063E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,1092.0E0,3.31662721076706E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,1093.0E0,3.3166272107710566E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,1094.0E0,3.3166272107750534E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,1095.0E0,3.31662721077905E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,1096.0E0,3.316627210783047E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,1097.0E0,3.3166272107866264E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,1098.0E0,3.316627210790179E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,1099.0E0,3.316627210793732E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,1100.0E0,3.3166272107972845E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,1001.0E0,4.1164391136692323E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1002.0E0,4.0284990438748077E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,1003.0E0,3.9424376502035774E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,1004.0E0,3.858214798232354E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,1005.0E0,3.775791210935324E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,1006.0E0,3.695128450367281E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,1007.0E0,3.616188899738294E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,1008.0E0,3.5389357458712035E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,1009.0E0,3.4633329620339614E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,1010.0E0,3.38934529113868E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,1011.0E0,3.316938229299631E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,1012.0E0,3.246078009742441E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,1013.0E0,3.1767315870571216E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,1014.0E0,3.108866621787424E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,1015.0E0,3.0424514653495015E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,1016.0E0,2.9774551452726277E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,1017.0E0,2.913847350755371E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,1018.0E0,2.851598418530228E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,1019.0E0,2.7906793190302535E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,1020.0E0,2.7310616428512366E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,1021.0E0,2.6727175875030833E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,1022.0E0,2.61561994444422E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,1023.0E0,2.559742086392994E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,1024.0E0,2.505057954910124E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,1025.0E0,2.4515420482464385E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,1026.0E0,2.399169409450229E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,1027.0E0,2.347915614728697E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,1028.0E0,2.2977567620579395E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,1029.0E0,2.2486694600363944E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,1030.0E0,2.2006308169762945E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,1031.0E0,2.1536184302282324E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,1032.0E0,2.1076103757337666E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,1033.0E0,2.0625851978012086E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,1034.0E0,2.0185218990998428E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,1035.0E0,1.9753999308678878E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,1036.0E0,1.9331991833296667E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,1037.0E0,1.8918999763174693E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,1038.0E0,1.8514830500937875E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,1039.0E0,1.811929556369619E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,1040.0E0,1.7732210495146017E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,1041.0E0,1.7353394779549815E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,1042.0E0,1.6982671757553336E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,1043.0E0,1.6619868543801011E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,1044.0E0,1.6264815946311403E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,1045.0E0,1.5917348387575367E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,1046.0E0,1.5577303827339447E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,1047.0E0,1.524452368703892E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,1048.0E0,1.4918852775845487E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,1049.0E0,1.4600139218294217E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,1050.0E0,1.4288234383457314E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,1051.0E0,1.3982992815630416E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,1052.0E0,1.368427216649992E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,1053.0E0,1.3391933128759286E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,1054.0E0,1.3105839371143727E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,1055.0E0,1.2825857474852395E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,1056.0E0,1.2551856871329162E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,1057.0E0,1.2283709781372495E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,1058.0E0,1.2021291155545827E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,1059.0E0,1.17644786158614E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,1060.0E0,1.1513152398709647E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,1061.0E0,1.1267195299008034E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,1062.0E0,1.1026492615542626E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,1063.0E0,1.0790932097477729E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,1064.0E0,1.0560403892008116E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,1065.0E0,1.0334800493129539E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,1066.0E0,1.0114016691503668E-10)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,1067.0E0,9.89794952539416E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,1068.0E0,9.686498232650743E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,1069.0E0,9.479564203719196E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,1070.0E0,9.27705093565514E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,1071.0E0,9.07886398712022E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,1072.0E0,8.884910934339666E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,1073.0E0,8.695101328000884E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,1074.0E0,8.509346651072721E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,1075.0E0,8.327560277525877E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,1076.0E0,8.149657431935102E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,1077.0E0,7.975555149944524E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,1078.0E0,7.805172239577555E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,1079.0E0,7.638429243373206E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,1080.0E0,7.475248401331496E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,1081.0E0,7.31555361465022E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,1082.0E0,7.159270410236734E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,1083.0E0,7.006325905977498E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,1084.0E0,6.856648776749909E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,1085.0E0,6.710169221159992E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,1086.0E0,6.566818928990797E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,1087.0E0,6.42653104934616E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,1088.0E0,6.28924015947512E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,1089.0E0,6.154882234262124E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,1090.0E0,6.023394616369233E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,1091.0E0,5.894715987016025E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,1092.0E0,5.768786337383852E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,1093.0E0,5.645546940630947E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,1094.0E0,5.524940324505318E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,1095.0E0,5.406910244542843E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,1096.0E0,5.2914016578378016E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,1097.0E0,5.178360697373835E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,1098.0E0,5.0677346469032765E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,1099.0E0,4.9594719163630733E-11)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,1100.0E0,4.8535220178159965E-11)
COMMIT
DISCONNECT
/*C8*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.05')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,769.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,770.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,771.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,772.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,773.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,774.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,775.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,776.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,777.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,778.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,779.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,780.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,781.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,782.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,783.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,784.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,785.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,786.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,787.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,788.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,789.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,790.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,791.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,792.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,793.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,794.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,795.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,796.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,797.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,798.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,799.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,800.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,801.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,802.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,803.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,804.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,805.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,806.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,807.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,808.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,809.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,810.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,811.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,812.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,813.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,814.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,815.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,816.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,817.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,818.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,819.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,820.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,821.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,822.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,823.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,824.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,825.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,826.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,827.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,828.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,829.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,830.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,831.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,832.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,833.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,834.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,835.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,836.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,837.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,838.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,839.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,840.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,841.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,842.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,843.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,844.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,845.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,846.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,847.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,848.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,849.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,850.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,851.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,852.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,853.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,854.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,855.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,856.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,857.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,858.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,859.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,860.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,861.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,862.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,863.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,864.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,865.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,866.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,867.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,868.0E0,999.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,769.0E0,6.8682178342222656E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,770.0E0,7.2199888771620096E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,771.0E0,7.5897766559767456E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,772.0E0,7.9785039378415728E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,773.0E0,8.387140751503616E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,774.0E0,8.8167068078884752E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,775.0E0,9.268274044683328E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,776.0E0,9.742969301246744E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,777.0E0,1.0241977130519768E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,778.0E0,1.07665427549552848E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,779.0E0,1.13179751738419888E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,780.0E0,1.18976504297767648E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,781.0E0,1.25070150424367392E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,782.0E0,1.31475896182195776E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,783.0E0,1.38209726447596352E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,784.0E0,1.4528844479788496E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,785.0E0,1.5272971544294064E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,786.0E0,1.60552107304415584E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,787.0E0,1.68775140352557696E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,788.0E0,1.77419334316281216E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,789.0E0,1.86506259888026976E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,790.0E0,1.96058592551196064E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,791.0E0,2.0610016916447504E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,792.0E0,2.1665604744425248E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,793.0E0,2.27752568493558464E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,794.0E0,2.39417422533567072E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,795.0E0,2.51679718001676896E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,796.0E0,2.64570054188612832E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,797.0E0,2.781205975957864E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,798.0E0,2.9236516220348E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,799.0E0,3.0733929385013773E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,800.0E0,3.2308035893332941E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,801.0E0,3.3962763765373363E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,802.0E0,3.5702242203481907E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,803.0E0,3.7530811896281818E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,804.0E0,3.9453035850412742E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,805.0E0,4.1473710777041811E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,806.0E0,4.3597879061560781E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,807.0E0,4.5830841346337171E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,808.0E0,4.8178169757919539E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,809.0E0,5.0645721811703622E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,810.0E0,5.3239655028755808E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,811.0E0,5.5966442301270822E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,812.0E0,5.8832888045005056E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,813.0E0,6.1846145178992307E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,814.0E0,6.501373297491447E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,815.0E0,6.8343555820666138E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,816.0E0,7.1843922944937472E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,817.0E0,7.5523569152036134E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,818.0E0,7.9391676618687526E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,819.0E0,8.3457897807208269E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,820.0E0,8.7732379552227814E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,821.0E0,9.2225788381065318E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,822.0E0,9.6949337130945754E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,823.0E0,1.01914812929477018E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,824.0E0,1.07134606608206669E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,825.0E0,1.12621743622662886E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,826.0E0,1.18389916556031411E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,827.0E0,1.24453519287580544E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,828.0E0,1.30827682911101286E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,829.0E0,1.37528313492985037E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,830.0E0,1.44572131764169856E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,831.0E0,1.51976714844995584E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,832.0E0,1.59760540107089382E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,833.0E0,1.6794303128173801E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,834.0E0,1.76544606929801165E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,835.0E0,1.85586731394118758E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,836.0E0,1.95091968361559706E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,837.0E0,2.05084037168370637E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,838.0E0,2.1558787198932608E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,839.0E0,2.26629684058386432E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,840.0E0,2.3823702707612006E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,841.0E0,2.5043886596711398E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,842.0E0,2.632656491589546E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,843.0E0,2.7674938456312515E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,844.0E0,2.9092371944744218E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,845.0E0,3.0582402439933501E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,846.0E0,3.2148748158948751E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,847.0E0,3.3795317755610593E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,848.0E0,3.5526220074132803E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,849.0E0,3.7345774402319089E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,850.0E0,3.925852124989846E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,851.0E0,4.1269233678898278E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,852.0E0,4.3382929214327409E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,853.0E0,4.5604882364890778E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,854.0E0,4.7940637784980572E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,855.0E0,5.0396024110788393E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,856.0E0,5.2977168505064335E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,857.0E0,5.5690511946817812E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,858.0E0,5.8542825304115364E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,859.0E0,6.1541226230081331E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,860.0E0,6.4693196924266199E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,861.0E0,6.8006602803701678E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,862.0E0,7.1489712130235843E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,863.0E0,7.5151216643125678E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,864.0E0,7.9000253248374282E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,865.0E0,8.3046426818935224E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,866.0E0,8.7299834162679378E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,867.0E0,9.1771089217936548E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,868.0E0,9.647134953947976E18)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,769.0E0,4.8029447314715864E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,770.0E0,5.0489382217993568E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,771.0E0,5.3075308155244872E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,772.0E0,5.5793678037325432E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,773.0E0,5.8651275275264016E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,774.0E0,6.1655230707563152E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,775.0E0,6.4813040394469648E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,776.0E0,6.8132584323617728E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,777.0E0,7.1622146073724024E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,778.0E0,7.5290433485401696E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,779.0E0,7.9146600390676528E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,780.0E0,8.320026945542816E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,781.0E0,8.7461556191759424E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,782.0E0,9.1941094200208992E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,783.0E0,9.6650061704803712E16)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,784.0E0,1.01600209447160656E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,785.0E0,1.06803890009248128E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,786.0E0,1.12274088637977216E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,787.0E0,1.18024455648543088E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,788.0E0,1.24069340487374608E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,789.0E0,1.30423827539696432E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,790.0E0,1.37103773771050944E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,791.0E0,1.44125848296717024E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,792.0E0,1.51507573977765504E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,793.0E0,1.592673711475456E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,794.0E0,1.67424603577723712E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,795.0E0,1.75999626798573728E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,796.0E0,1.85013838894098528E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,797.0E0,1.94489733898735584E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,798.0E0,2.04450957928895424E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,799.0E0,2.1492236818940336E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,800.0E0,2.25930095002079296E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,801.0E0,2.37501607011258208E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,802.0E0,2.49665779728951328E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,803.0E0,2.62452967590700352E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,804.0E0,2.75895079701937536E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,805.0E0,2.9002565946385414E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,806.0E0,3.0487996827749414E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,807.0E0,3.2049507353493466E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,808.0E0,3.3690994111713043E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,809.0E0,3.5416553262924256E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,810.0E0,3.7230490761608883E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,811.0E0,3.9137333101278714E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,812.0E0,4.1141838609872026E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,813.0E0,4.3249009323669293E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,814.0E0,4.5464103469357709E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,815.0E0,4.7792648585391853E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,816.0E0,5.0240455315394938E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,817.0E0,5.2813631908019213E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,818.0E0,5.5518599459448602E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,819.0E0,5.8362107936581235E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,820.0E0,6.1351253020873318E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,821.0E0,6.4493493814879283E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,822.0E0,6.7796671455670938E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,823.0E0,7.1269028681583693E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,824.0E0,7.4919230401119475E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,825.0E0,7.8756385315328474E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,826.0E0,8.2790068647632781E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,827.0E0,8.7030346037805222E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,828.0E0,9.1487798659733069E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,829.0E0,9.6173549625644429E17)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,830.0E0,1.01099291742683955E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,831.0E0,1.06277316691105062E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,832.0E0,1.11720545696887194E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,833.0E0,1.17442561775319168E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,834.0E0,1.23457643626010675E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,835.0E0,1.2978080126390807E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,836.0E0,1.36427813475239731E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,837.0E0,1.43415267191842842E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,838.0E0,1.50760598882136909E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,839.0E0,1.58482138062030438E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,840.0E0,1.66599153034330726E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,841.0E0,1.75131898970803098E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,842.0E0,1.84101668456856986E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,843.0E0,1.93530844624993075E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,844.0E0,2.03442957009596442E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,845.0E0,2.13862740262454528E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,846.0E0,2.2481619587552832E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,847.0E0,2.3633065706498447E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,848.0E0,2.4843485697841009E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,849.0E0,2.6115900039541612E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,850.0E0,2.7453483910053755E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,851.0E0,2.8859575111653345E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,852.0E0,3.0337682399578911E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,853.0E0,3.189149423776788E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,854.0E0,3.3524888003036733E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,855.0E0,3.5241939660674243E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,856.0E0,3.7046933935591352E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,857.0E0,3.894437500440962E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,858.0E0,4.093899773516778E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,859.0E0,4.3035779502695793E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,860.0E0,4.5239952609139348E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,861.0E0,4.7557017340628531E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,862.0E0,4.9992755692673894E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,863.0E0,5.2553245798537892E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,864.0E0,5.5244877096588247E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,865.0E0,5.8074366274481531E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,866.0E0,6.10487740299618E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,867.0E0,6.4175522690103142E18)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,868.0E0,6.7462414732958239E18)
COMMIT
DISCONNECT
/*C9*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.05')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,998.9505833235895E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,998.9022192265218E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,998.854885354008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,998.8085598232714E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,998.7632212137008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,998.7188485571965E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,998.6754213287218E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,998.6329194370404E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,998.5913232156499E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,998.5506134138984E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,998.5107711882764E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,998.4717780938955E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,998.4336160761402E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,998.3962674624872E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,998.3597149544937E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,998.3239416199558E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,998.2889308852218E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,998.2546665276724E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,998.2211326683346E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,998.1883137646785E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,998.1561946035404E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,998.124760294202E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,998.0939962616073E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,998.0638882397251E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,998.0344222650431E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,998.0055846702068E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,997.9773620777706E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,28.0E0,997.9497413941073E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,29.0E0,997.922709803415E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,30.0E0,997.8962547618681E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,31.0E0,997.8703639918842E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,32.0E0,997.8450254765049E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,33.0E0,997.8202274539035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,34.0E0,997.7959584120003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,35.0E0,997.7722070831879E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,36.0E0,997.7489624391712E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,37.0E0,997.7262136859207E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,38.0E0,997.7039502587132E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,39.0E0,997.6821618173011E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,40.0E0,997.6608382411539E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,41.0E0,997.639969624826E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,42.0E0,997.6195462733992E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.07066766402769543E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.1398334859479312E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.20752921946160047E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,0.2737859538075746E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,0.3386341273744964E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,0.4021035410462516E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,0.4642233712855867E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,0.525022182960699E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,0.5845279419192838E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,0.642768027314451E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,0.699769243687158E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,0.7555578328093353E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,0.8101594852921481E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,0.8635993519636028E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,0.9159020550197325E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,0.9670916989534933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,1.0171918812653924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,1.0662257029601803E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,1.1142157788329614E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,1.1611842475492342E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,1.2071527815224181E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,1.2521425965926827E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,1.2961744615108437E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,1.339268707230989E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,1.3814452360154137E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,1.4227235303554526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,1.4631226617117326E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,28.0E0,1.5026612990772117E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,29.0E0,1.5413577173664519E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,30.0E0,1.5792298056344332E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,31.0E0,1.6162950751281897E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,32.0E0,1.6525706671744866E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,33.0E0,1.6880733609067387E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,34.0E0,1.7228195808340712E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,35.0E0,1.75682540425602E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,36.0E0,1.7901065685254516E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,37.0E0,1.822678478162828E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,38.0E0,1.8545562118247583E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,39.0E0,1.8857545291296098E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,40.0E0,1.916287877343033E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,41.0E0,1.9461703979261222E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,42.0E0,1.9754159329489482E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,0.9787490123827193E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,0.9579472875312907E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,0.9375854265321657E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,0.9176542229221321E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,0.898144658925683E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,0.8790479017582464E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,0.860355299994513E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,0.8420583800010142E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,0.8241488424321112E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,0.806618558788618E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,0.7894595680381766E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,0.772664073296573E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,0.7562244385691751E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,0.7401331855516166E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,0.7243829904889236E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,0.7089666810922288E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,0.6938772335122585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,0.6791077693686635E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,0.6646515528345603E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,0.650501987775243E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,0.636652614940358E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,0.6230971092086927E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,0.6098292768847406E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,0.5968430530462648E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,0.5841324989420289E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,0.571691799438896E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,0.559515260517506E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,28.0E0,0.5475973068157448E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,29.0E0,0.5359324792192038E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,30.0E0,0.5245154324978804E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,31.0E0,0.5133409329883233E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,32.0E0,0.5024038563204923E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,33.0E0,0.49169918518852646E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,34.0E0,0.48122200716477387E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,35.0E0,0.4709675125562048E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,36.0E0,0.46093099230259715E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,37.0E0,0.4511078359157158E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,38.0E0,0.44149352945879333E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,39.0E0,0.4320836535655858E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,40.0E0,0.4228738814983387E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,41.0E0,0.41385997724393825E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,42.0E0,0.40503779364759757E0)
COMMIT
DISCONNECT
/*C10*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.5')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,17.0E0,395.76235786419824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,18.0E0,308.3341861396123E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,19.0E0,235.07941002268706E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,20.0E0,176.92172296697333E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,21.0E0,132.48194303050693E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,22.0E0,99.33909323164087E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,23.0E0,74.94213767564555E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,24.0E0,57.06663728565727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,25.0E0,43.9523343087473E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,26.0E0,34.279575065465025E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,27.0E0,27.088248092318903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,28.0E0,21.690480848289347E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,29.0E0,17.596464228197405E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,30.0E0,14.457496279444317E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,31.0E0,12.024431321266775E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,32.0E0,10.118172006037476E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,33.0E0,8.608991555312924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,34.0E0,7.402119018607767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,35.0E0,6.4276917319908815E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,36.0E0,5.633729816705782E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,37.0E0,4.981197951902105E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,38.0E0,4.4405113669652545E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,39.0E0,3.989045273734883E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,40.0E0,3.6093454662557445E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,41.0E0,3.2878321537041892E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,42.0E0,3.0138532936407834E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,43.0E0,2.778987476752723E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,44.0E0,2.5765263941835483E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,45.0E0,2.401087555277249E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,46.0E0,2.248322216010902E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,47.0E0,2.114693442938079E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,48.0E0,1.9973062331869678E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,49.0E0,1.893776557637284E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,50.0E0,1.8021297173214792E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,51.0E0,1.7207209301861586E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,52.0E0,1.6481728910502136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,53.0E0,1.5833263758564302E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,54.0E0,1.5252009343387272E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,55.0E0,1.4729634328333903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,56.0E0,1.425902741681995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,57.0E0,1.3834092596757925E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,58.0E0,1.3449582671982439E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,59.0E0,1.3100963260190794E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,60.0E0,1.2784301158523286E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,61.0E0,1.2496172295098256E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,62.0E0,1.2233585498167707E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,63.0E0,1.1993919098333632E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,64.0E0,1.1774867988614772E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,65.0E0,1.1574399243280877E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,66.0E0,1.1390714770203882E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,67.0E0,1.122221976639944E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,68.0E0,1.1067495980120803E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,69.0E0,1.0925278968907908E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,70.0E0,1.0794438691693962E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,71.0E0,1.0673962892441424E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,72.0E0,1.056294282898034E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,73.0E0,1.046056097855447E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,74.0E0,1.0366080414792926E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,75.0E0,1.0278835602344107E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,76.0E0,1.0198224397554234E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,77.0E0,1.0123701078161456E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,78.0E0,1.0054770253462313E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,79.0E0,0.999098152994122E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,80.0E0,0.9931924826855344E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,81.0E0,0.9877226252480511E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,82.0E0,0.9826544465238375E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,83.0E0,0.9779567455225582E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,84.0E0,0.9736009691139135E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,85.0E0,0.9695609585555717E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,86.0E0,0.9658127238235251E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,87.0E0,0.9623342422789899E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,88.0E0,0.9591052786863785E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,89.0E0,0.9561072240047759E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,90.0E0,0.9533229507224458E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,91.0E0,0.9507366828000673E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,92.0E0,0.9483338785415046E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,93.0E0,0.9461011249278151E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,94.0E0,0.944026042136441E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,95.0E0,0.9420971971277354E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,96.0E0,0.9403040253191391E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,97.0E0,0.9386367594866397E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,98.0E0,0.9370863651364657E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,99.0E0,0.9356444816795649E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,100.0E0,0.9343033688192599E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,101.0E0,0.9330558576302728E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,102.0E0,0.9318953058664253E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,103.0E0,0.9308155570860054E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,104.0E0,0.9298109032290027E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,105.0E0,0.9288760503201209E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,106.0E0,0.9280060870063155E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,107.0E0,0.9271964556683193E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,108.0E0,0.926442925872628E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,109.0E0,0.9257415699543883E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,110.0E0,0.9250887405427456E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,111.0E0,0.924481049858938E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,112.0E0,0.923915350634149E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,113.0E0,0.9233887185088416E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,114.0E0,0.9228984357885754E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,115.0E0,0.9224419764430369E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,116.0E0,0.9220169922455402E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,17.0E0,132.26792750449457E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,18.0E0,167.92485994384663E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,19.0E0,206.67115169898935E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,20.0E0,247.26766479083352E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,21.0E0,288.5846937108722E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,22.0E0,329.7083699156947E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,23.0E0,369.9631060035236E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,24.0E0,408.8858959264801E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,25.0E0,446.1830146775609E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,26.0E0,481.6866065962664E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,27.0E0,515.3183194764881E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,28.0E0,547.0614327154173E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,29.0E0,576.9405220552187E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,30.0E0,605.0070397201833E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,31.0E0,631.3292607367682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,32.0E0,655.9853473884892E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,33.0E0,679.0586016067591E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,34.0E0,700.6342392147119E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,35.0E0,720.7972189687924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,36.0E0,739.6308022278924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,37.0E0,757.2156191004601E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,38.0E0,773.6290860532927E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,39.0E0,788.9450675022316E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,40.0E0,803.2337065719386E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,41.0E0,816.561372712665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,42.0E0,828.9906894247881E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,43.0E0,840.5806161630138E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,44.0E0,851.3865660607685E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,45.0E0,861.4605464417489E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,46.0E0,870.8513128572072E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,47.0E0,879.6045300739743E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,48.0E0,887.7629353624721E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,49.0E0,895.3665008187951E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,50.0E0,902.4525924559865E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,51.0E0,909.0561245254474E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,52.0E0,915.2097080568315E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,53.0E0,920.9437929882439E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,54.0E0,926.2868035371606E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,55.0E0,931.2652666640386E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,56.0E0,935.9039336257123E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,57.0E0,940.2258947188737E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,58.0E0,944.2526873862678E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,59.0E0,948.0043979076116E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,60.0E0,951.4997569295722E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,61.0E0,954.7562291088797E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,62.0E0,957.7900971530188E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,63.0E0,960.616540546477E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,64.0E0,963.2497092490522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,65.0E0,965.7027926475795E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,66.0E0,967.9880840348753E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,67.0E0,970.1170408800543E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,68.0E0,972.1003411441243E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,69.0E0,973.9479358831452E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,70.0E0,975.6690983697849E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,71.0E0,977.2724699522497E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,72.0E0,978.7661028578484E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,73.0E0,980.1575001370175E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,74.0E0,981.4536529323833E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,75.0E0,982.6610752466862E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,76.0E0,983.7858363729437E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,77.0E0,984.8335911403866E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,78.0E0,985.8096081201352E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,79.0E0,986.7187959256923E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,80.0E0,987.5657277347301E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,81.0E0,988.3546641506593E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,82.0E0,989.0895745148194E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,83.0E0,989.7741567730153E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,84.0E0,990.4118559933332E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,85.0E0,991.0058816258979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,86.0E0,991.5592235892202E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,87.0E0,992.0746672622549E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,88.0E0,992.5548074560212E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,89.0E0,993.0020614337928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,90.0E0,993.41868104417E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,91.0E0,993.8067640271942E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,92.0E0,994.1682645494933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,93.0E0,994.5050030208296E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,94.0E0,994.8186752408241E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,95.0E0,995.1108609213472E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,96.0E0,995.383031627074E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,97.0E0,995.6365581737501E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,98.0E0,995.8727175210995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,99.0E0,996.0926991947905E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,100.0E0,996.2976112695388E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,101.0E0,996.4884859432711E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,102.0E0,996.6662847302309E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,103.0E0,996.8319032990264E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,104.0E0,996.9861759798175E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,105.0E0,997.1298799632779E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,106.0E0,997.2637392123332E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,107.0E0,997.388428106294E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,108.0E0,997.5045748356891E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,109.0E0,997.6127645648063E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,110.0E0,997.713542377823E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,111.0E0,997.807416023328E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,112.0E0,997.8948584709848E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,113.0E0,997.976310293232E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,114.0E0,998.0521818839384E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,115.0E0,998.1228555251756E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,116.0E0,998.1886873125196E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,17.0E0,471.9697146313156E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,18.0E0,523.7409539165493E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,19.0E0,558.2494382783325E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,20.0E0,575.8106122422033E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,21.0E0,578.9333632586319E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,22.0E0,570.9525368526758E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,23.0E0,555.094756320843E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,24.0E0,534.0474667878725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,25.0E0,509.8646510137026E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,26.0E0,484.03381833827905E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,27.0E0,457.5934324312042E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,28.0E0,431.24808643630456E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,29.0E0,405.46301371659354E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,30.0E0,380.53546400038294E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,31.0E0,356.6463079419744E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,32.0E0,333.8964806054817E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,33.0E0,312.332406837938E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,34.0E0,291.96364176669175E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,35.0E0,272.7750892992273E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,36.0E0,254.73546795541165E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,37.0E0,237.8031829476482E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,38.0E0,221.93040257975227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,39.0E0,207.06588722404283E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,40.0E0,193.15694796181532E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,41.0E0,180.15079513364034E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,42.0E0,167.99545728157963E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,43.0E0,156.64039636024197E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,44.0E0,146.03690754505814E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,45.0E0,136.13836600298285E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,46.0E0,126.90036492679201E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,47.0E0,118.2807764830976E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,48.0E0,110.23975840435008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,49.0E0,102.73972262357653E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,50.0E0,95.74527782670111E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,51.0E0,89.22315454437496E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,52.0E0,83.14211905212775E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,53.0E0,77.47288063590862E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,54.0E0,72.18799552851019E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,55.0E0,67.26176990313807E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,56.0E0,62.67016363261544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,57.0E0,58.390696021459824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,58.0E0,54.40235434654269E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,59.0E0,50.6855057663779E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,60.0E0,47.221812954583406E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,61.0E0,43.994153661618235E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,62.0E0,40.986544297173694E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,63.0E0,38.18406754369976E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,64.0E0,35.572803952095924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,65.0E0,33.13976742809982E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,66.0E0,30.87284448811334E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,67.0E0,28.760737143313815E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,68.0E0,26.79290925787227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,69.0E0,24.959536219974215E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,70.0E0,23.25145776105538E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,71.0E0,21.660133758516128E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,72.0E0,20.17760285926326E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,73.0E0,18.79644376513679E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,74.0E0,17.509739026145613E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,75.0E0,16.3110411930887E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,76.0E0,15.194341187310323E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,77.0E0,14.154038751808226E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,78.0E0,13.184914854529572E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,79.0E0,12.282105921324511E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,80.0E0,11.441079782594336E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,81.0E0,10.65761322410266E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,82.0E0,9.927771038666293E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,83.0E0,9.247886481472616E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,84.0E0,8.614543037562745E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,85.0E0,8.02455741555542E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,86.0E0,7.474963686964814E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,87.0E0,6.962998495477271E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,88.0E0,6.486087265303198E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,89.0E0,6.04183134221411E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,90.0E0,5.627996005116756E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,91.0E0,5.242499290015016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,92.0E0,4.883401571975424E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,93.0E0,4.548895854251702E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,94.0E0,4.237298717049795E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,95.0E0,3.9470418815359536E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,96.0E0,3.676664347618108E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,97.0E0,3.424805066774679E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,98.0E0,3.1901961137748356E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,99.0E0,2.9716563235406577E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,100.0E0,2.768085361653078E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,101.0E0,2.578458199109669E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,102.0E0,2.4018199639115907E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,103.0E0,2.237281143897676E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,104.0E0,2.0840131169634915E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,105.0E0,1.9412439864102788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,106.0E0,1.8082547006690575E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,107.0E0,1.6843754380465028E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,108.0E0,1.5689822384473222E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,109.0E0,1.4614938652488714E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,110.0E0,1.3613688816430503E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,111.0E0,1.2681029268240134E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,112.0E0,1.1812261783918956E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,113.0E0,1.1003009882682773E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,114.0E0,1.024919680282179E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,115.0E0,0.9547024983903064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,116.0E0,0.8892956952459656E0)
COMMIT
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.5')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,998.3769412571769E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,997.4221507109312E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,995.9603411472075E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.089125256923849E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.22581095256812697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.43533403256204956E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.5339334859002562E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,2.3520383365029374E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,3.604324820234894E0)
COMMIT
DISCONNECT
/*C11*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.5')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,998.3769412571769E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,997.4221507109312E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,995.9603411472075E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,993.7253965939258E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,990.3157013881821E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.089125256923849E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.22581095256812697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.43533403256204956E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,0.7562666879165336E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,1.247283678944166E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.5339334859002562E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,2.3520383365029374E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,3.604324820234894E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,5.518336718161435E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,8.437014932877004E0)
COMMIT
DISCONNECT
/*C12*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.5')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,998.3769412571769E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,997.4221507109312E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,995.9603411472075E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.089125256923849E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.22581095256812697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.43533403256204956E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.5339334859002562E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,2.3520383365029374E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,3.604324820234894E0)
COMMIT
DISCONNECT
/*C13*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.5')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,998.3769412571769E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,997.4221507109312E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,995.9603411472075E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,993.7253965939258E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,990.3157013881821E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.089125256923849E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.22581095256812697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.43533403256204956E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,0.7562666879165336E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,1.247283678944166E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.5339334859002562E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,2.3520383365029374E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,3.604324820234894E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,5.518336718161435E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,8.437014932877004E0)
COMMIT
DISCONNECT
/*C14*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.5')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,6699.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,6700.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,6701.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,6702.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,6703.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,6704.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6705.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,6706.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,6707.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,6708.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,6709.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,6710.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,6711.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,6712.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,6713.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,6714.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,6715.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,6716.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,6717.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,6718.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,6719.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,6720.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,6721.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,6722.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,6723.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,6724.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,6725.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,6726.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,6727.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,6728.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,6729.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,6730.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,6731.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,6732.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,6733.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,6734.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,6735.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,6736.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,6737.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,6738.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,6739.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,6740.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,6741.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,6742.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,6743.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,6744.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,6745.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,6746.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,6747.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,6748.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,6749.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,6750.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,6751.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,6752.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,6753.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,6754.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,6755.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,6756.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,6757.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,6758.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,6759.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,6760.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,6761.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,6762.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,6763.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,6764.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,6765.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,6766.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,6767.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,6768.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,6769.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,6770.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,6771.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,6772.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,6773.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,6774.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,6775.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,6776.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,6777.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,6778.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,6779.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,6780.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,6781.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,6782.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,6783.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,6784.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,6785.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,6786.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,6787.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,6788.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,6789.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,6790.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,6791.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,6792.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,6793.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,6794.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,6795.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,6796.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,6797.0E0,640.7885253387933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,6798.0E0,640.7885253387933E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,6699.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,6700.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,6701.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,6702.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,6703.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,6704.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6705.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,6706.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,6707.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,6708.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,6709.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,6710.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,6711.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,6712.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,6713.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,6714.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,6715.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,6716.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,6717.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,6718.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,6719.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,6720.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,6721.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,6722.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,6723.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,6724.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,6725.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,6726.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,6727.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,6728.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,6729.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,6730.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,6731.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,6732.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,6733.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,6734.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,6735.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,6736.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,6737.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,6738.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,6739.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,6740.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,6741.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,6742.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,6743.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,6744.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,6745.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,6746.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,6747.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,6748.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,6749.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,6750.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,6751.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,6752.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,6753.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,6754.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,6755.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,6756.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,6757.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,6758.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,6759.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,6760.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,6761.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,6762.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,6763.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,6764.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,6765.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,6766.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,6767.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,6768.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,6769.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,6770.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,6771.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,6772.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,6773.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,6774.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,6775.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,6776.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,6777.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,6778.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,6779.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,6780.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,6781.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,6782.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,6783.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,6784.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,6785.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,6786.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,6787.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,6788.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,6789.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,6790.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,6791.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,6792.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,6793.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,6794.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,6795.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,6796.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,6797.0E0,359.21147466251966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,6798.0E0,359.21147466251966E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,6699.0E0,8.476798493576988E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,6700.0E0,8.34671638929977E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,6701.0E0,8.218630481330128E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,6702.0E0,8.092510136709637E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,6703.0E0,7.968325192562899E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,6704.0E0,7.846045948883902E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6705.0E0,7.725643161432927E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,6706.0E0,7.607088034742605E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,6707.0E0,7.490352215231105E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,6708.0E0,7.375407784421148E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,6709.0E0,7.262227252263019E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,6710.0E0,7.150783550560091E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,6711.0E0,7.041050026495219E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,6712.0E0,6.933000436256425E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,6713.0E0,6.826608938760449E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,6714.0E0,6.7218500894726386E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,6715.0E0,6.6186988343216165E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,6716.0E0,6.517130503707379E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,6717.0E0,6.417120806601335E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,6718.0E0,6.318645824736842E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,6719.0E0,6.221682006888964E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,6720.0E0,6.1262061632419494E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,6721.0E0,6.032195459843182E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,6722.0E0,5.939627413142231E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,6723.0E0,5.848479884613645E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,6724.0E0,5.7587310754623885E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,6725.0E0,5.670359521410402E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,6726.0E0,5.583344087563245E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,6727.0E0,5.497663963355452E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,6728.0E0,5.413298657573515E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,6729.0E0,5.330227993455216E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,6730.0E0,5.248432103864166E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,6731.0E0,5.1678914265383785E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,6732.0E0,5.088586699411763E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,6733.0E0,5.010498956007421E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,6734.0E0,4.933609520901659E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,6735.0E0,4.85790000525758E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,6736.0E0,4.7833523024271766E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,6737.0E0,4.709948583620997E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,6738.0E0,4.6376712936442055E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,6739.0E0,4.5665031466981045E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,6740.0E0,4.496427122246028E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,6741.0E0,4.427426460942787E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,6742.0E0,4.359484660626481E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,6743.0E0,4.292585472371803E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,6744.0E0,4.226712896604071E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,6745.0E0,4.1618511792726205E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,6746.0E0,4.097984808083217E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,6747.0E0,4.035098508788065E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,6748.0E0,3.973177241532897E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,6749.0E0,3.912206197259911E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,6750.0E0,3.852170794166205E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,6751.0E0,3.793056674216295E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,6752.0E0,3.7348496997083265E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,6753.0E0,3.677535949892823E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,6754.0E0,3.621101717643511E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,6755.0E0,3.5655335061790144E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,6756.0E0,3.5108180258350878E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,6757.0E0,3.456942190886182E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,6758.0E0,3.4038931164159127E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,6759.0E0,3.3516581152354914E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,6760.0E0,3.3002246948494685E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,6761.0E0,3.2495805544680458E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,6762.0E0,3.19971358206521E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,6763.0E0,3.1506118514820286E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,6764.0E0,3.1022636195744113E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,6765.0E0,3.0546573234046103E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,6766.0E0,3.0077815774758327E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,6767.0E0,2.9616251710093016E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,6768.0E0,2.916177065263097E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,6769.0E0,2.8714263908921132E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,6770.0E0,2.8273624453485767E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,6771.0E0,2.7839746903224212E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,6772.0E0,2.7412527492209365E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,6773.0E0,2.699186404687129E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,6774.0E0,2.6577655961561408E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,6775.0E0,2.6169804174491532E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,6776.0E0,2.5768211144042515E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,6777.0E0,2.537278082543617E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,6778.0E0,2.4983418647765156E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,6779.0E0,2.460003149137554E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,6780.0E0,2.4222527665596384E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,6781.0E0,2.3850816886810936E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,6782.0E0,2.348481025686465E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,6783.0E0,2.3124420241804175E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,6784.0E0,2.276956065094283E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,6785.0E0,2.242014661624717E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,6786.0E0,2.207609457204023E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,6787.0E0,2.1737322235015743E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,6788.0E0,2.1403748584559608E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,6789.0E0,2.107529384337277E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,6790.0E0,2.0751879458391815E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,6791.0E0,2.043342808200241E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,6792.0E0,2.011986355354059E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,6793.0E0,1.9811110881078407E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,6794.0E0,1.9507096223488858E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,6795.0E0,1.9207746872786093E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,6796.0E0,1.8912991236736724E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,6797.0E0,1.862275882173757E-43)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,6798.0E0,1.8336980215956814E-43)
COMMIT
DISCONNECT
/*C15*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.5')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,998.3769412571769E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,997.4221507109312E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,995.9603411472075E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,993.7253965939258E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,990.3157013881821E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,985.1306746943073E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,977.284829476289E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,965.501012220447E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,947.9995069975694E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,922.4325064030115E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,885.9699146218841E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,835.706833965421E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,769.5594050620953E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,687.592490852398E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,593.2036972764674E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,493.1412037936576E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,395.76235786419824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,308.3341861396123E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,235.07941002268706E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,176.92172296697333E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,132.48194303050693E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,99.33909323164087E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,74.94213767564555E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,57.06663728565727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,43.9523343087473E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,34.279575065465025E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,27.088248092318903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,28.0E0,21.690480848289347E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,29.0E0,17.596464228197405E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,30.0E0,14.457496279444317E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,31.0E0,12.024431321266775E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,32.0E0,10.118172006037476E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,33.0E0,8.608991555312924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,34.0E0,7.402119018607767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,35.0E0,6.4276917319908815E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,36.0E0,5.633729816705782E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,37.0E0,4.981197951902105E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,38.0E0,4.4405113669652545E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,39.0E0,3.989045273734883E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,40.0E0,3.6093454662557445E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,41.0E0,3.2878321537041892E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,42.0E0,3.0138532936407834E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,43.0E0,2.778987476752723E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,44.0E0,2.5765263941835483E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,45.0E0,2.401087555277249E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,46.0E0,2.248322216010902E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,47.0E0,2.114693442938079E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,48.0E0,1.9973062331869678E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,49.0E0,1.893776557637284E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,50.0E0,1.8021297173214792E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,51.0E0,1.7207209301861586E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,52.0E0,1.6481728910502136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,53.0E0,1.5833263758564302E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,54.0E0,1.5252009343387272E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,55.0E0,1.4729634328333903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,56.0E0,1.425902741681995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,57.0E0,1.3834092596757925E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,58.0E0,1.3449582671982439E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,59.0E0,1.3100963260190794E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,60.0E0,1.2784301158523286E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,61.0E0,1.2496172295098256E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,62.0E0,1.2233585498167707E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,63.0E0,1.1993919098333632E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,64.0E0,1.1774867988614772E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,65.0E0,1.1574399243280877E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,66.0E0,1.1390714770203882E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,67.0E0,1.122221976639944E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,68.0E0,1.1067495980120803E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,69.0E0,1.0925278968907908E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,70.0E0,1.0794438691693962E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,71.0E0,1.0673962892441424E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,72.0E0,1.056294282898034E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,73.0E0,1.046056097855447E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,74.0E0,1.0366080414792926E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,75.0E0,1.0278835602344107E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.089125256923849E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.22581095256812697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.43533403256204956E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,0.7562666879165336E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,1.247283678944166E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,1.9972081882385997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,3.13951108400922E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,4.872499575909113E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,7.485785065204359E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,11.391412801664803E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,17.152897476747814E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,25.49623965669267E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,37.27571024386149E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,53.36362600155543E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,74.45613350083151E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,100.8454437820823E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,132.26792750449457E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,167.92485994384663E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,206.67115169898935E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,247.26766479083352E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,288.5846937108722E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,329.7083699156947E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,369.9631060035236E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,408.8858959264801E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,446.1830146775609E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,481.6866065962664E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,515.3183194764881E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,28.0E0,547.0614327154173E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,29.0E0,576.9405220552187E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,30.0E0,605.0070397201833E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,31.0E0,631.3292607367682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,32.0E0,655.9853473884892E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,33.0E0,679.0586016067591E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,34.0E0,700.6342392147119E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,35.0E0,720.7972189687924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,36.0E0,739.6308022278924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,37.0E0,757.2156191004601E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,38.0E0,773.6290860532927E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,39.0E0,788.9450675022316E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,40.0E0,803.2337065719386E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,41.0E0,816.561372712665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,42.0E0,828.9906894247881E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,43.0E0,840.5806161630138E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,44.0E0,851.3865660607685E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,45.0E0,861.4605464417489E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,46.0E0,870.8513128572072E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,47.0E0,879.6045300739743E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,48.0E0,887.7629353624721E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,49.0E0,895.3665008187951E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,50.0E0,902.4525924559865E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,51.0E0,909.0561245254474E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,52.0E0,915.2097080568315E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,53.0E0,920.9437929882439E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,54.0E0,926.2868035371606E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,55.0E0,931.2652666640386E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,56.0E0,935.9039336257123E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,57.0E0,940.2258947188737E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,58.0E0,944.2526873862678E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,59.0E0,948.0043979076116E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,60.0E0,951.4997569295722E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,61.0E0,954.7562291088797E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,62.0E0,957.7900971530188E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,63.0E0,960.616540546477E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,64.0E0,963.2497092490522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,65.0E0,965.7027926475795E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,66.0E0,967.9880840348753E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,67.0E0,970.1170408800543E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,68.0E0,972.1003411441243E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,69.0E0,973.9479358831452E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,70.0E0,975.6690983697849E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,71.0E0,977.2724699522497E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,72.0E0,978.7661028578484E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,73.0E0,980.1575001370175E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,74.0E0,981.4536529323833E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,75.0E0,982.6610752466862E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.5339334859002562E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,2.3520383365029374E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,3.604324820234894E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,5.518336718161435E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,8.437014932877004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,12.872117117457734E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,19.575659439706836E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,29.62648820364946E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,44.51470793723243E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,66.17608079532987E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,96.87718790137542E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,138.79692637789503E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,193.16488469405192E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,259.04388314605455E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,332.3401692227092E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,406.01335242426956E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,471.9697146313156E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,523.7409539165493E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,558.2494382783325E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,575.8106122422033E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,578.9333632586319E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,570.9525368526758E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,555.094756320843E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,534.0474667878725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,509.8646510137026E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,484.03381833827905E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,457.5934324312042E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,28.0E0,431.24808643630456E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,29.0E0,405.46301371659354E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,30.0E0,380.53546400038294E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,31.0E0,356.6463079419744E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,32.0E0,333.8964806054817E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,33.0E0,312.332406837938E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,34.0E0,291.96364176669175E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,35.0E0,272.7750892992273E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,36.0E0,254.73546795541165E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,37.0E0,237.8031829476482E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,38.0E0,221.93040257975227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,39.0E0,207.06588722404283E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,40.0E0,193.15694796181532E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,41.0E0,180.15079513364034E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,42.0E0,167.99545728157963E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,43.0E0,156.64039636024197E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,44.0E0,146.03690754505814E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,45.0E0,136.13836600298285E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,46.0E0,126.90036492679201E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,47.0E0,118.2807764830976E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,48.0E0,110.23975840435008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,49.0E0,102.73972262357653E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,50.0E0,95.74527782670111E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,51.0E0,89.22315454437496E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,52.0E0,83.14211905212775E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,53.0E0,77.47288063590862E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,54.0E0,72.18799552851019E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,55.0E0,67.26176990313807E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,56.0E0,62.67016363261544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,57.0E0,58.390696021459824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,58.0E0,54.40235434654269E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,59.0E0,50.6855057663779E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,60.0E0,47.221812954583406E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,61.0E0,43.994153661618235E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,62.0E0,40.986544297173694E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,63.0E0,38.18406754369976E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,64.0E0,35.572803952095924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,65.0E0,33.13976742809982E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,66.0E0,30.87284448811334E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,67.0E0,28.760737143313815E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,68.0E0,26.79290925787227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,69.0E0,24.959536219974215E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,70.0E0,23.25145776105538E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,71.0E0,21.660133758516128E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,72.0E0,20.17760285926326E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,73.0E0,18.79644376513679E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,74.0E0,17.509739026145613E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,75.0E0,16.3110411930887E0)
COMMIT
DISCONNECT
/*C16*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.5')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,998.3769412571769E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,997.4221507109312E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,995.9603411472075E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,993.7253965939258E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,990.3157013881821E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,985.1306746943073E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,977.284829476289E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,965.501012220447E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,947.9995069975694E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,922.4325064030115E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,885.9699146218841E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,835.706833965421E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,769.5594050620953E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.089125256923849E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.22581095256812697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.43533403256204956E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,0.7562666879165336E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,1.247283678944166E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,1.9972081882385997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,3.13951108400922E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,4.872499575909113E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,7.485785065204359E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,11.391412801664803E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,17.152897476747814E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,25.49623965669267E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,37.27571024386149E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.5339334859002562E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,2.3520383365029374E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,3.604324820234894E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,5.518336718161435E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,8.437014932877004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,12.872117117457734E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,19.575659439706836E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,29.62648820364946E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,44.51470793723243E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,66.17608079532987E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,96.87718790137542E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,138.79692637789503E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,193.16488469405192E0)
COMMIT
DISCONNECT
/*C17*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1238.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','8.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.0')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1237.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,1237.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.06893959556620859E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.13312652329558497E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.19288843018666105E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,0.24853037538640044E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,0.3003363873875371E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,0.3485709138734174E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,0.3934801716110345E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,0.43529340328304245E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,0.4742240476742799E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,0.5104708291860531E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,0.5442187722398297E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,0.5756401457482853E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,0.6048953424749338E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,0.6321336977710359E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,0.9310604044337922E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,0.866873476704416E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,0.80711156981334E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,0.7514696246135999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,0.6996636126124658E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,0.6514290861265857E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,0.6065198283889668E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,0.5647065967169578E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,0.5257759523257204E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,0.48952917081394665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,0.4557812277601719E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,0.42435985425171563E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,0.3951046575250678E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,0.3678663022289643E0)
COMMIT
DISCONNECT
/*C18*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1981.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.0')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,1.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,2.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,3.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,4.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,5.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,6.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,7.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,8.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,9.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,10.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,11.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,12.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,13.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,14.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,15.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,16.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,17.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,18.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,19.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,20.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,21.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,22.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,23.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,24.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,25.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,26.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,27.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,28.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,29.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,30.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,31.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,32.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,33.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,34.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,35.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,36.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,37.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,38.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,39.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,40.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,41.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,42.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,43.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,44.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,45.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,46.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,47.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,48.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,49.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,50.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,51.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,52.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,53.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,54.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,55.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,56.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,57.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,58.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,59.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,60.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,61.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,62.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,63.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,64.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,65.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,66.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,67.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,68.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,69.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,70.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,71.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,72.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,73.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,74.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,75.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,76.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,77.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,78.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,79.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,80.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,81.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,82.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,83.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,84.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,85.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,86.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,87.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,88.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,89.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,90.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,91.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,92.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,93.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,94.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,95.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,96.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,97.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,98.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,99.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,100.0E0,1980.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,1.0E0,0.06893959556620857E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,2.0E0,0.13312652329558494E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,3.0E0,0.19288843018666083E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,4.0E0,0.24853037538640002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,5.0E0,0.3003363873875367E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,6.0E0,0.34857091387341665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,7.0E0,0.3934801716110337E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,8.0E0,0.43529340328304167E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,9.0E0,0.4742240476742793E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,10.0E0,0.5104708291860526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,11.0E0,0.5442187722398293E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,12.0E0,0.5756401457482851E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,13.0E0,0.6048953424749338E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,14.0E0,0.632133697771036E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,15.0E0,0.657494251869137E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,16.0E0,0.6811064596243822E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,17.0E0,0.7030908513265288E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,18.0E0,0.7235596479559623E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,19.0E0,0.7426173340240348E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,20.0E0,0.760361190922149E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,21.0E0,0.7768817935019233E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,22.0E0,0.7922634724213417E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,23.0E0,0.8065847446169255E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,24.0E0,0.8199187140993521E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,25.0E0,0.83233344511837E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,26.0E0,0.8438923096018743E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,27.0E0,0.8546543106426837E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,28.0E0,0.8646743836842565E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,29.0E0,0.8740036769428011E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,30.0E0,0.8826898124971815E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,31.0E0,0.8907771293794112E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,32.0E0,0.8983069099065669E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,33.0E0,0.9053175904094839E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,34.0E0,0.9118449574338875E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,35.0E0,0.9179223304155182E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,36.0E0,0.9235807317616882E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,37.0E0,0.9288490452075016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,38.0E0,0.9337541632550448E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,39.0E0,0.9383211244481859E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,40.0E0,0.9425732411837062E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,41.0E0,0.946532218711177E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,42.0E0,0.95021826592905E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,43.0E0,0.9536501985424851E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,44.0E0,0.9568455351095392E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,45.0E0,0.9598205864659632E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,46.0E0,0.9625905389850838E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,47.0E0,0.9651695320978002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,48.0E0,0.9675707304683595E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,49.0E0,0.9698063911943775E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,50.0E0,0.9718879263741207E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,51.0E0,0.9738259613604148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,52.0E0,0.9756303889985616E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,53.0E0,0.9773104201251072E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,54.0E0,0.9788746305852492E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,55.0E0,0.9803310050088874E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,56.0E0,0.981686977568767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,57.0E0,0.9829494699287699E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,58.0E0,0.9841249265760693E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,59.0E0,0.9852193477174988E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,60.0E0,0.9862383199080584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,61.0E0,0.9871870445679076E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,62.0E0,0.9880703645334027E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,63.0E0,0.9888927887777208E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,64.0E0,0.9896585154272527E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,65.0E0,0.9903714531912486E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,66.0E0,0.9910352413141287E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,67.0E0,0.9916532681522768E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,68.0E0,0.9922286884701522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,69.0E0,0.992764439544037E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,70.0E0,0.9932632561555635E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,71.0E0,0.9937276845516291E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,72.0E0,0.9941600954419004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,73.0E0,0.994562696100278E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,74.0E0,0.9949375416320928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,75.0E0,0.9952865454645452E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,76.0E0,0.9956114891139356E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,77.0E0,0.9959140312795584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,78.0E0,0.996195716310639E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,79.0E0,0.9964579820895997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,80.0E0,0.9967021673718292E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,81.0E0,0.9969295186194573E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,82.0E0,0.9971411963640223E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,83.0E0,0.9973382811304876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,84.0E0,0.997521778952863E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,85.0E0,0.9976926265095749E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,86.0E0,0.9978516959048228E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,87.0E0,0.9979997991202978E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,88.0E0,0.9981376921599937E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,89.0E0,0.9982660789093009E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,90.0E0,0.998385614728035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,91.0E0,0.9984969097957703E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,92.0E0,0.9986005322265489E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,93.0E0,0.9986970109688553E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,94.0E0,0.9987868385056914E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,95.0E0,0.9988704733684656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,96.0E0,0.9989483424776233E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,97.0E0,0.9990208433218896E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,98.0E0,0.9990883459872727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,99.0E0,0.9991511950462061E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,100.0E0,0.9992097113164333E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,1.0E0,0.9310604044337922E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,2.0E0,0.866873476704416E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,3.0E0,0.8071115698133402E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,4.0E0,0.7514696246136002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,5.0E0,0.6996636126124662E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,6.0E0,0.6514290861265861E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,7.0E0,0.6065198283889675E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,8.0E0,0.5647065967169588E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,9.0E0,0.5257759523257212E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,10.0E0,0.48952917081394726E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,11.0E0,0.45578122776017227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,12.0E0,0.42435985425171585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,13.0E0,0.3951046575250679E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,14.0E0,0.3678663022289643E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,15.0E0,0.3425057481308623E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,16.0E0,0.3188935403756193E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,17.0E0,0.2969091486734728E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,18.0E0,0.27644035204403977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,19.0E0,0.25738266597596426E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,20.0E0,0.23963880907784924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,21.0E0,0.22311820649807365E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,22.0E0,0.20773652757865682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,23.0E0,0.1934152553830725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,24.0E0,0.18008128590064404E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,25.0E0,0.16766655488162513E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,26.0E0,0.15610769039811997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,27.0E0,0.14534568935731143E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,28.0E0,0.13532561631573856E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,29.0E0,0.12599632305719438E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,30.0E0,0.11731018750281202E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,31.0E0,0.1092228706205816E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,32.0E0,0.10169309009342736E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,33.0E0,0.09468240959050828E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,34.0E0,0.08815504256610454E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,35.0E0,0.08207766958447524E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,36.0E0,0.0764192682383047E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,37.0E0,0.0711509547924903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,38.0E0,0.0662458367449464E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,39.0E0,0.061678875551804714E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,40.0E0,0.05742675881628476E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,41.0E0,0.053467781288811904E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,42.0E0,0.049781734070938596E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,43.0E0,0.04634980145750351E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,44.0E0,0.04315446489044915E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,45.0E0,0.040179413534025495E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,46.0E0,0.03740946101490228E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,47.0E0,0.03483046790218517E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,48.0E0,0.032429269531626795E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,49.0E0,0.030193608805608806E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,50.0E0,0.028112073625865812E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,51.0E0,0.026174038639571143E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,52.0E0,0.02436961100142477E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,53.0E0,0.022689579874880714E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,54.0E0,0.021125369414739338E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,55.0E0,0.019668994991100426E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,56.0E0,0.01831302243122017E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,57.0E0,0.017050530071216943E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,58.0E0,0.015875073423917786E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,59.0E0,0.014780652282489008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,60.0E0,0.013761680091929452E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,61.0E0,0.01281295543208031E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,62.0E0,0.011929635466584829E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,63.0E0,0.011107211222266168E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,64.0E0,0.010341484572734672E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,65.0E0,0.009628546808739405E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,66.0E0,0.008964758685857615E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,67.0E0,0.00834673184770876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,68.0E0,0.007771311529830729E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,69.0E0,0.007235560455947627E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,70.0E0,0.00673674384442201E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,71.0E0,0.006272315448356526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,72.0E0,0.00583990455808512E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,73.0E0,0.005437303899707314E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,74.0E0,0.005062458367892631E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,75.0E0,0.004713454535440929E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,76.0E0,0.00438851088604941E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,77.0E0,0.00408596872042863E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,78.0E0,0.0038042836893473725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,79.0E0,0.0035420179103858255E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,80.0E0,0.0032978326281566757E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,81.0E0,0.003070481380527544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,82.0E0,0.0028588036359613674E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,83.0E0,0.0026617188694958833E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,84.0E0,0.002478221047122727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,85.0E0,0.0023073734904112E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,86.0E0,0.002148304095162788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,87.0E0,0.0020002008796897127E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,88.0E0,0.0018623078399933569E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,89.0E0,0.0017339210906850181E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,90.0E0,0.0016143852719500225E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,91.0E0,0.0015030902042142528E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,92.0E0,0.001399467773436665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,93.0E0,0.0013029890311284402E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,94.0E0,0.0012131614942956475E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,95.0E0,0.0011295266315227868E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,96.0E0,0.0010516575223647004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,97.0E0,9.79156678099048E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,98.0E0,9.116540127152544E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,99.0E0,8.488049537826418E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,100.0E0,7.902886835545395E-4)
COMMIT
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1981.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.0')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,1.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,2.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,3.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,4.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,5.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,6.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,7.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,8.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,9.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,10.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,11.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,12.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,13.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,14.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,15.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,16.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,17.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,18.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,19.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,20.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,21.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,22.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,23.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,24.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,25.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,26.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,27.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,28.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,29.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,30.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,31.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,32.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,33.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,34.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,35.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,36.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,37.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,38.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,39.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,40.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,41.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,42.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,43.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,44.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,45.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,46.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,47.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,48.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,49.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,50.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,51.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,52.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,53.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,54.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,55.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,56.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,57.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,58.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,59.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,60.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,61.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,62.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,63.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,64.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,65.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,66.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,67.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,68.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,69.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,70.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,71.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,72.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,73.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,74.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,75.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,76.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,77.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,78.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,79.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,80.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,81.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,82.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,83.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,84.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,85.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,86.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,87.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,88.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,89.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,90.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,91.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,92.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,93.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,94.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,95.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,96.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,97.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,98.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,99.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,100.0E0,1980.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,1.0E0,0.06893959556620857E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,2.0E0,0.13312652329558494E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,3.0E0,0.19288843018666083E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,4.0E0,0.24853037538640002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,5.0E0,0.3003363873875367E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,6.0E0,0.34857091387341665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,7.0E0,0.3934801716110337E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,8.0E0,0.43529340328304167E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,9.0E0,0.4742240476742793E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,10.0E0,0.5104708291860526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,11.0E0,0.5442187722398293E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,12.0E0,0.5756401457482851E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,13.0E0,0.6048953424749338E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,14.0E0,0.632133697771036E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,15.0E0,0.657494251869137E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,16.0E0,0.6811064596243822E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,17.0E0,0.7030908513265288E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,18.0E0,0.7235596479559623E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,19.0E0,0.7426173340240348E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,20.0E0,0.760361190922149E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,21.0E0,0.7768817935019233E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,22.0E0,0.7922634724213417E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,23.0E0,0.8065847446169255E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,24.0E0,0.8199187140993521E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,25.0E0,0.83233344511837E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,26.0E0,0.8438923096018743E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,27.0E0,0.8546543106426837E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,28.0E0,0.8646743836842565E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,29.0E0,0.8740036769428011E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,30.0E0,0.8826898124971815E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,31.0E0,0.8907771293794112E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,32.0E0,0.8983069099065669E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,33.0E0,0.9053175904094839E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,34.0E0,0.9118449574338875E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,35.0E0,0.9179223304155182E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,36.0E0,0.9235807317616882E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,37.0E0,0.9288490452075016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,38.0E0,0.9337541632550448E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,39.0E0,0.9383211244481859E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,40.0E0,0.9425732411837062E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,41.0E0,0.946532218711177E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,42.0E0,0.95021826592905E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,43.0E0,0.9536501985424851E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,44.0E0,0.9568455351095392E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,45.0E0,0.9598205864659632E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,46.0E0,0.9625905389850838E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,47.0E0,0.9651695320978002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,48.0E0,0.9675707304683595E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,49.0E0,0.9698063911943775E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,50.0E0,0.9718879263741207E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,51.0E0,0.9738259613604148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,52.0E0,0.9756303889985616E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,53.0E0,0.9773104201251072E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,54.0E0,0.9788746305852492E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,55.0E0,0.9803310050088874E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,56.0E0,0.981686977568767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,57.0E0,0.9829494699287699E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,58.0E0,0.9841249265760693E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,59.0E0,0.9852193477174988E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,60.0E0,0.9862383199080584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,61.0E0,0.9871870445679076E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,62.0E0,0.9880703645334027E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,63.0E0,0.9888927887777208E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,64.0E0,0.9896585154272527E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,65.0E0,0.9903714531912486E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,66.0E0,0.9910352413141287E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,67.0E0,0.9916532681522768E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,68.0E0,0.9922286884701522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,69.0E0,0.992764439544037E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,70.0E0,0.9932632561555635E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,71.0E0,0.9937276845516291E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,72.0E0,0.9941600954419004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,73.0E0,0.994562696100278E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,74.0E0,0.9949375416320928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,75.0E0,0.9952865454645452E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,76.0E0,0.9956114891139356E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,77.0E0,0.9959140312795584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,78.0E0,0.996195716310639E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,79.0E0,0.9964579820895997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,80.0E0,0.9967021673718292E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,81.0E0,0.9969295186194573E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,82.0E0,0.9971411963640223E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,83.0E0,0.9973382811304876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,84.0E0,0.997521778952863E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,85.0E0,0.9976926265095749E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,86.0E0,0.9978516959048228E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,87.0E0,0.9979997991202978E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,88.0E0,0.9981376921599937E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,89.0E0,0.9982660789093009E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,90.0E0,0.998385614728035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,91.0E0,0.9984969097957703E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,92.0E0,0.9986005322265489E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,93.0E0,0.9986970109688553E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,94.0E0,0.9987868385056914E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,95.0E0,0.9988704733684656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,96.0E0,0.9989483424776233E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,97.0E0,0.9990208433218896E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,98.0E0,0.9990883459872727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,99.0E0,0.9991511950462061E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,100.0E0,0.9992097113164333E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,1.0E0,0.9310604044337922E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,2.0E0,0.866873476704416E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,3.0E0,0.8071115698133402E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,4.0E0,0.7514696246136002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,5.0E0,0.6996636126124662E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,6.0E0,0.6514290861265861E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,7.0E0,0.6065198283889675E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,8.0E0,0.5647065967169588E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,9.0E0,0.5257759523257212E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,10.0E0,0.48952917081394726E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,11.0E0,0.45578122776017227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,12.0E0,0.42435985425171585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,13.0E0,0.3951046575250679E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,14.0E0,0.3678663022289643E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,15.0E0,0.3425057481308623E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,16.0E0,0.3188935403756193E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,17.0E0,0.2969091486734728E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,18.0E0,0.27644035204403977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,19.0E0,0.25738266597596426E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,20.0E0,0.23963880907784924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,21.0E0,0.22311820649807365E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,22.0E0,0.20773652757865682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,23.0E0,0.1934152553830725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,24.0E0,0.18008128590064404E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,25.0E0,0.16766655488162513E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,26.0E0,0.15610769039811997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,27.0E0,0.14534568935731143E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,28.0E0,0.13532561631573856E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,29.0E0,0.12599632305719438E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,30.0E0,0.11731018750281202E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,31.0E0,0.1092228706205816E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,32.0E0,0.10169309009342736E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,33.0E0,0.09468240959050828E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,34.0E0,0.08815504256610454E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,35.0E0,0.08207766958447524E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,36.0E0,0.0764192682383047E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,37.0E0,0.0711509547924903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,38.0E0,0.0662458367449464E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,39.0E0,0.061678875551804714E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,40.0E0,0.05742675881628476E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,41.0E0,0.053467781288811904E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,42.0E0,0.049781734070938596E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,43.0E0,0.04634980145750351E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,44.0E0,0.04315446489044915E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,45.0E0,0.040179413534025495E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,46.0E0,0.03740946101490228E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,47.0E0,0.03483046790218517E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,48.0E0,0.032429269531626795E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,49.0E0,0.030193608805608806E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,50.0E0,0.028112073625865812E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,51.0E0,0.026174038639571143E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,52.0E0,0.02436961100142477E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,53.0E0,0.022689579874880714E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,54.0E0,0.021125369414739338E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,55.0E0,0.019668994991100426E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,56.0E0,0.01831302243122017E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,57.0E0,0.017050530071216943E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,58.0E0,0.015875073423917786E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,59.0E0,0.014780652282489008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,60.0E0,0.013761680091929452E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,61.0E0,0.01281295543208031E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,62.0E0,0.011929635466584829E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,63.0E0,0.011107211222266168E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,64.0E0,0.010341484572734672E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,65.0E0,0.009628546808739405E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,66.0E0,0.008964758685857615E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,67.0E0,0.00834673184770876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,68.0E0,0.007771311529830729E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,69.0E0,0.007235560455947627E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,70.0E0,0.00673674384442201E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,71.0E0,0.006272315448356526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,72.0E0,0.00583990455808512E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,73.0E0,0.005437303899707314E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,74.0E0,0.005062458367892631E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,75.0E0,0.004713454535440929E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,76.0E0,0.00438851088604941E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,77.0E0,0.00408596872042863E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,78.0E0,0.0038042836893473725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,79.0E0,0.0035420179103858255E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,80.0E0,0.0032978326281566757E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,81.0E0,0.003070481380527544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,82.0E0,0.0028588036359613674E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,83.0E0,0.0026617188694958833E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,84.0E0,0.002478221047122727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,85.0E0,0.0023073734904112E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,86.0E0,0.002148304095162788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,87.0E0,0.0020002008796897127E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,88.0E0,0.0018623078399933569E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,89.0E0,0.0017339210906850181E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,90.0E0,0.0016143852719500225E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,91.0E0,0.0015030902042142528E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,92.0E0,0.001399467773436665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,93.0E0,0.0013029890311284402E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,94.0E0,0.0012131614942956475E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,95.0E0,0.0011295266315227868E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,96.0E0,0.0010516575223647004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,97.0E0,9.79156678099048E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,98.0E0,9.116540127152544E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,99.0E0,8.488049537826418E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,100.0E0,7.902886835545395E-4)
COMMIT
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1981.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.0')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,1.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,2.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,3.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,4.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,5.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,6.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,7.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,8.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,9.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,10.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,11.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,12.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,13.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,14.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,15.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,16.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,17.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,18.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,19.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,20.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,21.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,22.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,23.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,24.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,25.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,26.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,27.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,28.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,29.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,30.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,31.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,32.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,33.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,34.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,35.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,36.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,37.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,38.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,39.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,40.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,41.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,42.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,43.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,44.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,45.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,46.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,47.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,48.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,49.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,50.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,51.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,52.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,53.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,54.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,55.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,56.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,57.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,58.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,59.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,60.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,61.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,62.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,63.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,64.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,65.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,66.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,67.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,68.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,69.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,70.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,71.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,72.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,73.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,74.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,75.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,76.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,77.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,78.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,79.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,80.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,81.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,82.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,83.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,84.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,85.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,86.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,87.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,88.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,89.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,90.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,91.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,92.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,93.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,94.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,95.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,96.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,97.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,98.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,99.0E0,1980.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,100.0E0,1980.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,1.0E0,0.06893959556620857E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,2.0E0,0.13312652329558494E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,3.0E0,0.19288843018666083E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,4.0E0,0.24853037538640002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,5.0E0,0.3003363873875367E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,6.0E0,0.34857091387341665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,7.0E0,0.3934801716110337E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,8.0E0,0.43529340328304167E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,9.0E0,0.4742240476742793E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,10.0E0,0.5104708291860526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,11.0E0,0.5442187722398293E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,12.0E0,0.5756401457482851E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,13.0E0,0.6048953424749338E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,14.0E0,0.632133697771036E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,15.0E0,0.657494251869137E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,16.0E0,0.6811064596243822E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,17.0E0,0.7030908513265288E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,18.0E0,0.7235596479559623E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,19.0E0,0.7426173340240348E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,20.0E0,0.760361190922149E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,21.0E0,0.7768817935019233E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,22.0E0,0.7922634724213417E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,23.0E0,0.8065847446169255E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,24.0E0,0.8199187140993521E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,25.0E0,0.83233344511837E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,26.0E0,0.8438923096018743E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,27.0E0,0.8546543106426837E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,28.0E0,0.8646743836842565E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,29.0E0,0.8740036769428011E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,30.0E0,0.8826898124971815E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,31.0E0,0.8907771293794112E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,32.0E0,0.8983069099065669E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,33.0E0,0.9053175904094839E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,34.0E0,0.9118449574338875E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,35.0E0,0.9179223304155182E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,36.0E0,0.9235807317616882E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,37.0E0,0.9288490452075016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,38.0E0,0.9337541632550448E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,39.0E0,0.9383211244481859E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,40.0E0,0.9425732411837062E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,41.0E0,0.946532218711177E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,42.0E0,0.95021826592905E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,43.0E0,0.9536501985424851E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,44.0E0,0.9568455351095392E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,45.0E0,0.9598205864659632E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,46.0E0,0.9625905389850838E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,47.0E0,0.9651695320978002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,48.0E0,0.9675707304683595E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,49.0E0,0.9698063911943775E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,50.0E0,0.9718879263741207E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,51.0E0,0.9738259613604148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,52.0E0,0.9756303889985616E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,53.0E0,0.9773104201251072E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,54.0E0,0.9788746305852492E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,55.0E0,0.9803310050088874E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,56.0E0,0.981686977568767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,57.0E0,0.9829494699287699E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,58.0E0,0.9841249265760693E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,59.0E0,0.9852193477174988E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,60.0E0,0.9862383199080584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,61.0E0,0.9871870445679076E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,62.0E0,0.9880703645334027E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,63.0E0,0.9888927887777208E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,64.0E0,0.9896585154272527E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,65.0E0,0.9903714531912486E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,66.0E0,0.9910352413141287E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,67.0E0,0.9916532681522768E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,68.0E0,0.9922286884701522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,69.0E0,0.992764439544037E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,70.0E0,0.9932632561555635E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,71.0E0,0.9937276845516291E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,72.0E0,0.9941600954419004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,73.0E0,0.994562696100278E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,74.0E0,0.9949375416320928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,75.0E0,0.9952865454645452E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,76.0E0,0.9956114891139356E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,77.0E0,0.9959140312795584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,78.0E0,0.996195716310639E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,79.0E0,0.9964579820895997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,80.0E0,0.9967021673718292E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,81.0E0,0.9969295186194573E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,82.0E0,0.9971411963640223E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,83.0E0,0.9973382811304876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,84.0E0,0.997521778952863E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,85.0E0,0.9976926265095749E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,86.0E0,0.9978516959048228E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,87.0E0,0.9979997991202978E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,88.0E0,0.9981376921599937E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,89.0E0,0.9982660789093009E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,90.0E0,0.998385614728035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,91.0E0,0.9984969097957703E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,92.0E0,0.9986005322265489E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,93.0E0,0.9986970109688553E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,94.0E0,0.9987868385056914E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,95.0E0,0.9988704733684656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,96.0E0,0.9989483424776233E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,97.0E0,0.9990208433218896E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,98.0E0,0.9990883459872727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,99.0E0,0.9991511950462061E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,100.0E0,0.9992097113164333E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,1.0E0,0.9310604044337922E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,2.0E0,0.866873476704416E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,3.0E0,0.8071115698133402E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,4.0E0,0.7514696246136002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,5.0E0,0.6996636126124662E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,6.0E0,0.6514290861265861E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,7.0E0,0.6065198283889675E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,8.0E0,0.5647065967169588E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,9.0E0,0.5257759523257212E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,10.0E0,0.48952917081394726E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,11.0E0,0.45578122776017227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,12.0E0,0.42435985425171585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,13.0E0,0.3951046575250679E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,14.0E0,0.3678663022289643E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,15.0E0,0.3425057481308623E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,16.0E0,0.3188935403756193E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,17.0E0,0.2969091486734728E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,18.0E0,0.27644035204403977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,19.0E0,0.25738266597596426E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,20.0E0,0.23963880907784924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,21.0E0,0.22311820649807365E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,22.0E0,0.20773652757865682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,23.0E0,0.1934152553830725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,24.0E0,0.18008128590064404E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,25.0E0,0.16766655488162513E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,26.0E0,0.15610769039811997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,27.0E0,0.14534568935731143E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,28.0E0,0.13532561631573856E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,29.0E0,0.12599632305719438E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,30.0E0,0.11731018750281202E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,31.0E0,0.1092228706205816E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,32.0E0,0.10169309009342736E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,33.0E0,0.09468240959050828E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,34.0E0,0.08815504256610454E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,35.0E0,0.08207766958447524E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,36.0E0,0.0764192682383047E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,37.0E0,0.0711509547924903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,38.0E0,0.0662458367449464E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,39.0E0,0.061678875551804714E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,40.0E0,0.05742675881628476E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,41.0E0,0.053467781288811904E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,42.0E0,0.049781734070938596E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,43.0E0,0.04634980145750351E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,44.0E0,0.04315446489044915E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,45.0E0,0.040179413534025495E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,46.0E0,0.03740946101490228E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,47.0E0,0.03483046790218517E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,48.0E0,0.032429269531626795E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,49.0E0,0.030193608805608806E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,50.0E0,0.028112073625865812E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,51.0E0,0.026174038639571143E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,52.0E0,0.02436961100142477E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,53.0E0,0.022689579874880714E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,54.0E0,0.021125369414739338E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,55.0E0,0.019668994991100426E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,56.0E0,0.01831302243122017E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,57.0E0,0.017050530071216943E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,58.0E0,0.015875073423917786E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,59.0E0,0.014780652282489008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,60.0E0,0.013761680091929452E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,61.0E0,0.01281295543208031E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,62.0E0,0.011929635466584829E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,63.0E0,0.011107211222266168E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,64.0E0,0.010341484572734672E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,65.0E0,0.009628546808739405E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,66.0E0,0.008964758685857615E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,67.0E0,0.00834673184770876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,68.0E0,0.007771311529830729E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,69.0E0,0.007235560455947627E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,70.0E0,0.00673674384442201E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,71.0E0,0.006272315448356526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,72.0E0,0.00583990455808512E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,73.0E0,0.005437303899707314E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,74.0E0,0.005062458367892631E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,75.0E0,0.004713454535440929E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,76.0E0,0.00438851088604941E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,77.0E0,0.00408596872042863E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,78.0E0,0.0038042836893473725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,79.0E0,0.0035420179103858255E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,80.0E0,0.0032978326281566757E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,81.0E0,0.003070481380527544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,82.0E0,0.0028588036359613674E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,83.0E0,0.0026617188694958833E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,84.0E0,0.002478221047122727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,85.0E0,0.0023073734904112E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,86.0E0,0.002148304095162788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,87.0E0,0.0020002008796897127E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,88.0E0,0.0018623078399933569E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,89.0E0,0.0017339210906850181E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,90.0E0,0.0016143852719500225E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,91.0E0,0.0015030902042142528E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,92.0E0,0.001399467773436665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,93.0E0,0.0013029890311284402E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,94.0E0,0.0012131614942956475E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,95.0E0,0.0011295266315227868E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,96.0E0,0.0010516575223647004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,97.0E0,9.79156678099048E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,98.0E0,9.116540127152544E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,99.0E0,8.488049537826418E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,100.0E0,7.902886835545395E-4)
COMMIT
DISCONNECT
/*C19*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.2')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,1.0E0,998.786847671825E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,2.0E0,998.5445665473281E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,3.0E0,998.269197938065E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,4.0E0,997.9562515793853E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,5.0E0,997.6006361266077E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,6.0E0,997.1965811138818E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,7.0E0,996.7375494904861E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,8.0E0,996.2161398082592E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,9.0E0,995.6239771087884E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,10.0E0,994.9515915580442E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,11.0E0,994.188283909297E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,12.0E0,993.3219769555395E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,13.0E0,992.3390522768875E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,14.0E0,991.2241718172947E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,15.0E0,989.9600841641192E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,16.0E0,988.527415884793E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,17.0E0,986.904448934649E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,18.0E0,985.066886032276E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,19.0E0,982.9876070535349E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,20.0E0,980.6364209772105E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,21.0E0,977.9798197810244E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,22.0E0,974.9807429916626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,23.0E0,971.5983643821929E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,24.0E0,967.7879156110098E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,25.0E0,963.5005653992503E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,26.0E0,958.6833770841863E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,27.0E0,953.2793719182121E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,28.0E0,947.2277300476313E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,29.0E0,940.4641652946814E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,30.0E0,932.9215130905887E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,31.0E0,924.5305723694421E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,32.0E0,915.2212409222998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,33.0E0,904.923978436985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,34.0E0,893.5716209279104E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,35.0E0,881.1015532790769E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,36.0E0,867.4582222985281E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,37.0E0,852.5959408008486E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,38.0E0,836.4818946636178E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,39.0E0,819.0992218873004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,40.0E0,800.4499895232559E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,41.0E0,780.5578567750852E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,42.0E0,759.4701878107783E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,43.0E0,737.2593734083364E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,44.0E0,714.0231429599572E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,45.0E0,689.8837011680663E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,46.0E0,664.9856060135362E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,47.0E0,639.4924097080412E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,48.0E0,613.5822003501852E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,49.0E0,587.4422930037412E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,50.0E0,561.2634080163162E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,51.0E0,535.2337272418533E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,52.0E0,509.5332268436277E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,53.0E0,484.3286477240559E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,54.0E0,459.76938841804656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,55.0E0,435.9845036576034E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,56.0E0,413.0808809302489E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,57.0E0,391.14256291749587E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,58.0E0,370.2310980745368E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,59.0E0,350.3867421425809E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,60.0E0,331.63030210479366E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,61.0E0,313.96540857753735E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,62.0E0,297.381017487649E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,63.0E0,281.8539704372549E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,64.0E0,267.3514788105122E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,65.0E0,253.8334338852299E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,66.0E0,241.25447993007845E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,67.0E0,229.5658170095621E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,68.0E0,218.71672384618145E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,69.0E0,208.65580849339406E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,70.0E0,199.33200630432196E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,71.0E0,190.6953516535565E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,72.0E0,182.697553116891E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,73.0E0,175.29240233629062E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,74.0E0,168.436045469901E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,75.0E0,162.08714366110203E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,76.0E0,156.2069459001649E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,77.0E0,150.7592943880291E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,78.0E0,145.71057930768782E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,79.0E0,141.02965692796263E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,80.0E0,136.68774229590196E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,81.0E0,132.6582854540645E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,82.0E0,128.91683814895038E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,83.0E0,125.440916356697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,84.0E0,122.2098626099672E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,85.0E0,119.20471102844458E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,86.0E0,116.40805709658986E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,87.0E0,113.80393356014147E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,88.0E0,111.37769329438937E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,89.0E0,109.11589960374296E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,90.0E0,107.00622411875742E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,91.0E0,105.03735224283872E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,92.0E0,103.19889594911594E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,93.0E0,101.48131362439747E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,94.0E0,99.87583659042306E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,95.0E0,98.374401893728E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,96.0E0,96.96959093721225E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,97.0E0,95.6545735233701E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,98.0E0,94.42305688671556E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,99.0E0,93.26923930794223E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,100.0E0,92.18776792220353E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,1.0E0,0.07621015598791482E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,2.0E0,0.1628547281730528E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,3.0E0,0.26135757372731844E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,4.0E0,0.37333544683666464E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,5.0E0,0.5006237224173544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,6.0E0,0.6453054305576098E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,7.0E0,0.8097439925791807E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,8.0E0,0.9966200851993448E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,9.0E0,1.2089730947180306E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,10.0E0,1.4502476570933807E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,11.0E0,1.7243458103137044E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,12.0E0,2.0356853100626284E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,13.0E0,2.3892646749095756E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,14.0E0,2.7907355286817865E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,15.0E0,3.246482789541311E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,16.0E0,3.763713210287522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,17.0E0,4.350552693357534E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,18.0E0,5.016152675570803E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,19.0E0,5.77080568805723E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,20.0E0,6.626069929614846E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,21.0E0,7.594902327740357E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,22.0E0,8.6917990790507E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,23.0E0,9.932942035976438E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,24.0E0,11.336348514784653E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,25.0E0,12.922021117519742E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,26.0E0,14.712092967721928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,27.0E0,16.73096234564733E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,28.0E0,19.00540907661623E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,29.0E0,21.564683202101165E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,30.0E0,24.440554505749706E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,31.0E0,27.667309477984144E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,32.0E0,31.28168044079361E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,33.0E0,35.322690041887306E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,34.0E0,39.8313934582065E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,35.0E0,44.85050078372239E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,36.0E0,50.423863624938946E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,37.0E0,56.59581331112752E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,38.0E0,63.41034371641381E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,39.0E0,70.9101397243883E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,40.0E0,79.13546284171099E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,41.0E0,88.12291803940475E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,42.0E0,97.90413979328683E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,43.0E0,108.5044492703284E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,44.0E0,119.94154702026533E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,45.0E0,132.2243144937564E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,46.0E0,145.3518013650437E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,47.0E0,159.3124725199011E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,48.0E0,174.08377795810213E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,49.0E0,189.63209105892417E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,50.0E0,205.91303710204343E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,51.0E0,222.87220705595777E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,52.0E0,240.44622450998284E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,53.0E0,258.564109417528E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,54.0E0,277.1488637783451E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,55.0E0,296.1191933531362E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,56.0E0,315.3912766540971E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,57.0E0,334.88049730446977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,58.0E0,354.5030669771581E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,59.0E0,374.1774814911765E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,60.0E0,393.82577006890614E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,61.0E0,413.3745152146988E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,62.0E0,432.7556365634581E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,63.0E0,451.90694529976116E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,64.0E0,470.77248583504274E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,65.0E0,489.3026882820323E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,66.0E0,507.45435914846206E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,67.0E0,525.1905390554115E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,68.0E0,542.4802557360192E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,69.0E0,559.2981986452501E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,70.0E0,575.6243387231667E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,71.0E0,591.4435136204648E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,72.0E0,606.7449953393443E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,73.0E0,621.5220539951035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,74.0E0,635.7715284129694E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,75.0E0,649.4934116247737E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,76.0E0,662.6904570563169E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,77.0E0,675.367809299117E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,78.0E0,687.5326618179746E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,79.0E0,699.1939427237444E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,80.0E0,710.3620287977981E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,81.0E0,721.0484872486367E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,82.0E0,731.2658441715486E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,83.0E0,741.0273783318142E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,84.0E0,750.3469386682852E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,85.0E0,759.2387837890873E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,86.0E0,767.717441681401E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,87.0E0,775.7975878632528E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,88.0E0,783.4939402518554E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,89.0E0,790.8211690974501E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,90.0E0,797.7938204244836E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,91.0E0,804.4262515258445E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,92.0E0,810.7325771649256E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,93.0E0,816.7266252507377E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,94.0E0,822.4219008597416E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,95.0E0,827.8315575827477E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,96.0E0,832.9683752745528E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,97.0E0,837.844743377191E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,98.0E0,842.4726490742711E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,99.0E0,846.8636696136941E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,100.0E0,851.0289682091421E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,1.0E0,1.1369421721849413E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,2.0E0,1.292578724496793E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,3.0E0,1.4694444882046092E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,4.0E0,1.6704129737762015E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,5.0E0,1.8987401509727269E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,6.0E0,2.158113455558787E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,7.0E0,2.4527065169307893E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,8.0E0,2.7872401065351995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,9.0E0,3.1670497964868916E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,10.0E0,3.5981607848556294E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,11.0E0,4.087370280382289E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,12.0E0,4.642337734391598E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,13.0E0,5.27168304819878E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,14.0E0,5.985092654019125E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,15.0E0,6.7934330463365695E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,16.0E0,7.708870904918865E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,17.0E0,8.744998371992084E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,18.0E0,9.916961292152694E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,19.0E0,11.241587258407451E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,20.0E0,12.737509093175285E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,21.0E0,14.425277891236705E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,22.0E0,16.327457929288567E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,23.0E0,18.46869358183292E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,24.0E0,20.875735874209447E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,25.0E0,23.577413483232828E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,26.0E0,26.604529948094612E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,27.0E0,29.989665736143838E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,28.0E0,33.76686087575552E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,29.0E0,37.9711515032201E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,30.0E0,42.63793240366468E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,31.0E0,47.8021181525748E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,32.0E0,53.49707863690896E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,33.0E0,59.753331521130576E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,34.0E0,66.59698561388662E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,35.0E0,74.0479459372023E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,36.0E0,82.11791407653449E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,37.0E0,90.8082458880255E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,38.0E0,100.10776161997154E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,39.0E0,109.99063838831505E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,40.0E0,120.41454763503434E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,41.0E0,131.31922518551238E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,42.0E0,142.6256723959381E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,43.0E0,154.23617732133866E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,44.0E0,166.03531001978223E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,45.0E0,177.8919843381839E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,46.0E0,189.66259262142742E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,47.0E0,201.19511777206415E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,48.0E0,212.3340216917187E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,49.0E0,222.92561593734123E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,50.0E0,232.8235548816466E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,51.0E0,241.89406570219558E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,52.0E0,250.0205486463978E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,53.0E0,257.10724285842434E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,54.0E0,263.08174780361594E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,55.0E0,267.89630298926784E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,56.0E0,271.52784241566087E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,57.0E0,273.9769397780406E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,58.0E0,275.2658349483122E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,59.0E0,275.43577636625133E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,60.0E0,274.54392782630845E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,61.0E0,272.66007620777356E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,62.0E0,269.86334594890315E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,63.0E0,266.239084262995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,64.0E0,261.8760353544549E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,65.0E0,256.8638778327479E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,66.0E0,251.29116092146973E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,67.0E0,245.24364393503615E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,68.0E0,238.80302041780857E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,69.0E0,232.0459928613663E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,70.0E0,225.04365497252127E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,71.0E0,217.8611347259901E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,72.0E0,210.55745154377766E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,73.0E0,203.18554366861716E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,74.0E0,195.7924261171404E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,75.0E0,188.41944471413663E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,76.0E0,181.10259704353044E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,77.0E0,173.8728963128665E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,78.0E0,166.7567588743517E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,79.0E0,159.776400348306E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,80.0E0,152.95022890631355E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,81.0E0,146.29322729731234E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,82.0E0,139.8173176795149E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,83.0E0,133.53170531150363E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,84.0E0,127.44319872176426E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,85.0E0,121.55650518248221E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,86.0E0,115.87450122202218E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,87.0E0,110.39847857661903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,88.0E0,105.12836645376751E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,89.0E0,100.06293129882025E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,90.0E0,95.1999554567709E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,91.0E0,90.53639623132875E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,92.0E0,86.06852688597039E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,93.0E0,81.79206112487695E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,94.0E0,77.70226254984738E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,95.0E0,73.79404052353684E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,96.0E0,70.06203378824824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,97.0E0,66.50068309945284E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,98.0E0,63.10429403902653E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,99.0E0,59.86709107837685E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,100.0E0,56.78326386866891E0)
COMMIT
DISCONNECT
/*C20*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1486.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.2893')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,266.0E0,27.907149997145435E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,267.0E0,27.907148190947183E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,268.0E0,27.907146500105455E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,269.0E0,27.9071449172527E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,270.0E0,27.907143435492074E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,271.0E0,27.907142048367028E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,272.0E0,27.9071407498335E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,273.0E0,27.907139534233483E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,274.0E0,27.907138396270167E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,275.0E0,27.907137330985165E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,276.0E0,27.907136333736698E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,277.0E0,27.907135400179538E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,278.0E0,27.907134526245816E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,279.0E0,27.907133708127663E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,280.0E0,27.907132942260258E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,281.0E0,27.907132225306512E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,282.0E0,27.907131554142403E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,283.0E0,27.90713092584357E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,284.0E0,27.907130337672296E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,285.0E0,27.907129787065653E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,286.0E0,27.907129271624687E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,287.0E0,27.907128789103382E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,288.0E0,27.907128337399236E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,289.0E0,27.907127914544095E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,290.0E0,27.90712751869542E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,291.0E0,27.90712714812839E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,292.0E0,27.907126801228358E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,293.0E0,27.907126476483725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,294.0E0,27.907126172479618E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,295.0E0,27.907125887891347E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,296.0E0,27.907125621478887E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,297.0E0,27.907125372081367E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,298.0E0,27.907125138612102E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,299.0E0,27.90712492005383E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,300.0E0,27.907124715454213E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,301.0E0,27.907124523921702E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,302.0E0,27.90712434462182E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,303.0E0,27.90712417677329E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,304.0E0,27.907124019644765E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,305.0E0,27.907123872551534E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,306.0E0,27.907123734852682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,307.0E0,27.90712360594827E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,308.0E0,27.907123485276582E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,309.0E0,27.907123372311858E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,310.0E0,27.90712326656173E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,311.0E0,27.90712316756561E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,312.0E0,27.90712307489209E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,313.0E0,27.907122988137353E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,314.0E0,27.90712290692338E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,315.0E0,27.907122830896295E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,316.0E0,27.907122759724825E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,317.0E0,27.907122693098877E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,318.0E0,27.90712263072812E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,319.0E0,27.907122572340786E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,320.0E0,27.907122517682524E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,321.0E0,27.90712246651508E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,322.0E0,27.907122418615533E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,323.0E0,27.90712237377518E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,324.0E0,27.907122331798668E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,325.0E0,27.907122292503075E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,326.0E0,27.90712225571718E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,327.0E0,27.90712222128066E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,328.0E0,27.907122189043516E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,329.0E0,27.90712215886525E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,330.0E0,27.90712213061439E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,331.0E0,27.90712210416785E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,332.0E0,27.90712207941034E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,333.0E0,27.907122056233998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,334.0E0,27.907122034537892E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,335.0E0,27.90712201422744E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,336.0E0,27.90712199521415E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,337.0E0,27.907121977415215E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,338.0E0,27.90712196075302E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,339.0E0,27.90712194515497E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,340.0E0,27.90712193055313E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,341.0E0,27.907121916883817E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,342.0E0,27.907121904087564E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,343.0E0,27.907121892108556E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,344.0E0,27.907121880894625E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,345.0E0,27.90712187039692E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,346.0E0,27.90712186056965E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,347.0E0,27.90712185137003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,348.0E0,27.907121842757952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,349.0E0,27.9071218346959E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,350.0E0,27.90712182714874E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,351.0E0,27.90712182008359E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,352.0E0,27.9071218134697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,353.0E0,27.907121807278195E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,354.0E0,27.907121801482134E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,355.0E0,27.90712179605625E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,356.0E0,27.907121790976902E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,357.0E0,27.90712178622195E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,358.0E0,27.90712178177068E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,359.0E0,27.907121777603706E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,360.0E0,27.907121773702848E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,361.0E0,27.907121770051134E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,362.0E0,27.90712176663264E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,363.0E0,27.90712176343248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,364.0E0,27.90712176043671E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,365.0E0,27.907121757632265E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,266.0E0,1458.0925064778487E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,267.0E0,1458.0925302239482E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,268.0E0,1458.0925524534578E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,269.0E0,1458.092573263235E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,270.0E0,1458.0925927439578E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,271.0E0,1458.0926109805027E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,272.0E0,1458.0926280523352E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,273.0E0,1458.0926440338444E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,274.0E0,1458.0926589946616E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,275.0E0,1458.092672999973E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,276.0E0,1458.092686110809E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,277.0E0,1458.0926983842965E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,278.0E0,1458.0927098739141E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,279.0E0,1458.0927206297256E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,280.0E0,1458.09273069859E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,281.0E0,1458.0927401243903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,282.0E0,1458.0927489481928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,283.0E0,1458.0927572084488E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,284.0E0,1458.0927649411447E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,285.0E0,1458.0927721799794E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,286.0E0,1458.0927789564935E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,287.0E0,1458.0927853002074E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,288.0E0,1458.09279123877E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,289.0E0,1458.0927967980554E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,290.0E0,1458.0928020022889E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,291.0E0,1458.0928068741387E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,292.0E0,1458.0928114348371E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,293.0E0,1458.0928157042595E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,294.0E0,1458.092819701007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,295.0E0,1458.092823442494E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,296.0E0,1458.09282694502E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,297.0E0,1458.0928302238533E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,298.0E0,1458.0928332932774E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,299.0E0,1458.0928361666668E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,300.0E0,1458.0928388565403E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,301.0E0,1458.0928413746203E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,302.0E0,1458.092843731877E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,303.0E0,1458.0928459385834E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,304.0E0,1458.0928480043547E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,305.0E0,1458.092849938192E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,306.0E0,1458.0928517485206E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,307.0E0,1458.0928534432262E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,308.0E0,1458.0928550296992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,309.0E0,1458.0928565148492E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,310.0E0,1458.0928579051463E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,311.0E0,1458.0928592066498E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,312.0E0,1458.0928604250312E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,313.0E0,1458.092861565595E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,314.0E0,1458.0928626333164E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,315.0E0,1458.0928636328458E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,316.0E0,1458.0928645685374E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,317.0E0,1458.0928654444722E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,318.0E0,1458.0928662644608E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,319.0E0,1458.092867032081E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,320.0E0,1458.0928677506743E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,321.0E0,1458.0928684233718E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,322.0E0,1458.0928690531084E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,323.0E0,1458.0928696426242E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,324.0E0,1458.09287019449E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,325.0E0,1458.0928707111095E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,326.0E0,1458.092871194736E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,327.0E0,1458.0928716474743E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,328.0E0,1458.0928720712961E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,329.0E0,1458.0928724680505E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,330.0E0,1458.0928728394647E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,331.0E0,1458.0928731871581E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,332.0E0,1458.0928735126454E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,333.0E0,1458.0928738173445E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,334.0E0,1458.0928741025841E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,335.0E0,1458.092874369605E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,336.0E0,1458.0928746195739E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,337.0E0,1458.0928748535778E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,338.0E0,1458.0928750726357E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,339.0E0,1458.0928752777033E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,340.0E0,1458.0928754696743E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,341.0E0,1458.0928756493843E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,342.0E0,1458.0928758176167E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,343.0E0,1458.092875975104E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,344.0E0,1458.0928761225339E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,345.0E0,1458.092876260548E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,346.0E0,1458.0928763897475E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,347.0E0,1458.092876510695E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,348.0E0,1458.092876623918E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,349.0E0,1458.0928767299094E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,350.0E0,1458.092876829132E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,351.0E0,1458.092876922017E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,352.0E0,1458.0928770089704E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,353.0E0,1458.0928770903704E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,354.0E0,1458.0928771665713E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,355.0E0,1458.0928772379068E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,356.0E0,1458.0928773046837E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,357.0E0,1458.0928773671974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,358.0E0,1458.0928774257181E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,359.0E0,1458.092877480501E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,360.0E0,1458.092877531786E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,361.0E0,1458.092877579795E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,362.0E0,1458.092877624738E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,363.0E0,1458.09287766681E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,364.0E0,1458.0928777061972E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,365.0E0,1458.0928777430659E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,266.0E0,3.4352503910703105E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,267.0E0,3.215851372699739E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,268.0E0,3.0104647028518917E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,269.0E0,2.818195455538563E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,270.0E0,2.63820586095086E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,271.0E0,2.469711655071197E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,272.0E0,2.311978662424019E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,273.0E0,2.164319597075416E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,274.0E0,2.026091067942865E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,275.0E0,1.8966907753664153E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,276.0E0,1.775554886726059E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,277.0E0,1.6621555796702753E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,278.0E0,1.5559987422508336E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,279.0E0,1.456621819942857E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,280.0E0,1.3635918001690464E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,281.0E0,1.2765033255460117E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,282.0E0,1.1949769276317914E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,283.0E0,1.1186573734783959E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,284.0E0,1.047212117784946E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,285.0E0,9.803298539070335E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,286.0E0,9.177191574086088E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,287.0E0,8.591072162460519E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,288.0E0,8.042386420514923E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,289.0E0,7.528743573357852E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,290.0E0,7.047905537624237E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,291.0E0,6.597777169533102E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,292.0E0,6.176397135771847E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,293.0E0,5.7819293674291784E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,294.0E0,5.4126550597392464E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,295.0E0,5.066965182777586E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,296.0E0,4.7433534704759824E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,297.0E0,4.440409857407688E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,298.0E0,4.1568143347449564E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,299.0E0,3.891331198617919E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,300.0E0,3.6428036658131545E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,301.0E0,3.410148833351253E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,302.0E0,3.1923529599807096E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,303.0E0,2.9884670490285397E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,304.0E0,2.7976027133606327E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,305.0E0,2.6189283044346302E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,306.0E0,2.4516652885783086E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,307.0E0,2.295084854704095E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,308.0E0,2.1485047386785354E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,309.0E0,2.0112862505096102E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,310.0E0,1.882831491398521E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,311.0E0,1.7625807485300086E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,312.0E0,1.650010056249429E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,313.0E0,1.54462891300004E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,314.0E0,1.4459781440726023E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,315.0E0,1.3536279008546563E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,316.0E0,1.2671757878616553E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,317.0E0,1.1862451093889536E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,318.0E0,1.1104832281448054E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,319.0E0,1.0395600287124764E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,320.0E0,9.731664791463905E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,321.0E0,9.11013284434742E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,322.0E0,8.528296259613865E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,323.0E0,7.983619814744566E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,324.0E0,7.473730204200165E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,325.0E0,6.996405698274013E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,326.0E0,6.549566462403117E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,327.0E0,6.131265494755523E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,328.0E0,5.73968014260636E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,329.0E0,5.373104160537305E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,330.0E0,5.029940275854684E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,331.0E0,4.7086932288318904E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,332.0E0,4.407963257450291E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,333.0E0,4.126439998250064E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,334.0E0,3.8628967767151584E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,335.0E0,3.616185262314115E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,336.0E0,3.3852304649071475E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,337.0E0,3.1690260507175753E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,338.0E0,2.966629957457983E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,339.0E0,2.777160289504947E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,340.0E0,2.5997914752365142E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,341.0E0,2.433750669788918E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,342.0E0,2.278314387558293E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,343.0E0,2.1328053497743033E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,344.0E0,1.9965895334097053E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,345.0E0,1.8690734085670737E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,346.0E0,1.7497013523053357E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,347.0E0,1.6379532276372831E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,348.0E0,1.5333421171492334E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,349.0E0,1.4354122013675246E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,350.0E0,1.343736772627308E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,351.0E0,1.257916375789517E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,352.0E0,1.177577067704616E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,353.0E0,1.1023687878391202E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,354.0E0,1.031963832965283E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,355.0E0,9.660554292676992E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,356.0E0,9.043563956451588E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,357.0E0,8.46597892383343E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,358.0E0,7.925282497460202E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,359.0E0,7.419118713805567E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,360.0E0,6.945282077596163E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,361.0E0,6.501707951860005E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,362.0E0,6.086463561733612E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,363.0E0,5.697739572828581E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,364.0E0,5.333842207462484E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,365.0E0,4.993185864402111E-7)
COMMIT
DISCONNECT
/*C21*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1882.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.0688')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,266.0E0,1868.2072279443637E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,267.0E0,1868.1759441277563E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,268.0E0,1868.144758720645E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,269.0E0,1868.11367144728E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,270.0E0,1868.0826820324537E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,271.0E0,1868.051790201507E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,272.0E0,1868.020995680336E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,273.0E0,1867.990298195385E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,274.0E0,1867.9596974736442E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,275.0E0,1867.9291932426577E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,276.0E0,1867.898785230517E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,277.0E0,1867.8684731658618E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,278.0E0,1867.8382567778926E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,279.0E0,1867.8081357963522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,280.0E0,1867.7781099515364E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,281.0E0,1867.7481789743022E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,282.0E0,1867.7183425960518E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,283.0E0,1867.6886005487463E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,284.0E0,1867.6589525648897E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,285.0E0,1867.6293983775515E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,286.0E0,1867.599937720348E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,287.0E0,1867.570570327449E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,288.0E0,1867.541295933585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,289.0E0,1867.5121142740375E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,290.0E0,1867.4830250846376E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,291.0E0,1867.4540281017862E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,292.0E0,1867.425123062426E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,293.0E0,1867.3963097040603E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,294.0E0,1867.3675877647515E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,295.0E0,1867.3389569831058E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,296.0E0,1867.3104170983006E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,297.0E0,1867.2819678500625E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,298.0E0,1867.253608978674E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,299.0E0,1867.2253402249746E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,300.0E0,1867.1971613303638E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,301.0E0,1867.1690720367944E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,302.0E0,1867.1410720867743E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,303.0E0,1867.113161223372E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,304.0E0,1867.0853391902128E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,305.0E0,1867.0576057314784E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,306.0E0,1867.0299605919008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,307.0E0,1867.002403516782E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,308.0E0,1866.974934251977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,309.0E0,1866.947552543895E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,310.0E0,1866.920258139496E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,311.0E0,1866.8930507863104E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,312.0E0,1866.8659302324202E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,313.0E0,1866.8388962264644E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,314.0E0,1866.8119485176376E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,315.0E0,1866.7850868556936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,316.0E0,1866.7583109909372E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,317.0E0,1866.73162067424E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,318.0E0,1866.7050156570253E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,319.0E0,1866.6784956912722E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,320.0E0,1866.6520605295211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,321.0E0,1866.6257099248614E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,322.0E0,1866.5994436309454E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,323.0E0,1866.5732614019803E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,324.0E0,1866.5471629927274E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,325.0E0,1866.5211481585075E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,326.0E0,1866.4952166551939E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,327.0E0,1866.4693682392142E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,328.0E0,1866.4436026675555E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,329.0E0,1866.4179196977573E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,330.0E0,1866.3923190879218E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,331.0E0,1866.3668005966958E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,332.0E0,1866.3413639832884E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,333.0E0,1866.316009007456E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,334.0E0,1866.2907354295203E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,335.0E0,1866.2655430103491E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,336.0E0,1866.2404315113652E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,337.0E0,1866.215400694538E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,338.0E0,1866.1904503224098E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,339.0E0,1866.1655801580582E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,340.0E0,1866.140789965116E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,341.0E0,1866.1160795077753E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,342.0E0,1866.091448550776E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,343.0E0,1866.06689685941E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,344.0E0,1866.0424241995204E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,345.0E0,1866.018030337505E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,346.0E0,1865.993715040307E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,347.0E0,1865.9694780754307E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,348.0E0,1865.9453192109145E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,349.0E0,1865.921238215361E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,350.0E0,1865.8972348579196E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,351.0E0,1865.873308908286E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,352.0E0,1865.8494601366979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,353.0E0,1865.8256883139604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,354.0E0,1865.8019932114075E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,355.0E0,1865.7783746009327E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,356.0E0,1865.7548322549708E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,357.0E0,1865.7313659465067E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,358.0E0,1865.7079754490678E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,359.0E0,1865.6846605367346E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,360.0E0,1865.661420984126E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,361.0E0,1865.638256566412E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,362.0E0,1865.6151670593063E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,363.0E0,1865.5921522390588E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,364.0E0,1865.569211882475E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,365.0E0,1865.5463457668966E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,266.0E0,13.333987278122711E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,267.0E0,13.36670638655962E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,268.0E0,13.399323115828519E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,269.0E0,13.431837749208904E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,270.0E0,13.464250569442262E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,271.0E0,13.49656185873135E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,272.0E0,13.528771898739546E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,273.0E0,13.56088097059021E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,274.0E0,13.592889354865935E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,275.0E0,13.624797331607946E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,276.0E0,13.656605180315552E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,277.0E0,13.688313179945501E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,278.0E0,13.719921608911292E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,279.0E0,13.751430745082684E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,280.0E0,13.782840865785229E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,281.0E0,13.814152247799546E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,282.0E0,13.845365167360795E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,283.0E0,13.876479900158294E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,284.0E0,13.907496721334882E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,285.0E0,13.938415905486568E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,286.0E0,13.969237726661925E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,287.0E0,13.99996245836164E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,288.0E0,14.030590373538102E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,289.0E0,14.061121744594956E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,290.0E0,14.091556843386716E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,291.0E0,14.121895941218282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,292.0E0,14.15213930884461E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,293.0E0,14.182287216470247E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,294.0E0,14.21233993374908E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,295.0E0,14.24229772978389E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,296.0E0,14.272160873126001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,297.0E0,14.30192963177507E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,298.0E0,14.33160427317859E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,299.0E0,14.36118506423175E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,300.0E0,14.390672271277007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,301.0E0,14.420066160103957E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,302.0E0,14.449366995948878E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,303.0E0,14.478575043494729E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,304.0E0,14.5076905668706E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,305.0E0,14.536713829651745E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,306.0E0,14.565645094859264E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,307.0E0,14.594484624959858E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,308.0E0,14.62323268186568E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,309.0E0,14.651889526934218E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,310.0E0,14.68045542096799E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,311.0E0,14.70893062421445E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,312.0E0,14.737315396365904E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,313.0E0,14.765609996559245E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,314.0E0,14.793814683375954E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,315.0E0,14.821929714841934E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,316.0E0,14.849955348427406E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,317.0E0,14.877891841046758E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,318.0E0,14.905739449058688E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,319.0E0,14.93349842826584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,320.0E0,14.961169033914976E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,321.0E0,14.988751520696818E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,322.0E0,15.01624614274605E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,323.0E0,15.043653153641289E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,324.0E0,15.07097280640504E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,325.0E0,15.098205353503761E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,326.0E0,15.125351046847824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,327.0E0,15.152410137791502E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,328.0E0,15.179382877133103E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,329.0E0,15.206269515114872E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,330.0E0,15.23307030142322E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,331.0E0,15.259785485188543E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,332.0E0,15.286415314985542E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,333.0E0,15.312960038833117E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,334.0E0,15.339419904194468E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,335.0E0,15.365795157977384E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,336.0E0,15.392086046534148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,337.0E0,15.418292815661637E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,338.0E0,15.444415710601618E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,339.0E0,15.470454976040793E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,340.0E0,15.496410856110948E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,341.0E0,15.522283594389085E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,342.0E0,15.548073433897612E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,343.0E0,15.573780617104557E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,344.0E0,15.59940538592364E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,345.0E0,15.624947981714614E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,346.0E0,15.650408645283298E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,347.0E0,15.675787616881955E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,348.0E0,15.701085136209343E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,349.0E0,15.726301442411083E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,350.0E0,15.751436774079773E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,351.0E0,15.776491369255377E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,352.0E0,15.80146546542536E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,353.0E0,15.826359299524974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,354.0E0,15.851173107937512E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,355.0E0,15.875907126494653E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,356.0E0,15.900561590476636E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,357.0E0,15.925136734612698E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,358.0E0,15.949632793081276E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,359.0E0,15.974049999510237E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,360.0E0,15.998388586977438E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,361.0E0,16.022648788010823E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,362.0E0,16.046830834588842E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,363.0E0,16.070934958140835E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,364.0E0,16.094961389547276E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,365.0E0,16.118910359140155E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,266.0E0,0.45878477750462304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,267.0E0,0.4573494856747855E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,268.0E0,0.45591816351671965E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,269.0E0,0.45449080350327103E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,270.0E0,0.4530673980973974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,271.0E0,0.4516479397523749E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,272.0E0,0.45023242091202703E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,273.0E0,0.4488208340109307E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,274.0E0,0.44741317147462817E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,275.0E0,0.4460094257198429E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,276.0E0,0.44460958915468335E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,277.0E0,0.44321365417885417E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,278.0E0,0.44182161318386354E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,279.0E0,0.440433458553227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,280.0E0,0.43904918266267273E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,281.0E0,0.43766877788033914E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,282.0E0,0.4362922365669842E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,283.0E0,0.4349195510761788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,284.0E0,0.4335507137545093E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,285.0E0,0.4321857169417718E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,286.0E0,0.43082455297117006E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,287.0E0,0.42946721416950606E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,288.0E0,0.428113692857378E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,289.0E0,0.4267639813493689E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,290.0E0,0.42541807195423725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,291.0E0,0.4240759569751063E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,292.0E0,0.42273762870965403E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,293.0E0,0.4214030794502962E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,294.0E0,0.42007230148437275E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,295.0E0,0.41874528709433095E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,296.0E0,0.41742202855790855E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,297.0E0,0.41610251814831534E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,298.0E0,0.4147867481344127E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,299.0E0,0.4134747107808917E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,300.0E0,0.4121663983484496E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,301.0E0,0.4108618030939678E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,302.0E0,0.4095609172706853E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,303.0E0,0.40826373312837344E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,304.0E0,0.40697024291350425E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,305.0E0,0.4056804388694294E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,306.0E0,0.4043943132365399E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,307.0E0,0.4031118582524422E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,308.0E0,0.4018330661521211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,309.0E0,0.40055792916810834E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,310.0E0,0.39928643953064613E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,311.0E0,0.39801858946784935E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,312.0E0,0.39675437120587176E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,313.0E0,0.39549377696906113E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,314.0E0,0.39423679898012565E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,315.0E0,0.39298342946028786E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,316.0E0,0.3917336606294438E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,317.0E0,0.3904874847063178E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,318.0E0,0.3892448939086218E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,319.0E0,0.38800588045320467E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,320.0E0,0.38677043655620547E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,321.0E0,0.3855385544332069E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,322.0E0,0.38431022629938366E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,323.0E0,0.3830854443696547E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,324.0E0,0.38186420085882816E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,325.0E0,0.38064648798174894E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,326.0E0,0.3794322979534446E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,327.0E0,0.3782216229892707E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,328.0E0,0.3770144553050536E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,329.0E0,0.3758107871172332E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,330.0E0,0.37461061064300344E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,331.0E0,0.37341391810045166E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,332.0E0,0.37222070170869953E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,333.0E0,0.37103095368803757E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,334.0E0,0.36984466626006773E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,335.0E0,0.36866183164783406E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,336.0E0,0.3674824420759569E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,337.0E0,0.36630648977076946E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,338.0E0,0.36513396696044836E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,339.0E0,0.3639648658751453E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,340.0E0,0.3627991787471176E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,341.0E0,0.36163689781085395E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,342.0E0,0.36047801530320833E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,343.0E0,0.35932252346352433E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,344.0E0,0.35817041453375825E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,345.0E0,0.35702168075860824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,346.0E0,0.35587631438563483E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,347.0E0,0.35473430766538694E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,348.0E0,0.353595652851521E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,349.0E0,0.3524603422009225E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,350.0E0,0.35132836797382494E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,351.0E0,0.35019972243393094E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,352.0E0,0.349074397848526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,353.0E0,0.3479523864886021E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,354.0E0,0.34683368062896236E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,355.0E0,0.3457182725483484E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,356.0E0,0.34460615452954196E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,357.0E0,0.34349731885948687E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,358.0E0,0.3423917578293955E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,359.0E0,0.34128946373486074E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,360.0E0,0.3401904288759657E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,361.0E0,0.33909464555739516E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,362.0E0,0.33800210608853987E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,363.0E0,0.3369128027836028E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,364.0E0,0.3358267279617098E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,365.0E0,0.3347438739470083E0)
COMMIT
DISCONNECT
/*C22*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.2746')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,266.0E0,23.385837210818593E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,267.0E0,23.385835376202472E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,268.0E0,23.38583365705887E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,269.0E0,23.38583204611988E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,270.0E0,23.385830536574925E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,271.0E0,23.385829122042182E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,272.0E0,23.385827796541438E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,273.0E0,23.385826554469006E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,274.0E0,23.385825390573817E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,275.0E0,23.385824299935265E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,276.0E0,23.385823277942592E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,277.0E0,23.385822320275125E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,278.0E0,23.385821422884185E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,279.0E0,23.385820581975835E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,280.0E0,23.38581979399506E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,281.0E0,23.385819055610554E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,282.0E0,23.385818363700675E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,283.0E0,23.385817715340202E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,284.0E0,23.385817107788167E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,285.0E0,23.385816538476046E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,286.0E0,23.38581600499685E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,287.0E0,23.385815505095337E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,288.0E0,23.38581503665816E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,289.0E0,23.385814597704847E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,290.0E0,23.385814186379694E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,291.0E0,23.38581380094377E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,292.0E0,23.385813439767503E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,293.0E0,23.385813101324032E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,294.0E0,23.385812784182477E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,295.0E0,23.38581248700212E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,296.0E0,23.38581220852658E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,297.0E0,23.38581194757852E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,298.0E0,23.385811703054788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,299.0E0,23.385811473921596E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,300.0E0,23.38581125921031E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,301.0E0,23.38581105801311E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,302.0E0,23.38581086947946E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,303.0E0,23.385810692812232E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,304.0E0,23.385810527264578E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,305.0E0,23.385810372136703E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,306.0E0,23.38581022677272E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,307.0E0,23.385810090558103E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,308.0E0,23.38580996291694E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,309.0E0,23.385809843309637E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,310.0E0,23.385809731230573E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,311.0E0,23.38580962620581E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,312.0E0,23.385809527791427E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,313.0E0,23.38580943557132E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,314.0E0,23.385809349155632E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,315.0E0,23.385809268179067E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,316.0E0,23.385809192299227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,317.0E0,23.385809121195308E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,318.0E0,23.38580905456673E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,319.0E0,23.385808992131818E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,320.0E0,23.385808933626638E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,321.0E0,23.38580887880388E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,322.0E0,23.38580882743164E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,323.0E0,23.385808779292827E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,324.0E0,23.38580873418394E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,325.0E0,23.38580869191424E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,326.0E0,23.385808652305002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,327.0E0,23.385808615188854E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,328.0E0,23.385808580408785E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,329.0E0,23.385808547817845E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,330.0E0,23.385808517278203E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,331.0E0,23.38580848866074E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,332.0E0,23.385808461844466E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,333.0E0,23.38580843671605E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,334.0E0,23.38580841316923E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,335.0E0,23.385808391104447E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,336.0E0,23.385808370428457E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,337.0E0,23.385808351053832E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,338.0E0,23.385808332898694E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,339.0E0,23.385808315886237E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,340.0E0,23.38580829994458E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,341.0E0,23.38580828500627E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,342.0E0,23.385808271008237E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,343.0E0,23.385808257891213E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,344.0E0,23.3858082455998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,345.0E0,23.385808234082013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,346.0E0,23.385808223289196E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,347.0E0,23.385808213175654E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,348.0E0,23.38580820369868E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,349.0E0,23.385808194818214E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,350.0E0,23.385808186496682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,351.0E0,23.385808178698912E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,352.0E0,23.385808171391943E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,353.0E0,23.385808164544862E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,354.0E0,23.38580815812876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,355.0E0,23.385808152116486E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,356.0E0,23.38580814648264E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,357.0E0,23.385808141203388E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,358.0E0,23.385808136256408E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,359.0E0,23.385808131620784E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,360.0E0,23.385808127276942E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,361.0E0,23.385808123206516E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,362.0E0,23.385808119392284E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,363.0E0,23.385808115818104E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,364.0E0,23.385808112468904E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,365.0E0,23.3858081093305E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,266.0E0,976.6138677241619E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,267.0E0,976.6138881304362E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,268.0E0,976.6139072523242E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,269.0E0,976.6139251706611E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,270.0E0,976.6139419612017E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,271.0E0,976.6139576949297E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,272.0E0,976.6139724383629E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,273.0E0,976.6139862538314E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,274.0E0,976.6139991997419E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,275.0E0,976.6140113308226E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,276.0E0,976.6140226983636E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,277.0E0,976.6140333504234E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,278.0E0,976.6140433320306E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,279.0E0,976.6140526853873E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,280.0E0,976.614061450034E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,281.0E0,976.6140696630262E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,282.0E0,976.6140773590848E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,283.0E0,976.6140845707479E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,284.0E0,976.6140913285008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,285.0E0,976.6140976609146E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,286.0E0,976.6141035947605E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,287.0E0,976.6141091551248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,288.0E0,976.6141143655134E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,289.0E0,976.614119247957E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,290.0E0,976.6141238230944E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,291.0E0,976.614128110271E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,292.0E0,976.6141321276066E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,293.0E0,976.6141358920885E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,294.0E0,976.6141394196278E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,295.0E0,976.6141427251422E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,296.0E0,976.6141458226044E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,297.0E0,976.6141487251099E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,298.0E0,976.6141514449286E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,299.0E0,976.6141539935594E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,300.0E0,976.6141563817778E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,301.0E0,976.6141586196787E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,302.0E0,976.6141607167248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,303.0E0,976.6141626817808E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,304.0E0,976.6141645231544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,305.0E0,976.6141662486299E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,306.0E0,976.6141678655024E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,307.0E0,976.6141693806078E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,308.0E0,976.6141708003515E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,309.0E0,976.6141721307343E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,310.0E0,976.6141733773816E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,311.0E0,976.6141745455642E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,312.0E0,976.6141756402205E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,313.0E0,976.6141766659782E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,314.0E0,976.6141776271735E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,315.0E0,976.614178527872E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,316.0E0,976.6141793718783E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,317.0E0,976.6141801627623E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,318.0E0,976.6141809038666E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,319.0E0,976.6141815983251E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,320.0E0,976.614182249074E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,321.0E0,976.6141828588642E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,322.0E0,976.6141834302725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,323.0E0,976.614183965717E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,324.0E0,976.61418446746E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,325.0E0,976.6141849376224E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,326.0E0,976.6141853781922E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,327.0E0,976.6141857910321E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,328.0E0,976.6141861778887E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,329.0E0,976.6141865403953E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,330.0E0,976.6141868800854E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,331.0E0,976.614187198395E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,332.0E0,976.61418749667E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,333.0E0,976.6141877761711E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,334.0E0,976.6141880380809E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,335.0E0,976.6141882835055E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,336.0E0,976.6141885134828E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,337.0E0,976.6141887289851E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,338.0E0,976.6141889309233E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,339.0E0,976.6141891201523E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,340.0E0,976.6141892974705E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,341.0E0,976.6141894636282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,342.0E0,976.6141896193283E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,343.0E0,976.6141897652275E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,344.0E0,976.6141899019436E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,345.0E0,976.6141900300554E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,346.0E0,976.6141901501031E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,347.0E0,976.6141902625956E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,348.0E0,976.6141903680073E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,349.0E0,976.6141904667844E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,350.0E0,976.6141905593445E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,351.0E0,976.6141906460786E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,352.0E0,976.6141907273528E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,353.0E0,976.6141908035127E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,354.0E0,976.6141908748787E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,355.0E0,976.6141909417523E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,356.0E0,976.6141910044175E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,357.0E0,976.6141910631376E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,358.0E0,976.6141911181626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,359.0E0,976.6141911697239E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,360.0E0,976.6141912180402E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,361.0E0,976.6141912633159E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,362.0E0,976.6141913057409E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,363.0E0,976.6141913454968E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,364.0E0,976.6141913827491E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,365.0E0,976.6141914176573E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,266.0E0,2.950649977326748E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,267.0E0,2.764933388041186E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,268.0E0,2.5909059682849327E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,269.0E0,2.427831991345625E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,270.0E0,2.2750220377848517E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,271.0E0,2.1318300808206627E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,272.0E0,1.9976507551582322E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,273.0E0,1.8719167977222613E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,274.0E0,1.7540966494716326E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,275.0E0,1.643692208157605E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,276.0E0,1.5402367225251612E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,277.0E0,1.4432928190549193E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,278.0E0,1.352450652903477E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,279.0E0,1.2673261752250173E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,280.0E0,1.1875595095490596E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,281.0E0,1.112813430350335E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,282.0E0,1.0427719373786851E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,283.0E0,9.771389197218125E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,284.0E0,9.156369039530166E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,285.0E0,8.580058810715659E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,286.0E0,8.040022072764012E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,287.0E0,7.533975739260865E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,288.0E0,7.059780423303417E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,289.0E0,6.615431392926169E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,290.0E0,6.199050095799879E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,291.0E0,5.8088762173733255E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,292.0E0,5.4432602388823525E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,293.0E0,5.100656463764349E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,294.0E0,4.779616482996152E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,295.0E0,4.478783051729484E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,296.0E0,4.1968843513360074E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,297.0E0,3.932728612604549E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,298.0E0,3.685199077358887E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,299.0E0,3.45324927719578E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,300.0E0,3.2358986093834115E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,301.0E0,3.0322281912166888E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,302.0E0,2.841376975303109E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,303.0E0,2.6625381093559697E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,304.0E0,2.4949555251054263E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,305.0E0,2.3379207419065946E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,306.0E0,2.190769871531343E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,307.0E0,2.0528808114812058E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,308.0E0,1.9236706149556926E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,309.0E0,1.8025930263571474E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,310.0E0,1.6891361719131527E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,311.0E0,1.5828203956532437E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,312.0E0,1.48319623159117E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,313.0E0,1.3898425035398768E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,314.0E0,1.3023645445258083E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,315.0E0,1.2203925282748985E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,316.0E0,1.1435799057163428E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,317.0E0,1.0716019398942361E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,318.0E0,1.0041543330932069E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,319.0E0,9.409519403739734E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,320.0E0,8.817275640801957E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,321.0E0,8.26230824220113E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,322.0E0,7.742270999474002E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,323.0E0,7.25496537666187E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,324.0E0,6.7983312156684894E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,325.0E0,6.370438026631019E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,326.0E0,5.969476826483202E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,327.0E0,5.593752491206623E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,328.0E0,5.241676589438318E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,329.0E0,4.911760667137596E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,330.0E0,4.602609954922105E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,331.0E0,4.312917471469812E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,332.0E0,4.041458498058377E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,333.0E0,3.7870854008818974E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,334.0E0,3.548722779255881E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,335.0E0,3.325362919198526E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,336.0E0,3.116061533167819E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,337.0E0,2.9199337679434524E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,338.0E0,2.736150463776276E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,339.0E0,2.5639346489902874E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,340.0E0,2.4025582552176205E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,341.0E0,2.2513390393795984E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,342.0E0,2.1096376994011503E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,343.0E0,1.9768551714647295E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,344.0E0,1.8524300973776476E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,345.0E0,1.7358364513454981E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,346.0E0,1.6265813161187434E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,347.0E0,1.5242027991105861E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,348.0E0,1.4282680796763195E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,349.0E0,1.3383715792987071E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,350.0E0,1.2541332469435416E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,351.0E0,1.1751969523365312E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,352.0E0,1.1012289803687696E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,353.0E0,1.0319166202657165E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,354.0E0,9.669668435551847E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,355.0E0,9.061050652452043E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,356.0E0,8.490739829745254E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,357.0E0,7.956324892280034E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,358.0E0,7.455546520181766E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,359.0E0,6.986287597236672E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,360.0E0,6.546564260463205E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,361.0E0,6.134517513031708E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,362.0E0,5.748405365074568E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,363.0E0,5.386595469160859E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,364.0E0,5.047558219301117E-7)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,365.0E0,4.729860284306929E-7)
COMMIT
DISCONNECT
/*C23*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.2')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,996.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,997.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,998.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,999.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,1000.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,1001.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,1002.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,1003.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,1004.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,1005.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,1006.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,1007.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,1008.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,1009.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,1010.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,1011.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,1012.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,1013.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,1014.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,1015.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,1016.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,1017.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,1018.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,1019.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,1020.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,1021.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,1022.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,1023.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,1024.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,1025.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,1026.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,1027.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,1028.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,1029.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,1030.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,1031.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,1032.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,1033.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,1034.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,1035.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,1036.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,1037.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,1038.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,1039.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,1040.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,1041.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,1042.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,1043.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,1044.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,1045.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,1046.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,1047.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,1048.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,1049.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,1050.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,1051.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,1052.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,1053.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,1054.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,1055.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,1056.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,1057.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,1058.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,1059.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,1060.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,1061.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,1062.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,1063.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,1064.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,1065.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,1066.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,1067.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,1068.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,1069.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,1070.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,1071.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,1072.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,1073.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,1074.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,1075.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,1076.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,1077.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,1078.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,1079.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,1080.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,1081.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,1082.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,1083.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,1084.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,1085.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,1086.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,1087.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,1088.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,1089.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,1090.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,1091.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,1092.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,1093.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,1094.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,1095.0E0,74.92598190553136E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,996.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,997.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,998.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,999.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,1000.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,1001.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,1002.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,1003.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,1004.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,1005.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,1006.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,1007.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,1008.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,1009.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,1010.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,1011.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,1012.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,1013.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,1014.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,1015.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,1016.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,1017.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,1018.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,1019.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,1020.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,1021.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,1022.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,1023.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,1024.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,1025.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,1026.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,1027.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,1028.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,1029.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,1030.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,1031.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,1032.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,1033.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,1034.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,1035.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,1036.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,1037.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,1038.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,1039.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,1040.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,1041.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,1042.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,1043.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,1044.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,1045.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,1046.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,1047.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,1048.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,1049.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,1050.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,1051.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,1052.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,1053.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,1054.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,1055.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,1056.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,1057.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,1058.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,1059.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,1060.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,1061.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,1062.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,1063.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,1064.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,1065.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,1066.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,1067.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,1068.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,1069.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,1070.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,1071.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,1072.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,1073.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,1074.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,1075.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,1076.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,1077.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,1078.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,1079.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,1080.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,1081.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,1082.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,1083.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,1084.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,1085.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,1086.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,1087.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,1088.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,1089.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,1090.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,1091.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,1092.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,1093.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,1094.0E0,925.0740180938585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,1095.0E0,925.0740180938585E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,996.0E0,6.5387278225075524E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,997.0E0,6.179872597464399E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,998.0E0,5.840711887323289E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,999.0E0,5.520164827462078E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,1000.0E0,5.217209872735952E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,1001.0E0,4.930881541935348E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,1002.0E0,4.660267340912719E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,1003.0E0,4.404504854572805E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,1004.0E0,4.162778998458916E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,1005.0E0,3.934319421176194E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,1006.0E0,3.71839804937388E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,1007.0E0,3.514326767462599E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,1008.0E0,3.3214552246722836E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,1009.0E0,3.139168762462053E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,1010.0E0,2.9668864556769174E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,1011.0E0,2.8040592612088187E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,1012.0E0,2.650168268261884E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,1013.0E0,2.504723044645793E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,1014.0E0,2.367260073827037E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,1015.0E0,2.2373412777571498E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,1016.0E0,2.114552620770354E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,1017.0E0,1.998502790101433E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,1018.0E0,1.8888219488187342E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,1019.0E0,1.785160557198089E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,1020.0E0,1.6871882587815124E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,1021.0E0,1.5945928275707036E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,1022.0E0,1.5070791730001051E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,1023.0E0,1.4243683995185757E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,1024.0E0,1.3461969177826073E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,1025.0E0,1.2723156046285672E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,1026.0E0,1.2024890091471575E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,1027.0E0,1.1364946023293021E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,1028.0E0,1.0741220678929065E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,1029.0E0,1.0151726320300041E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,1030.0E0,9.594584299384165E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,1031.0E0,9.068019071190652E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,1032.0E0,8.57035253531049E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,1033.0E0,8.099998688010992E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,1034.0E0,7.655458567831573E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,1035.0E0,7.235315478572863E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,1036.0E0,6.8382304744553355E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,1037.0E0,6.46293809305924E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,1038.0E0,6.108242322447209E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,1039.0E0,5.773012789617192E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,1040.0E0,5.456181158139014E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,1041.0E0,5.156737723493798E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,1042.0E0,4.873728195266519E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,1043.0E0,4.606250655936487E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,1044.0E0,4.35345268657418E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,1045.0E0,4.11452865028397E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,1046.0E0,3.888717124735686E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,1047.0E0,3.6752984756027628E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,1048.0E0,3.473592563173672E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,1049.0E0,3.2829565748280026E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,1050.0E0,3.102782976469527E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,1051.0E0,2.9324975763876736E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,1052.0E0,2.771557695377235E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,1053.0E0,2.619450437284614E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,1054.0E0,2.475691054469144E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,1055.0E0,2.339821402970343E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,1056.0E0,2.2114084824578465E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,1057.0E0,2.09004305631122E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,1058.0E0,1.9753383474317048E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,1059.0E0,1.8669288056299228E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,1060.0E0,1.7644689426611145E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,1061.0E0,1.667632231195418E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,1062.0E0,1.5761100642143355E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,1063.0E0,1.48961077151706E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,1064.0E0,1.4078586902024194E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,1065.0E0,1.3305932861641987E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,1066.0E0,1.2575683238000885E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,1067.0E0,1.188551081288263E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,1068.0E0,1.1233216089307864E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,1069.0E0,1.061672028200195E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,1070.0E0,1.0034058692555284E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,1071.0E0,9.483374448164228E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,1072.0E0,8.962912583999581E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,1073.0E0,8.47101445034355E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,1074.0E0,8.006112426671506E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,1075.0E0,7.566724925832734E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,1076.0E0,7.151451672409477E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,1077.0E0,6.75896924020666E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,1078.0E0,6.388026834650756E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,1079.0E0,6.037442306657151E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,1080.0E0,5.706098385262449E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,1081.0E0,5.392939117015343E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,1082.0E0,5.096966500779411E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,1083.0E0,4.8172373072228006E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,1084.0E0,4.5528600728591397E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,1085.0E0,4.30299225906005E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,1086.0E0,4.0668375669852315E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,1087.0E0,3.8436433998733656E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,1088.0E0,3.632698464606209E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,1089.0E0,3.433330504902481E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,1090.0E0,3.2449041589175084E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,1091.0E0,3.066818934420989E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,1092.0E0,2.8985072951001203E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,1093.0E0,2.739432851889174E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,1094.0E0,2.5890886535617396E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,1095.0E0,2.4469955711377796E-23)
COMMIT
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','5000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','9.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.1668')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,996.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,997.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,998.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,999.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,1000.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,1001.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,1002.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,1003.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,1004.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,1005.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,1006.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,1007.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,1008.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,1009.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,1010.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,1011.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,1012.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,1013.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,1014.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,1015.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,1016.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,1017.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,1018.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,1019.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,1020.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,1021.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,1022.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,1023.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,1024.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,1025.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,1026.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,1027.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,1028.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,1029.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,1030.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,1031.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,1032.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,1033.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,1034.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,1035.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,1036.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,1037.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,1038.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,1039.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,1040.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,1041.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,1042.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,1043.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,1044.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,1045.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,1046.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,1047.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,1048.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,1049.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,1050.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,1051.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,1052.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,1053.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,1054.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,1055.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,1056.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,1057.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,1058.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,1059.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,1060.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,1061.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,1062.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,1063.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,1064.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,1065.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,1066.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,1067.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,1068.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,1069.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,1070.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,1071.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,1072.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,1073.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,1074.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,1075.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,1076.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,1077.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,1078.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,1079.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,1080.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,1081.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,1082.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,1083.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,1084.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,1085.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,1086.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,1087.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,1088.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,1089.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,1090.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,1091.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,1092.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,1093.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,1094.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,1095.0E0,3.7008485232846854E-6)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,996.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,997.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,998.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,999.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,1000.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,1001.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,1002.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,1003.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,1004.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,1005.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,1006.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,1007.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,1008.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,1009.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,1010.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,1011.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,1012.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,1013.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,1014.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,1015.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,1016.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,1017.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,1018.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,1019.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,1020.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,1021.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,1022.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,1023.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,1024.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,1025.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,1026.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,1027.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,1028.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,1029.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,1030.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,1031.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,1032.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,1033.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,1034.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,1035.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,1036.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,1037.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,1038.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,1039.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,1040.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,1041.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,1042.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,1043.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,1044.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,1045.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,1046.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,1047.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,1048.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,1049.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,1050.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,1051.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,1052.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,1053.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,1054.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,1055.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,1056.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,1057.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,1058.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,1059.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,1060.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,1061.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,1062.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,1063.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,1064.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,1065.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,1066.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,1067.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,1068.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,1069.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,1070.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,1071.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,1072.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,1073.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,1074.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,1075.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,1076.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,1077.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,1078.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,1079.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,1080.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,1081.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,1082.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,1083.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,1084.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,1085.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,1086.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,1087.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,1088.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,1089.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,1090.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,1091.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,1092.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,1093.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,1094.0E0,4999.999996294767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,1095.0E0,4999.999996294767E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,996.0E0,9.724689439254442E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,997.0E0,9.05427329236659E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,998.0E0,8.430075362812606E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,999.0E0,7.848909385429524E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,1000.0E0,7.3078087548828E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,1001.0E0,6.804011382406736E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,1002.0E0,6.33494559651526E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,1003.0E0,5.898217015711796E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,1004.0E0,5.491596326189282E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,1005.0E0,5.113007902130607E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,1006.0E0,4.760519210520888E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,1007.0E0,4.432330946387714E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,1008.0E0,4.126767848113912E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,1009.0E0,3.8422701459389206E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,1010.0E0,3.577385599997045E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,1011.0E0,3.33076208725009E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,1012.0E0,3.101140699473862E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,1013.0E0,2.8873493170667146E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,1014.0E0,2.6882966258770636E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,1015.0E0,2.502966546508443E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,1016.0E0,2.330413047666008E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,1017.0E0,2.1697553170687807E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,1018.0E0,2.0201732652772884E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,1019.0E0,1.8809033394855039E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,1020.0E0,1.7512346259082534E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,1021.0E0,1.6305052208684498E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,1022.0E0,1.5180988520601336E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,1023.0E0,1.4134417327402265E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,1024.0E0,1.3159996327910827E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,1025.0E0,1.225275151702657E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,1026.0E0,1.1408051795545647E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,1027.0E0,1.062158533036461E-28)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,1028.0E0,9.889337544405901E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,1029.0E0,9.207570623907888E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,1030.0E0,8.57280443847412E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,1031.0E0,7.98179877648656E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,1032.0E0,7.431536805202319E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,1033.0E0,6.919209671104619E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,1034.0E0,6.442202161899182E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,1035.0E0,5.998079356966907E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,1036.0E0,5.58457419812892E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,1037.0E0,5.199575917277969E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,1038.0E0,4.841119261804274E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,1039.0E0,4.5073744628161106E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,1040.0E0,4.1966378949472367E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,1041.0E0,3.907323380073392E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,1042.0E0,3.637954090547071E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,1043.0E0,3.3871550106199806E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,1044.0E0,3.1536459175719824E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,1045.0E0,2.936234846718166E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,1046.0E0,2.733812006935709E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,1047.0E0,2.545344115651797E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,1048.0E0,2.3698691243752313E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,1049.0E0,2.206491307847718E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,1050.0E0,2.0543766917470766E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,1051.0E0,1.912748795602748E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,1052.0E0,1.780884669192985E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,1053.0E0,1.6581112021911816E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,1054.0E0,1.5438016882237323E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,1055.0E0,1.4373726258003003E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,1056.0E0,1.3382807397867267E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,1057.0E0,1.2460202082163033E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,1058.0E0,1.1601200802836228E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,1059.0E0,1.0801418723408389E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,1060.0E0,1.0056773296249985E-29)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,1061.0E0,9.36346342290973E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,1062.0E0,8.717950051122353E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,1063.0E0,8.11693810945077E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,1064.0E0,7.5573596873467E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,1065.0E0,7.03635837477114E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,1066.0E0,6.551274681435E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,1067.0E0,6.099632461231385E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,1068.0E0,5.679126272561976E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,1069.0E0,5.287609610037489E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,1070.0E0,4.923083947479822E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,1071.0E0,4.583688536295264E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,1072.0E0,4.267690907143678E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,1073.0E0,3.973478026418761E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,1074.0E0,3.699548062397024E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,1075.0E0,3.444502719025003E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,1076.0E0,3.207040098212241E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,1077.0E0,2.985948054194731E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,1078.0E0,2.7800980060459662E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,1079.0E0,2.588439176750896E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,1080.0E0,2.4099932294358438E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,1081.0E0,2.2438492733745005E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,1082.0E0,2.0891592142779152E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,1083.0E0,1.945133425133526E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,1084.0E0,1.8110367154948535E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,1085.0E0,1.6861845786467037E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,1086.0E0,1.5699396974892725E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,1087.0E0,1.4617086913052115E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,1088.0E0,1.3609390868032359E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,1089.0E0,1.2671164979767416E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,1090.0E0,1.1797620003818574E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,1091.0E0,1.098429686431678E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,1092.0E0,1.0227043892275485E-30)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,1093.0E0,9.521995633084568E-31)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,1094.0E0,8.86555311500752E-31)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,1095.0E0,8.254365477960072E-31)
COMMIT
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','5000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.08349999999999999')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,996.0E0,3625.755798857524E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,997.0E0,3625.7240483398205E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,998.0E0,3625.6926416386436E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,999.0E0,3625.661575044264E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,1000.0E0,3625.630844886701E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,1001.0E0,3625.6004475353134E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,1002.0E0,3625.5703793983394E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,1003.0E0,3625.540636922522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,1004.0E0,3625.5112165926835E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,1005.0E0,3625.4821149313357E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,1006.0E0,3625.4533284982654E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,1007.0E0,3625.4248538901675E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,1008.0E0,3625.3966877402213E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,1009.0E0,3625.3688267177286E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,1010.0E0,3625.341267527729E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,1011.0E0,3625.3140069106107E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,1012.0E0,3625.28704164173E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,1013.0E0,3625.260368531074E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,1014.0E0,3625.233984422858E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,1015.0E0,3625.2078861951854E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,1016.0E0,3625.1820707596685E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,1017.0E0,3625.1565350610927E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,1018.0E0,3625.131276077038E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,1019.0E0,3625.10629081759E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,1020.0E0,3625.081576324919E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,1021.0E0,3625.0571296729777E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,1022.0E0,3625.032947967173E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,1023.0E0,3625.009028344012E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,1024.0E0,3624.98536797079E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,1025.0E0,3624.96196404523E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,1026.0E0,3624.9388137951873E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,1027.0E0,3624.9159144783494E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,1028.0E0,3624.893263381857E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,1029.0E0,3624.870857822049E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,1030.0E0,3624.8486951441114E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,1031.0E0,3624.8267727218145E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,1032.0E0,3624.805087957153E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,1033.0E0,3624.7836382800874E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,1034.0E0,3624.7624211482366E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,1035.0E0,3624.741434046575E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,1036.0E0,3624.720674487152E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,1037.0E0,3624.7001400087825E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,1038.0E0,3624.6798281767906E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,1039.0E0,3624.6597365827065E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,1040.0E0,3624.6398628439842E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,1041.0E0,3624.6202046037506E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,1042.0E0,3624.6007595305146E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,1043.0E0,3624.581525317886E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,1044.0E0,3624.5624996843226E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,1045.0E0,3624.5436803728644E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,1046.0E0,3624.5250651508572E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,1047.0E0,3624.506651809722E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,1048.0E0,3624.4884381646534E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,1049.0E0,3624.4704220544068E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,1050.0E0,3624.4526013410377E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,1051.0E0,3624.4349739096256E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,1052.0E0,3624.417537668056E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,1053.0E0,3624.40029054679E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,1054.0E0,3624.383230498567E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,1055.0E0,3624.366355498221E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,1056.0E0,3624.349663542423E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,1057.0E0,3624.3331526494553E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,1058.0E0,3624.3168208589445E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,1059.0E0,3624.3006662317002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,1060.0E0,3624.284686849433E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,1061.0E0,3624.2688808145513E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,1062.0E0,3624.253246249912E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,1063.0E0,3624.2377812986774E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,1064.0E0,3624.2224841240004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,1065.0E0,3624.2073529088634E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,1066.0E0,3624.1923858558866E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,1067.0E0,3624.177581187048E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,1068.0E0,3624.1629371435515E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,1069.0E0,3624.148451985578E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,1070.0E0,3624.1341239920675E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,1071.0E0,3624.119951460587E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,1072.0E0,3624.1059327070443E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,1073.0E0,3624.092066065538E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,1074.0E0,3624.078349888173E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,1075.0E0,3624.0647825448395E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,1076.0E0,3624.051362423031E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,1077.0E0,3624.0380879276727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,1078.0E0,3624.0249574808963E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,1079.0E0,3624.0119695218923E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,1080.0E0,3623.9991225067038E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,1081.0E0,3623.986414908072E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,1082.0E0,3623.9738452152155E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,1083.0E0,3623.961411933697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,1084.0E0,3623.949113585216E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,1085.0E0,3623.9369487074455E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,1086.0E0,3623.9249158538737E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,1087.0E0,3623.9130135936175E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,1088.0E0,3623.9012405112503E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,1089.0E0,3623.88959520666E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,1090.0E0,3623.878076294855E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,1091.0E0,3623.8666824058196E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,1092.0E0,3623.855412184369E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,1093.0E0,3623.844264289944E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,1094.0E0,3623.8332373964877E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,1095.0E0,3623.822330192292E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,996.0E0,1373.7169767901096E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,997.0E0,1373.754431777362E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,998.0E0,1373.7914814988537E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,999.0E0,1373.8281303203632E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,1000.0E0,1373.8643825610618E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,1001.0E0,1373.90024249398E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,1002.0E0,1373.9357143465245E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,1003.0E0,1373.970802300922E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,1004.0E0,1374.005510494708E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,1005.0E0,1374.0398430212153E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,1006.0E0,1374.0738039299981E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,1007.0E0,1374.107397227322E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,1008.0E0,1374.1406268766148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,1009.0E0,1374.1734967989132E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,1010.0E0,1374.206010873303E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,1011.0E0,1374.2381729373758E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,1012.0E0,1374.2699867876506E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,1013.0E0,1374.3014561800092E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,1014.0E0,1374.3325848301345E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,1015.0E0,1374.3633764139267E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,1016.0E0,1374.3938345679169E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,1017.0E0,1374.4239628896976E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,1018.0E0,1374.453764938325E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,1019.0E0,1374.4832442347206E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,1020.0E0,1374.5124042620814E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,1021.0E0,1374.5412484662693E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,1022.0E0,1374.5697802562206E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,1023.0E0,1374.5980030043288E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,1024.0E0,1374.6259200468246E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,1025.0E0,1374.6535346841576E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,1026.0E0,1374.680850181393E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,1027.0E0,1374.7078697685765E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,1028.0E0,1374.7345966410794E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,1029.0E0,1374.7610339600128E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,1030.0E0,1374.787184852553E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,1031.0E0,1374.8130524123235E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,1032.0E0,1374.8386396997303E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,1033.0E0,1374.8639497423296E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,1034.0E0,1374.8889855351733E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,1035.0E0,1374.9137500411439E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,1036.0E0,1374.9382461913194E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,1037.0E0,1374.9624768852761E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,1038.0E0,1374.9864449914564E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,1039.0E0,1375.0101533474733E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,1040.0E0,1375.0336047604578E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,1041.0E0,1375.0568020073752E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,1042.0E0,1375.0797478353397E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,1043.0E0,1375.102444961931E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,1044.0E0,1375.124896075522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,1045.0E0,1375.1471038355783E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,1046.0E0,1375.1690708729716E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,1047.0E0,1375.190799790275E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,1048.0E0,1375.2122931620727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,1049.0E0,1375.233553535261E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,1050.0E0,1375.2545834293194E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,1051.0E0,1375.2753853366394E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,1052.0E0,1375.2959617227934E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,1053.0E0,1375.3163150267965E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,1054.0E0,1375.3364476614368E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,1055.0E0,1375.3563620135214E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,1056.0E0,1375.3760604441713E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,1057.0E0,1375.3955452890852E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,1058.0E0,1375.4148188588117E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,1059.0E0,1375.4338834390153E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,1060.0E0,1375.4527412907544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,1061.0E0,1375.4713946507254E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,1062.0E0,1375.489845731541E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,1063.0E0,1375.508096721966E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,1064.0E0,1375.5261497871948E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,1065.0E0,1375.5440070690895E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,1066.0E0,1375.5616706864369E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,1067.0E0,1375.5791427351844E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,1068.0E0,1375.5964252887002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,1069.0E0,1375.6135203979902E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,1070.0E0,1375.6304300919567E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,1071.0E0,1375.6471563776308E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,1072.0E0,1375.6637012404103E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,1073.0E0,1375.6800666442778E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,1074.0E0,1375.6962545320407E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,1075.0E0,1375.7122668255524E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,1076.0E0,1375.728105425945E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,1077.0E0,1375.7437722138382E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,1078.0E0,1375.759269049569E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,1079.0E0,1375.7745977733998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,1080.0E0,1375.789760205751E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,1081.0E0,1375.8047581473913E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,1082.0E0,1375.8195933796642E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,1083.0E0,1375.8342676646814E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,1084.0E0,1375.8487827455533E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,1085.0E0,1375.8631403465522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,1086.0E0,1375.877342173365E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,1087.0E0,1375.8913899132565E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,1088.0E0,1375.9052852352788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,1089.0E0,1375.9190297904504E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,1090.0E0,1375.9326252119856E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,1091.0E0,1375.9460731154486E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,1092.0E0,1375.9593750989654E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,1093.0E0,1375.9725327434005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,1094.0E0,1375.985547612551E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,1095.0E0,1375.9984212533145E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,996.0E0,0.5272243523816931E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,997.0E0,0.5215198828321521E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,998.0E0,0.5158768625273191E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,999.0E0,0.5102946353995911E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,1000.0E0,0.5047725522590352E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,1001.0E0,0.4993099707240471E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,1002.0E0,0.4939062551526496E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,1003.0E0,0.48856077657440755E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,1004.0E0,0.48327291262299454E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,1005.0E0,0.47804204746937207E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,1006.0E0,0.4728675717555891E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,1007.0E0,0.4677488825292057E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,1008.0E0,0.4626853831783217E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,1009.0E0,0.45767648336721367E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,1010.0E0,0.4527215989725761E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,1011.0E0,0.44782015202035835E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,1012.0E0,0.4429715706231969E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,1013.0E0,0.43817528891843877E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,1014.0E0,0.4334307470067434E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,1015.0E0,0.4287373908912709E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,1016.0E0,0.42409467241744225E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,1017.0E0,0.41950204921327267E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,1018.0E0,0.41495898463027214E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,1019.0E0,0.4104649476849052E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,1020.0E0,0.4060194130006126E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,1021.0E0,0.4016218607503868E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,1022.0E0,0.3972717765998886E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,1023.0E0,0.3929686516511201E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,1024.0E0,0.3887119823866315E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,1025.0E0,0.38450127061425954E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,1026.0E0,0.38033602341241557E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,1027.0E0,0.3762157530758787E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,1028.0E0,0.3721399770621241E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,1029.0E0,0.3681082179381691E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,1030.0E0,0.364120003327933E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,1031.0E0,0.360174865860106E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,1032.0E0,0.3562723431165258E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,1033.0E0,0.35241197758105475E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,1034.0E0,0.34859331658896164E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,1035.0E0,0.34481591227678027E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,1036.0E0,0.34107932153267845E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,1037.0E0,0.337383105947291E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,1038.0E0,0.3337268317650555E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,1039.0E0,0.3301100698360077E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,1040.0E0,0.3265323955680562E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,1041.0E0,0.32299338887972917E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,1042.0E0,0.3194926341533795E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,1043.0E0,0.3160297201888561E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,1044.0E0,0.3126042401576301E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,1045.0E0,0.3092157915573706E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,1046.0E0,0.3058639761669766E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,1047.0E0,0.3025484000020463E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,1048.0E0,0.29926867327079365E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,1049.0E0,0.296024410330398E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,1050.0E0,0.29281522964378737E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,1051.0E0,0.2896407537368538E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,1052.0E0,0.2865006091560936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,1053.0E0,0.28339442642666507E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,1054.0E0,0.2803218400108727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,1055.0E0,0.27728248826705737E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,1056.0E0,0.27427601340890445E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,1057.0E0,0.27130206146515035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,1058.0E0,0.2683602822397034E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,1059.0E0,0.26545032927215634E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,1060.0E0,0.26257185979869185E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,1061.0E0,0.2597245347133928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,1062.0E0,0.25690801852993184E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,1063.0E0,0.2541219793436453E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,1064.0E0,0.2513660887939974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,1065.0E0,0.2486400220274142E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,1066.0E0,0.24594345766049752E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,1067.0E0,0.243276077743607E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,1068.0E0,0.24063756772481307E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,1069.0E0,0.23802761641421155E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,1070.0E0,0.23544591594860148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,1071.0E0,0.23289216175652114E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,1072.0E0,0.2303660525236356E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,1073.0E0,0.22786729015847798E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,1074.0E0,0.22539557975853955E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,1075.0E0,0.22295062957670048E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,1076.0E0,0.2205321509880063E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,1077.0E0,0.21813985845677775E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,1078.0E0,0.21577346950406232E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,1079.0E0,0.21343270467541148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,1080.0E0,0.21111728750898856E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,1081.0E0,0.2088269445040041E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,1082.0E0,0.20656140508947035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,1083.0E0,0.20432040159327938E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,1084.0E0,0.20210366921159284E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,1085.0E0,0.19991094597854914E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,1086.0E0,0.1977419727362779E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,1087.0E0,0.1955964931052258E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,1088.0E0,0.19347425345478017E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,1089.0E0,0.19137500287420206E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,1090.0E0,0.1892984931438525E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,1091.0E0,0.18724447870671715E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,1092.0E0,0.18521271664022249E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,1093.0E0,0.1832029666283422E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,1094.0E0,0.18121499093399102E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,1095.0E0,0.1792485543717044E0)
COMMIT
DISCONNECT
/*C24*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.2')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,996.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,997.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,998.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,999.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,1000.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,1001.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,1002.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,1003.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,1004.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,1005.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,1006.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,1007.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,1008.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,1009.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,1010.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,1011.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,1012.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,1013.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,1014.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,1015.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,1016.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,1017.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,1018.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,1019.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,1020.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,1021.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,1022.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,1023.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,1024.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,1025.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,1026.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,1027.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,1028.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,1029.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,1030.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,1031.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,1032.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,1033.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,1034.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,1035.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,1036.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,1037.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,1038.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,1039.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,1040.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,1041.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,1042.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,1043.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,1044.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,1045.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,1046.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,1047.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,1048.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,1049.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,1050.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,1051.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,1052.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,1053.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,1054.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,1055.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,1056.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,1057.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,1058.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,1059.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,1060.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,1061.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,1062.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,1063.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,1064.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,1065.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,1066.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,1067.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,1068.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,1069.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,1070.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,1071.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,1072.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,1073.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,1074.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,1075.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,1076.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,1077.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,1078.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,1079.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,1080.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,1081.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,1082.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,1083.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,1084.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,1085.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,1086.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,1087.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,1088.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,1089.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,1090.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,1091.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,1092.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,1093.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,1094.0E0,74.92598190553136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,1095.0E0,74.92598190553136E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,996.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,997.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,998.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,999.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,1000.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,1001.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,1002.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,1003.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,1004.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,1005.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,1006.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,1007.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,1008.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,1009.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,1010.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,1011.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,1012.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,1013.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,1014.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,1015.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,1016.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,1017.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,1018.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,1019.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,1020.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,1021.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,1022.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,1023.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,1024.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,1025.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,1026.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,1027.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,1028.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,1029.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,1030.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,1031.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,1032.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,1033.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,1034.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,1035.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,1036.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,1037.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,1038.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,1039.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,1040.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,1041.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,1042.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,1043.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,1044.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,1045.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,1046.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,1047.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,1048.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,1049.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,1050.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,1051.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,1052.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,1053.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,1054.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,1055.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,1056.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,1057.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,1058.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,1059.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,1060.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,1061.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,1062.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,1063.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,1064.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,1065.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,1066.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,1067.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,1068.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,1069.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,1070.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,1071.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,1072.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,1073.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,1074.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,1075.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,1076.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,1077.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,1078.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,1079.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,1080.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,1081.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,1082.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,1083.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,1084.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,1085.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,1086.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,1087.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,1088.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,1089.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,1090.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,1091.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,1092.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,1093.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,1094.0E0,925.0740180938604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,1095.0E0,925.0740180938604E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,996.0E0,6.538727822510642E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,997.0E0,6.179872597467319E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,998.0E0,5.840711887326043E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,999.0E0,5.520164827464671E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,1000.0E0,5.217209872738399E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,1001.0E0,4.9308815419376604E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,1002.0E0,4.660267340914907E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,1003.0E0,4.404504854574875E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,1004.0E0,4.162778998460866E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,1005.0E0,3.934319421178035E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,1006.0E0,3.718398049375611E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,1007.0E0,3.514326767464232E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,1008.0E0,3.32145522467383E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,1009.0E0,3.139168762463515E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,1010.0E0,2.9668864556783E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,1011.0E0,2.804059261210117E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,1012.0E0,2.6501682682631127E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,1013.0E0,2.50472304464696E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,1014.0E0,2.3672600738281426E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,1015.0E0,2.2373412777581948E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,1016.0E0,2.1145526207713415E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,1017.0E0,1.9985027901023695E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,1018.0E0,1.888821948819617E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,1019.0E0,1.785160557198918E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,1020.0E0,1.6871882587823024E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,1021.0E0,1.59459282757145E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,1022.0E0,1.5070791730008084E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,1023.0E0,1.4243683995192412E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,1024.0E0,1.34619691778324E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,1025.0E0,1.27231560462923E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,1026.0E0,1.2024890091478432E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,1027.0E0,1.1364946023300078E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,1028.0E0,1.0741220678936263E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,1029.0E0,1.0151726320307404E-21)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,1030.0E0,9.594584299391568E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,1031.0E0,9.068019071198113E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,1032.0E0,8.570352535318004E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,1033.0E0,8.099998688018507E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,1034.0E0,7.655458567839061E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,1035.0E0,7.23531547858032E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,1036.0E0,6.838230474462744E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,1037.0E0,6.462938093066572E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,1038.0E0,6.108242322454427E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,1039.0E0,5.773012789624303E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,1040.0E0,5.456181158145995E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,1041.0E0,5.156737723500644E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,1042.0E0,4.873728195273221E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,1043.0E0,4.606250655943081E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,1044.0E0,4.353452686580641E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,1045.0E0,4.1145286502902724E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,1046.0E0,3.888717124741835E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,1047.0E0,3.6752984756087705E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,1048.0E0,3.4735925631795325E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,1049.0E0,3.2829565748337193E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,1050.0E0,3.102782976475096E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,1051.0E0,2.932497576393094E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,1052.0E0,2.7715576953824994E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,1053.0E0,2.619450437289724E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,1054.0E0,2.475691054474108E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,1055.0E0,2.33982140297515E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,1056.0E0,2.2114084824625184E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,1057.0E0,2.0900430563157377E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,1058.0E0,1.975338347436075E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,1059.0E0,1.8669288056341497E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,1060.0E0,1.764468942665201E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,1061.0E0,1.667632231199366E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,1062.0E0,1.5761100642181498E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,1063.0E0,1.4896107715207408E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,1064.0E0,1.4078586902059697E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,1065.0E0,1.3305932861676248E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,1066.0E0,1.2575683238033907E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,1067.0E0,1.1885510812914467E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,1068.0E0,1.1233216089338439E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,1069.0E0,1.0616720282031408E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,1070.0E0,1.0034058692583629E-22)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,1071.0E0,9.483374448191508E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,1072.0E0,8.962912584025847E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,1073.0E0,8.471014450368826E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,1074.0E0,8.00611242669579E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,1075.0E0,7.566724925856085E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,1076.0E0,7.15145167243193E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,1077.0E0,6.758969240228233E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,1078.0E0,6.388026834671475E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,1079.0E0,6.037442306677053E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,1080.0E0,5.706098385281537E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,1081.0E0,5.392939117033655E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,1082.0E0,5.0969665007969614E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,1083.0E0,4.8172373072396413E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,1084.0E0,4.552860072875298E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,1085.0E0,4.302992259075531E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,1086.0E0,4.066837567000072E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,1087.0E0,3.8436433998875956E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,1088.0E0,3.6326984646198506E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,1089.0E0,3.433330504915553E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,1090.0E0,3.244904158930025E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,1091.0E0,3.066818934432992E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,1092.0E0,2.898507295111612E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,1093.0E0,2.739432851900186E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,1094.0E0,2.5890886535722814E-23)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,1095.0E0,2.4469955711478698E-23)
COMMIT
DISCONNECT
/*C25*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.2')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,266.0E0,74.92734515220516E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,267.0E0,74.92727033469832E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,268.0E0,74.92719962333946E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,269.0E0,74.92713279277137E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,270.0E0,74.92706963000582E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,271.0E0,74.92700993374369E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,272.0E0,74.92695351373472E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,273.0E0,74.92690019016909E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,274.0E0,74.92684979310668E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,275.0E0,74.92680216193385E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,276.0E0,74.926757144852E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,277.0E0,74.92671459839356E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,278.0E0,74.92667438696479E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,279.0E0,74.92663638241463E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,280.0E0,74.92660046362441E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,281.0E0,74.9265665161231E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,282.0E0,74.92653443172223E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,283.0E0,74.92650410817059E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,284.0E0,74.92647544882954E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,285.0E0,74.92644836236369E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,286.0E0,74.92642276245056E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,287.0E0,74.92639856750468E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,288.0E0,74.92637570041953E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,289.0E0,74.92635408831903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,290.0E0,74.92633366232718E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,291.0E0,74.92631435734852E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,292.0E0,74.9262961118592E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,293.0E0,74.92627886771305E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,294.0E0,74.9262625699544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,295.0E0,74.92624716664355E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,296.0E0,74.92623260869159E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,297.0E0,74.92621884970397E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,298.0E0,74.92620584583192E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,299.0E0,74.92619355563363E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,300.0E0,74.9261819399411E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,301.0E0,74.92617096173663E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,302.0E0,74.92616058603342E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,303.0E0,74.92615077976572E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,304.0E0,74.92614151168132E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,305.0E0,74.92613275224417E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,306.0E0,74.92612447353898E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,307.0E0,74.92611664918228E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,308.0E0,74.92610925423857E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,309.0E0,74.92610226514097E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,310.0E0,74.92609565961597E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,311.0E0,74.92608941661263E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,312.0E0,74.92608351623478E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,313.0E0,74.92607793967892E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,314.0E0,74.92607266917324E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,315.0E0,74.92606768792108E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,316.0E0,74.92606298004782E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,317.0E0,74.92605853054978E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,318.0E0,74.92605432524728E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,319.0E0,74.92605035073821E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,320.0E0,74.9260465943564E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,321.0E0,74.9260430441302E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,322.0E0,74.92603968874623E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,323.0E0,74.92603651751078E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,324.0E0,74.92603352031747E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,325.0E0,74.92603068761495E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,326.0E0,74.92602801037525E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,327.0E0,74.9260254800667E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,328.0E0,74.92602308862537E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,329.0E0,74.92602082843004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,330.0E0,74.9260186922776E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,331.0E0,74.9260166733604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,332.0E0,74.9260147652443E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,333.0E0,74.92601296184834E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,334.0E0,74.92601125742584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,335.0E0,74.92600964654471E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,336.0E0,74.92600812407136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,337.0E0,74.92600668515347E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,338.0E0,74.9260053252056E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,339.0E0,74.92600403989387E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,340.0E0,74.92600282512181E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,341.0E0,74.92600167701842E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,342.0E0,74.92600059192452E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,343.0E0,74.92599956638236E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,344.0E0,74.92599859712338E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,345.0E0,74.92599768105879E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,346.0E0,74.92599681526916E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,347.0E0,74.92599599699548E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,348.0E0,74.92599522363012E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,349.0E0,74.92599449270803E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,350.0E0,74.92599380190008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,351.0E0,74.92599314900467E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,352.0E0,74.92599253194116E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,353.0E0,74.92599194874285E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,354.0E0,74.92599139755147E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,355.0E0,74.92599087661041E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,356.0E0,74.92599038425863E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,357.0E0,74.9259899189285E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,358.0E0,74.92598947913638E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,359.0E0,74.92598906348078E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,360.0E0,74.92598867063684E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,361.0E0,74.9259882993529E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,362.0E0,74.92598794844554E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,363.0E0,74.92598761679642E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,364.0E0,74.92598730334883E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,365.0E0,74.92598700710363E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,266.0E0,925.0675200894476E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,267.0E0,925.0678767089339E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,268.0E0,925.0682137566954E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,269.0E0,925.068532306845E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,270.0E0,925.0688333745525E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,271.0E0,925.0691179192719E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,272.0E0,925.069386847805E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,273.0E0,925.0696410171861E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,274.0E0,925.0698812374126E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,275.0E0,925.0701082740298E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,276.0E0,925.070322850571E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,277.0E0,925.0705256508611E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,278.0E0,925.0707173211936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,279.0E0,925.0708984723946E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,280.0E0,925.0710696817672E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,281.0E0,925.0712314949332E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,282.0E0,925.0713844275645E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,283.0E0,925.0715289670396E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,284.0E0,925.0716655739857E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,285.0E0,925.0717946837503E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,286.0E0,925.0719167077881E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,287.0E0,925.0720320349734E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,288.0E0,925.0721410328384E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,289.0E0,925.0722440487431E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,290.0E0,925.0723414109854E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,291.0E0,925.0724334298491E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,292.0E0,925.0725203985849E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,293.0E0,925.0726025943512E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,294.0E0,925.0726802790957E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,295.0E0,925.0727537003885E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,296.0E0,925.0728230922141E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,297.0E0,925.0728886757144E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,298.0E0,925.0729506598972E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,299.0E0,925.0730092422955E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,300.0E0,925.0730646096079E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,301.0E0,925.0731169382819E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,302.0E0,925.0731663950784E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,303.0E0,925.0732131376159E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,304.0E0,925.0732573148539E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,305.0E0,925.0732990675788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,306.0E0,925.0733385288526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,307.0E0,925.0733758244348E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,308.0E0,925.0734110731788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,309.0E0,925.0734443874207E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,310.0E0,925.0734758733262E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,311.0E0,925.0735056312387E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,312.0E0,925.073533755993E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,313.0E0,925.0735603372208E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,314.0E0,925.0735854596289E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,315.0E0,925.0736092032834E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,316.0E0,925.0736316438492E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,317.0E0,925.0736528528442E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,318.0E0,925.0736728978567E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,319.0E0,925.0736918427689E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,320.0E0,925.0737097479563E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,321.0E0,925.0737266704801E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,322.0E0,925.0737426642702E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,323.0E0,925.0737577802994E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,324.0E0,925.0737720667366E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,325.0E0,925.0737855691134E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,326.0E0,925.0737983304599E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,327.0E0,925.0738103914425E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,328.0E0,925.0738217905022E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,329.0E0,925.0738325639635E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,330.0E0,925.0738427461611E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,331.0E0,925.0738523695443E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,332.0E0,925.0738614647828E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,333.0E0,925.0738700608606E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,334.0E0,925.0738781851715E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,335.0E0,925.0738858636092E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,336.0E0,925.0738931206433E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,337.0E0,925.0738999794016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,338.0E0,925.0739064617393E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,339.0E0,925.073912588315E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,340.0E0,925.0739183786562E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,341.0E0,925.0739238512165E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,342.0E0,925.073929023434E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,343.0E0,925.0739339117922E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,344.0E0,925.0739385318699E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,345.0E0,925.0739428983901E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,346.0E0,925.0739470252656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,347.0E0,925.0739509256566E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,348.0E0,925.0739546119879E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,349.0E0,925.073958096007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,350.0E0,925.0739613888175E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,351.0E0,925.0739645009135E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,352.0E0,925.0739674422135E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,353.0E0,925.0739702220907E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,354.0E0,925.0739728494035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,355.0E0,925.0739753325257E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,356.0E0,925.0739776793706E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,357.0E0,925.073979897417E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,358.0E0,925.0739819937344E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,359.0E0,925.073983974998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,360.0E0,925.0739858475305E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,361.0E0,925.0739876172958E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,362.0E0,925.0739892899342E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,363.0E0,925.0739908707748E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,364.0E0,925.0739923648566E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,365.0E0,925.0739937769413E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,266.0E0,0.005134758359309056E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,267.0E0,0.004852956378285911E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,268.0E0,0.004586619976804371E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,269.0E0,0.004334900395242254E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,270.0E0,0.004096995453617879E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,271.0E0,0.0038721469953962822E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,272.0E0,0.0036596384715654583E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,273.0E0,0.0034587926572861977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,274.0E0,0.003268969493841387E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,275.0E0,0.0030895640490096504E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,276.0E0,0.0029200045893654062E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,277.0E0,0.0027597507583638683E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,278.0E0,0.0026082918544063903E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,279.0E0,0.002465145203400132E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,280.0E0,0.002329854620626818E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,281.0E0,0.002201988957020037E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,282.0E0,0.0020811407252192644E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,283.0E0,0.001966924801022881E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,284.0E0,0.0018589771961029559E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,285.0E0,0.0017569538980709972E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,286.0E0,0.0016605297741991074E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,287.0E0,0.0015693975353032092E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,288.0E0,0.0014832667564870347E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,289.0E0,0.0014018629516265337E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,290.0E0,0.0013249266986456066E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,291.0E0,0.0012522128127959572E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,292.0E0,0.0011834895653067363E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,293.0E0,0.0011185379449141677E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,294.0E0,0.0010571509599180801E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,295.0E0,9.99132978541294E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,296.0E0,9.442991054898723E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,297.0E0,8.924745927276521E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,298.0E0,8.434942825873778E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,299.0E0,7.972020814439123E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,300.0E0,7.534504622722826E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,301.0E0,7.12099994505422E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,302.0E0,6.730188996934186E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,303.0E0,6.360826315483218E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,304.0E0,6.011734790362278E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,305.0E0,5.681801912518539E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,306.0E0,5.369976228801648E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,307.0E0,5.075263991152606E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,308.0E0,4.796725989687143E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,309.0E0,4.533474559581512E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,310.0E0,4.2846707522224155E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,311.0E0,4.0495216616063417E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,312.0E0,3.827277897468164E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,313.0E0,3.6172311970864685E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,314.0E0,3.4187121681550863E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,315.0E0,3.2310881555278813E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,316.0E0,3.0537612250384E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,317.0E0,2.88616625796964E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,318.0E0,2.727769150100995E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,319.0E0,2.578065109593456E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,320.0E0,2.4365770482886E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,321.0E0,2.3028540612947905E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,322.0E0,2.1764699900153988E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,323.0E0,2.0570220640395734E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,324.0E0,1.944129617567608E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,325.0E0,1.837432876280405E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,326.0E0,1.736591810786893E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,327.0E0,1.641285052995697E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,328.0E0,1.551208871957578E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,329.0E0,1.466076205914925E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,330.0E0,1.3856157474735644E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,331.0E0,1.309571078981508E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,332.0E0,1.2376998553591828E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,333.0E0,1.1697730317770001E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,334.0E0,1.1055741337189859E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,335.0E0,1.0448985671062597E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,336.0E0,9.875529662818518E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,337.0E0,9.333545777789795E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,338.0E0,8.821306779089432E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,339.0E0,8.337180223125853E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,340.0E0,7.879623257210988E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,341.0E0,7.447177702682968E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,342.0E0,7.038465407873544E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,343.0E0,6.652183856111086E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,344.0E0,6.287102014762699E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,345.0E0,5.9420564120863626E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,346.0E0,5.6159474293911405E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,347.0E0,5.307735796688733E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,348.0E0,5.0164392806686344E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,349.0E0,4.741129554441945E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,350.0E0,4.480929239078031E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,351.0E0,4.235009107505886E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,352.0E0,4.0025854418693705E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,353.0E0,3.782917535914597E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,354.0E0,3.575305334449896E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,355.0E0,3.3790872023556154E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,356.0E0,3.193637816033848E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,357.0E0,3.018366170578477E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,358.0E0,2.8527136963146306E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,359.0E0,2.6961524787051896E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,360.0E0,2.54818357595139E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,361.0E0,2.4083354289259927E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,362.0E0,2.2761623583716193E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,363.0E0,2.1512431445750633E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,364.0E0,2.0331796849911538E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,365.0E0,1.9215957255381653E-5)
COMMIT
DISCONNECT
/*C26*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.2')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,266.0E0,74.92734515220553E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,267.0E0,74.92727033469869E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,268.0E0,74.92719962333983E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,269.0E0,74.92713279277174E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,270.0E0,74.92706963000619E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,271.0E0,74.92700993374406E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,272.0E0,74.92695351373509E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,273.0E0,74.92690019016946E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,274.0E0,74.92684979310705E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,275.0E0,74.92680216193422E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,276.0E0,74.92675714485237E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,277.0E0,74.92671459839393E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,278.0E0,74.92667438696516E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,279.0E0,74.926636382415E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,280.0E0,74.92660046362478E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,281.0E0,74.92656651612347E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,282.0E0,74.9265344317226E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,283.0E0,74.92650410817096E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,284.0E0,74.9264754488299E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,285.0E0,74.92644836236406E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,286.0E0,74.92642276245093E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,287.0E0,74.92639856750505E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,288.0E0,74.9263757004199E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,289.0E0,74.9263540883194E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,290.0E0,74.92633366232755E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,291.0E0,74.92631435734889E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,292.0E0,74.92629611185957E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,293.0E0,74.92627886771342E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,294.0E0,74.92626256995477E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,295.0E0,74.92624716664392E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,296.0E0,74.92623260869196E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,297.0E0,74.92621884970434E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,298.0E0,74.92620584583229E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,299.0E0,74.926193555634E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,300.0E0,74.92618193994147E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,301.0E0,74.926170961737E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,302.0E0,74.92616058603379E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,303.0E0,74.92615077976609E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,304.0E0,74.92614151168169E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,305.0E0,74.92613275224454E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,306.0E0,74.92612447353935E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,307.0E0,74.92611664918265E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,308.0E0,74.92610925423894E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,309.0E0,74.92610226514134E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,310.0E0,74.92609565961634E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,311.0E0,74.926089416613E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,312.0E0,74.92608351623515E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,313.0E0,74.92607793967929E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,314.0E0,74.9260726691736E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,315.0E0,74.92606768792145E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,316.0E0,74.92606298004819E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,317.0E0,74.92605853055015E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,318.0E0,74.92605432524765E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,319.0E0,74.92605035073858E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,320.0E0,74.92604659435676E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,321.0E0,74.92604304413057E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,322.0E0,74.9260396887466E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,323.0E0,74.92603651751115E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,324.0E0,74.92603352031784E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,325.0E0,74.92603068761532E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,326.0E0,74.92602801037562E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,327.0E0,74.92602548006707E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,328.0E0,74.92602308862574E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,329.0E0,74.92602082843041E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,330.0E0,74.92601869227796E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,331.0E0,74.92601667336076E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,332.0E0,74.92601476524467E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,333.0E0,74.92601296184871E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,334.0E0,74.92601125742621E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,335.0E0,74.92600964654508E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,336.0E0,74.92600812407173E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,337.0E0,74.92600668515384E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,338.0E0,74.92600532520596E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,339.0E0,74.92600403989424E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,340.0E0,74.92600282512218E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,341.0E0,74.92600167701879E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,342.0E0,74.92600059192489E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,343.0E0,74.92599956638273E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,344.0E0,74.92599859712375E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,345.0E0,74.92599768105916E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,346.0E0,74.92599681526953E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,347.0E0,74.92599599699585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,348.0E0,74.9259952236305E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,349.0E0,74.9259944927084E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,350.0E0,74.92599380190045E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,351.0E0,74.92599314900504E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,352.0E0,74.92599253194153E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,353.0E0,74.92599194874322E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,354.0E0,74.92599139755184E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,355.0E0,74.92599087661078E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,356.0E0,74.925990384259E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,357.0E0,74.92598991892886E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,358.0E0,74.92598947913675E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,359.0E0,74.92598906348115E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,360.0E0,74.92598867063721E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,361.0E0,74.92598829935326E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,362.0E0,74.92598794844591E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,363.0E0,74.92598761679679E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,364.0E0,74.9259873033492E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,365.0E0,74.925987007104E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,266.0E0,925.067520089449E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,267.0E0,925.0678767089353E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,268.0E0,925.0682137566968E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,269.0E0,925.0685323068464E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,270.0E0,925.0688333745538E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,271.0E0,925.0691179192733E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,272.0E0,925.0693868478064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,273.0E0,925.0696410171875E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,274.0E0,925.0698812374139E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,275.0E0,925.0701082740312E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,276.0E0,925.0703228505723E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,277.0E0,925.0705256508625E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,278.0E0,925.0707173211949E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,279.0E0,925.0708984723959E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,280.0E0,925.0710696817686E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,281.0E0,925.0712314949345E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,282.0E0,925.0713844275658E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,283.0E0,925.071528967041E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,284.0E0,925.071665573987E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,285.0E0,925.0717946837517E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,286.0E0,925.0719167077895E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,287.0E0,925.0720320349748E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,288.0E0,925.0721410328398E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,289.0E0,925.0722440487444E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,290.0E0,925.0723414109867E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,291.0E0,925.0724334298504E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,292.0E0,925.0725203985862E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,293.0E0,925.0726025943526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,294.0E0,925.0726802790971E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,295.0E0,925.0727537003899E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,296.0E0,925.0728230922155E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,297.0E0,925.0728886757157E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,298.0E0,925.0729506598985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,299.0E0,925.0730092422968E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,300.0E0,925.0730646096092E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,301.0E0,925.0731169382833E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,302.0E0,925.0731663950797E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,303.0E0,925.0732131376172E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,304.0E0,925.0732573148553E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,305.0E0,925.0732990675801E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,306.0E0,925.0733385288539E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,307.0E0,925.0733758244362E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,308.0E0,925.0734110731802E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,309.0E0,925.0734443874221E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,310.0E0,925.0734758733275E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,311.0E0,925.0735056312401E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,312.0E0,925.0735337559944E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,313.0E0,925.0735603372221E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,314.0E0,925.0735854596303E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,315.0E0,925.0736092032847E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,316.0E0,925.0736316438506E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,317.0E0,925.0736528528456E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,318.0E0,925.073672897858E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,319.0E0,925.0736918427702E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,320.0E0,925.0737097479577E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,321.0E0,925.0737266704815E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,322.0E0,925.0737426642715E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,323.0E0,925.0737577803008E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,324.0E0,925.073772066738E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,325.0E0,925.0737855691148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,326.0E0,925.0737983304613E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,327.0E0,925.0738103914439E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,328.0E0,925.0738217905035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,329.0E0,925.0738325639649E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,330.0E0,925.0738427461624E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,331.0E0,925.0738523695456E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,332.0E0,925.0738614647842E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,333.0E0,925.073870060862E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,334.0E0,925.0738781851728E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,335.0E0,925.0738858636106E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,336.0E0,925.0738931206447E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,337.0E0,925.073899979403E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,338.0E0,925.0739064617406E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,339.0E0,925.0739125883164E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,340.0E0,925.0739183786576E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,341.0E0,925.0739238512178E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,342.0E0,925.0739290234353E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,343.0E0,925.0739339117936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,344.0E0,925.0739385318712E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,345.0E0,925.0739428983915E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,346.0E0,925.073947025267E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,347.0E0,925.073950925658E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,348.0E0,925.0739546119893E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,349.0E0,925.0739580960084E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,350.0E0,925.0739613888188E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,351.0E0,925.0739645009148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,352.0E0,925.0739674422149E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,353.0E0,925.073970222092E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,354.0E0,925.0739728494049E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,355.0E0,925.0739753325271E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,356.0E0,925.073977679372E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,357.0E0,925.0739798974183E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,358.0E0,925.0739819937357E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,359.0E0,925.0739839749994E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,360.0E0,925.0739858475318E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,361.0E0,925.0739876172971E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,362.0E0,925.0739892899355E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,363.0E0,925.0739908707761E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,364.0E0,925.073992364858E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,365.0E0,925.0739937769426E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,266.0E0,0.0051347583593092305E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,267.0E0,0.004852956378286072E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,268.0E0,0.004586619976804522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,269.0E0,0.004334900395242402E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,270.0E0,0.00409699545361802E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,271.0E0,0.003872146995396411E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,272.0E0,0.003659638471565579E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,273.0E0,0.0034587926572863126E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,274.0E0,0.0032689694938414973E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,275.0E0,0.0030895640490097545E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,276.0E0,0.0029200045893655047E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,277.0E0,0.00275975075836396E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,278.0E0,0.0026082918544064783E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,279.0E0,0.0024651452034002157E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,280.0E0,0.002329854620626896E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,281.0E0,0.002201988957020113E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,282.0E0,0.002081140725219337E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,283.0E0,0.001966924801022948E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,284.0E0,0.0018589771961030211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,285.0E0,0.0017569538980710588E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,286.0E0,0.0016605297741991653E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,287.0E0,0.0015693975353032654E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,288.0E0,0.0014832667564870872E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,289.0E0,0.0014018629516265812E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,290.0E0,0.0013249266986456525E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,291.0E0,0.0012522128127959997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,292.0E0,0.0011834895653067773E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,293.0E0,0.0011185379449142063E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,294.0E0,0.0010571509599181165E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,295.0E0,9.991329785413283E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,296.0E0,9.442991054899047E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,297.0E0,8.924745927276828E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,298.0E0,8.43494282587407E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,299.0E0,7.972020814439402E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,300.0E0,7.534504622723094E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,301.0E0,7.120999945054479E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,302.0E0,6.730188996934431E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,303.0E0,6.360826315483449E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,304.0E0,6.011734790362501E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,305.0E0,5.681801912518748E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,306.0E0,5.369976228801849E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,307.0E0,5.0752639911528E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,308.0E0,4.7967259896873274E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,309.0E0,4.533474559581684E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,310.0E0,4.284670752222579E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,311.0E0,4.0495216616064973E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,312.0E0,3.8272778974683127E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,313.0E0,3.617231197086611E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,314.0E0,3.4187121681552224E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,315.0E0,3.2310881555280103E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,316.0E0,3.0537612250385244E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,317.0E0,2.8861662579697577E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,318.0E0,2.727769150101108E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,319.0E0,2.5780651095935633E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,320.0E0,2.4365770482887003E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,321.0E0,2.3028540612948854E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,322.0E0,2.176469990015488E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,323.0E0,2.0570220640396566E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,324.0E0,1.9441296175676863E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,325.0E0,1.8374328762804776E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,326.0E0,1.7365918107869628E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,327.0E0,1.6412850529957625E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,328.0E0,1.5512088719576387E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,329.0E0,1.4660762059149826E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,330.0E0,1.385615747473619E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,331.0E0,1.309571078981559E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,332.0E0,1.2376998553592316E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,333.0E0,1.169773031777047E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,334.0E0,1.1055741337190301E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,335.0E0,1.0448985671063015E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,336.0E0,9.875529662818917E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,337.0E0,9.333545777790173E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,338.0E0,8.821306779089794E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,339.0E0,8.337180223126197E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,340.0E0,7.879623257211316E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,341.0E0,7.447177702683277E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,342.0E0,7.038465407873842E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,343.0E0,6.652183856111373E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,344.0E0,6.287102014762971E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,345.0E0,5.942056412086621E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,346.0E0,5.6159474293913845E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,347.0E0,5.307735796688961E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,348.0E0,5.016439280668849E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,349.0E0,4.7411295544421486E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,350.0E0,4.480929239078223E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,351.0E0,4.235009107506069E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,352.0E0,4.0025854418695426E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,353.0E0,3.78291753591476E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,354.0E0,3.5753053344500524E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,355.0E0,3.3790872023557625E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,356.0E0,3.193637816033985E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,357.0E0,3.018366170578607E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,358.0E0,2.852713696314754E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,359.0E0,2.6961524787053075E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,360.0E0,2.5481835759515012E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,361.0E0,2.408335428926097E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,362.0E0,2.2761623583717193E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,363.0E0,2.1512431445751586E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,364.0E0,2.0331796849912452E-5)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,365.0E0,1.9215957255382523E-5)
COMMIT
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.2')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,999.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,998.786847671825E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,998.5445665473281E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,998.269197938065E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,997.9562515793853E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,997.6006361266077E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,997.1965811138821E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,996.7375494904862E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,996.2161398082594E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,995.6239771087886E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,994.9515915580445E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,994.1882839092972E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,993.3219769555398E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,992.3390522768877E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,991.224171817295E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,989.9600841641194E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,988.5274158847932E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,986.9044489346492E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,985.0668860322761E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,982.987607053535E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,980.6364209772107E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,977.9798197810246E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,974.980742991663E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,971.5983643821932E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,967.78791561101E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,963.5005653992506E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,958.6833770841866E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,953.2793719182129E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,28.0E0,947.2277300476323E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,29.0E0,940.4641652946824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,30.0E0,932.9215130905895E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,31.0E0,924.5305723694428E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,32.0E0,915.2212409223007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,33.0E0,904.923978436986E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,34.0E0,893.5716209279118E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,35.0E0,881.1015532790784E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,36.0E0,867.4582222985297E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,37.0E0,852.5959408008501E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,38.0E0,836.4818946636196E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,39.0E0,819.0992218873023E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,40.0E0,800.4499895232581E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,41.0E0,780.5578567750874E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,42.0E0,759.4701878107807E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,43.0E0,737.2593734083391E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,44.0E0,714.0231429599601E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,45.0E0,689.8837011680693E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,46.0E0,664.9856060135393E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,47.0E0,639.4924097080445E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,48.0E0,613.5822003501886E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,49.0E0,587.4422930037446E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,50.0E0,561.2634080163197E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,51.0E0,535.2337272418567E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,52.0E0,509.533226843631E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,53.0E0,484.3286477240591E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,54.0E0,459.76938841804974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,55.0E0,435.98450365760647E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,56.0E0,413.0808809302519E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,57.0E0,391.1425629174987E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,58.0E0,370.23109807453955E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,59.0E0,350.3867421425834E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,60.0E0,331.63030210479604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,61.0E0,313.9654085775396E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,62.0E0,297.3810174876511E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,63.0E0,281.85397043725686E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,64.0E0,267.3514788105142E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,65.0E0,253.83343388523252E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,66.0E0,241.25447993008123E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,67.0E0,229.56581700956494E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,68.0E0,218.71672384618435E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,69.0E0,208.65580849339705E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,70.0E0,199.33200630432492E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,71.0E0,190.69535165355953E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,72.0E0,182.69755311689403E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,73.0E0,175.29240233629375E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,74.0E0,168.43604546990412E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,75.0E0,162.08714366110527E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,76.0E0,156.206945900168E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,77.0E0,150.75929438803217E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,78.0E0,145.71057930769092E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,79.0E0,141.02965692796562E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,80.0E0,136.68774229590477E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,0.07621015598791482E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,0.1628547281730528E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,0.26135757372731844E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,0.37333544683666464E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,0.5006237224173543E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,0.6453054305576091E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,0.8097439925791797E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,0.996620085199343E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,1.2089730947180277E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,1.4502476570933769E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,1.724345810313699E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,2.0356853100626213E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,2.3892646749095663E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,2.7907355286817745E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,3.2464827895412953E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,3.7637132102875035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,4.3505526933575025E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,5.016152675570765E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,5.770805688057181E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,6.6260699296147845E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,7.594902327740284E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,8.691799079050615E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,9.932942035976332E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,11.336348514784524E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,12.922021117519582E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,14.712092967721725E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,16.730962345647093E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,28.0E0,19.00540907661595E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,29.0E0,21.564683202100827E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,30.0E0,24.44055450574931E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,31.0E0,27.6673094779837E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,32.0E0,31.281680440793107E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,33.0E0,35.32269004188676E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,34.0E0,39.83139345820584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,35.0E0,44.850500783721685E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,36.0E0,50.42386362493814E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,37.0E0,56.59581331112661E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,38.0E0,63.41034371641281E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,39.0E0,70.91013972438724E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,40.0E0,79.13546284170978E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,41.0E0,88.1229180394034E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,42.0E0,97.90413979328538E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,43.0E0,108.50444927032686E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,44.0E0,119.94154702026358E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,45.0E0,132.2243144937546E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,46.0E0,145.3518013650418E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,47.0E0,159.31247251989907E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,48.0E0,174.08377795810011E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,49.0E0,189.6320910589221E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,50.0E0,205.91303710204133E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,51.0E0,222.87220705595564E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,52.0E0,240.44622450998057E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,53.0E0,258.56410941752563E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,54.0E0,277.14886377834273E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,55.0E0,296.1191933531337E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,56.0E0,315.3912766540946E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,57.0E0,334.88049730446727E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,58.0E0,354.5030669771555E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,59.0E0,374.17748149117386E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,60.0E0,393.8257700689035E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,61.0E0,413.3745152146962E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,62.0E0,432.7556365634555E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,63.0E0,451.90694529975855E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,64.0E0,470.77248583504013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,65.0E0,489.30268828202924E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,66.0E0,507.4543591484586E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,67.0E0,525.1905390554075E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,68.0E0,542.4802557360149E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,69.0E0,559.2981986452457E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,70.0E0,575.6243387231619E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,71.0E0,591.4435136204594E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,72.0E0,606.7449953393387E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,73.0E0,621.5220539950975E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,74.0E0,635.7715284129629E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,75.0E0,649.4934116247667E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,76.0E0,662.6904570563096E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,77.0E0,675.3678092991097E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,78.0E0,687.5326618179674E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,79.0E0,699.1939427237369E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,80.0E0,710.3620287977906E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.1369421721849413E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,1.292578724496793E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,1.4694444882046092E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,1.6704129737762015E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,1.8987401509727262E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,2.158113455558787E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,2.4527065169307893E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,2.787240106535199E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,3.16704979648689E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,3.598160784855626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,4.087370280382283E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,4.642337734391588E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,5.271683048198767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,5.9850926540191045E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,6.7934330463365455E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,7.708870904918837E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,8.74499837199204E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,9.916961292152644E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,11.241587258407382E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,12.737509093175204E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,14.425277891236604E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,16.327457929288432E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,18.46869358183275E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,20.875735874209223E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,23.577413483232544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,26.604529948094267E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,29.989665736143433E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,28.0E0,33.76686087575506E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,29.0E0,37.97115150321959E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,30.0E0,42.63793240366409E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,31.0E0,47.802118152574096E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,32.0E0,53.49707863690817E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,33.0E0,59.7533315211297E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,34.0E0,66.59698561388568E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,35.0E0,74.0479459372013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,36.0E0,82.1179140765334E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,37.0E0,90.80824588802436E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,38.0E0,100.10776161997036E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,39.0E0,109.99063838831384E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,40.0E0,120.41454763503305E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,41.0E0,131.31922518551096E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,42.0E0,142.62567239593656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,43.0E0,154.2361773213371E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,44.0E0,166.03531001978058E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,45.0E0,177.89198433818223E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,46.0E0,189.66259262142574E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,47.0E0,201.19511777206253E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,48.0E0,212.33402169171708E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,49.0E0,222.9256159373398E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,50.0E0,232.82355488164526E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,51.0E0,241.8940657021944E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,52.0E0,250.02054864639675E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,53.0E0,257.10724285842343E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,54.0E0,263.0817478036152E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,55.0E0,267.8963029892673E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,56.0E0,271.52784241566053E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,57.0E0,273.9769397780404E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,58.0E0,275.2658349483121E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,59.0E0,275.43577636625133E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,60.0E0,274.54392782630856E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,61.0E0,272.66007620777367E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,62.0E0,269.86334594890326E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,63.0E0,266.23908426299516E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,64.0E0,261.87603535445515E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,65.0E0,256.8638778327486E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,66.0E0,251.2911609214706E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,67.0E0,245.24364393503734E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,68.0E0,238.80302041781013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,69.0E0,232.04599286136823E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,70.0E0,225.04365497252346E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,71.0E0,217.86113472599249E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,72.0E0,210.55745154378033E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,73.0E0,203.18554366862003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,74.0E0,195.79242611714338E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,75.0E0,188.41944471413984E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,76.0E0,181.10259704353385E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,77.0E0,173.87289631287013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,78.0E0,166.75675887435543E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,79.0E0,159.77640034830995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,80.0E0,152.95022890631756E0)
COMMIT
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'epidemicsmodel.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2020-07-20 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'TotalPopulation','1000.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'AverageIllnessDuration','14.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'ContactRate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(0,'InfectionProbability','0.2')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,0,'plot : Susceptible')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,217.0E0,74.94764851006552E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,218.0E0,74.94645929485847E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,219.0E0,74.94533535831125E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,220.0E0,74.94427311647263E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,221.0E0,74.94326918222923E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,222.0E0,74.94232035448762E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,223.0E0,74.94142360795075E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,224.0E0,74.94057608345804E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,225.0E0,74.93977507885609E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,226.0E0,74.93901804037255E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,227.0E0,74.93830255446369E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,228.0E0,74.93762634011026E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,229.0E0,74.9369872415379E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,230.0E0,74.93638322133722E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,231.0E0,74.93581235396096E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,232.0E0,74.93527281958185E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,233.0E0,74.93476289828419E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,234.0E0,74.93428096457751E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,235.0E0,74.93382548221075E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,236.0E0,74.93339499927106E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,237.0E0,74.9329881435529E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,238.0E0,74.93260361818024E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,239.0E0,74.93224019747095E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,240.0E0,74.93189672302717E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,241.0E0,74.93157210004067E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,242.0E0,74.93126529380184E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,243.0E0,74.93097532639956E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,244.0E0,74.93070127360207E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,245.0E0,74.9304422619114E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,246.0E0,74.93019746577664E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,247.0E0,74.92996610496233E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,248.0E0,74.92974744206006E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,249.0E0,74.92954078013791E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,250.0E0,74.92934546051774E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,251.0E0,74.92916086067606E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,252.0E0,74.92898639225872E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,253.0E0,74.92882149920523E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,254.0E0,74.92866565597548E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,255.0E0,74.9285183658754E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,256.0E0,74.92837915947318E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,257.0E0,74.9282475931025E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,258.0E0,74.92812324744811E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,259.0E0,74.92800572620982E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,260.0E0,74.92789465483865E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,261.0E0,74.92778967934247E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,262.0E0,74.92769046515899E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,263.0E0,74.92759669608809E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,264.0E0,74.92750807328405E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,265.0E0,74.9274243143036E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,266.0E0,74.92734515220545E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,267.0E0,74.9272703346986E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,268.0E0,74.92719962333975E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,269.0E0,74.92713279277166E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,270.0E0,74.9270696300061E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,271.0E0,74.92700993374397E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,272.0E0,74.926953513735E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,273.0E0,74.92690019016938E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,274.0E0,74.92684979310697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,275.0E0,74.92680216193413E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,276.0E0,74.92675714485229E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,277.0E0,74.92671459839384E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,278.0E0,74.92667438696508E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,279.0E0,74.92663638241491E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,280.0E0,74.9266004636247E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,281.0E0,74.92656651612339E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,282.0E0,74.92653443172252E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,283.0E0,74.92650410817087E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,284.0E0,74.92647544882982E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,285.0E0,74.92644836236397E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,286.0E0,74.92642276245084E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,287.0E0,74.92639856750496E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,288.0E0,74.92637570041981E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,289.0E0,74.92635408831931E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,290.0E0,74.92633366232747E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,291.0E0,74.9263143573488E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,292.0E0,74.92629611185949E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,293.0E0,74.92627886771334E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,294.0E0,74.92626256995469E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,295.0E0,74.92624716664383E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,296.0E0,74.92623260869188E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,297.0E0,74.92621884970426E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,298.0E0,74.9262058458322E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,299.0E0,74.92619355563392E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,300.0E0,74.92618193994139E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,301.0E0,74.92617096173691E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,302.0E0,74.9261605860337E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,303.0E0,74.926150779766E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,304.0E0,74.9261415116816E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,305.0E0,74.92613275224446E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,306.0E0,74.92612447353926E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,307.0E0,74.92611664918256E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,308.0E0,74.92610925423885E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,309.0E0,74.92610226514125E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,310.0E0,74.92609565961625E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,311.0E0,74.92608941661291E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,312.0E0,74.92608351623507E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,313.0E0,74.9260779396792E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,314.0E0,74.92607266917352E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,315.0E0,74.92606768792136E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,316.0E0,74.9260629800481E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,0,'plot : Recovered')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,217.0E0,924.9707567926267E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,218.0E0,924.976423722697E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,219.0E0,924.981779665065E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,220.0E0,924.9868416848601E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,221.0E0,924.9916259109011E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,222.0E0,924.9961475870597E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,223.0E0,925.0004211207986E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,224.0E0,925.0044601290557E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,225.0E0,925.008277481609E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,226.0E0,925.0118853420674E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,227.0E0,925.0152952066109E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,228.0E0,925.0185179406014E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,229.0E0,925.021563813197E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,230.0E0,925.0244425300616E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,231.0E0,925.0271632642732E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,232.0E0,925.0297346855539E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,233.0E0,925.032164987885E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,234.0E0,925.0344619156003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,235.0E0,925.0366327880732E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,236.0E0,925.0386845230167E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,237.0E0,925.0406236585362E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,238.0E0,925.0424563739482E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,239.0E0,925.0441885094757E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,240.0E0,925.0458255848487E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,241.0E0,925.0473728168921E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,242.0E0,925.0488351361497E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,243.0E0,925.0502172025842E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,244.0E0,925.0515234204394E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,245.0E0,925.0527579522585E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,246.0E0,925.053924732154E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,247.0E0,925.0550274783429E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,248.0E0,925.0560697049926E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,249.0E0,925.0570547334167E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,250.0E0,925.0579857026614E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,251.0E0,925.0588655795051E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,252.0E0,925.0596971679124E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,253.0E0,925.0604831179699E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,254.0E0,925.0612259343266E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,255.0E0,925.0619279841794E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,256.0E0,925.0625915048189E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,257.0E0,925.0632186107462E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,258.0E0,925.0638113004244E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,259.0E0,925.0643714626426E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,260.0E0,925.0649008825294E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,261.0E0,925.065401247247E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,262.0E0,925.0658741513681E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,263.0E0,925.0663211019491E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,264.0E0,925.0667435233479E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,265.0E0,925.0671427617453E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,266.0E0,925.0675200894481E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,267.0E0,925.0678767089344E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,268.0E0,925.0682137566959E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,269.0E0,925.0685323068454E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,270.0E0,925.0688333745529E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,271.0E0,925.0691179192723E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,272.0E0,925.0693868478055E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,273.0E0,925.0696410171865E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,274.0E0,925.069881237413E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,275.0E0,925.0701082740303E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,276.0E0,925.0703228505714E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,277.0E0,925.0705256508616E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,278.0E0,925.070717321194E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,279.0E0,925.070898472395E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,280.0E0,925.0710696817677E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,281.0E0,925.0712314949336E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,282.0E0,925.0713844275649E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,283.0E0,925.0715289670401E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,284.0E0,925.0716655739861E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,285.0E0,925.0717946837508E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,286.0E0,925.0719167077885E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,287.0E0,925.0720320349739E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,288.0E0,925.0721410328389E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,289.0E0,925.0722440487435E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,290.0E0,925.0723414109858E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,291.0E0,925.0724334298495E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,292.0E0,925.0725203985853E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,293.0E0,925.0726025943517E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,294.0E0,925.0726802790962E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,295.0E0,925.072753700389E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,296.0E0,925.0728230922145E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,297.0E0,925.0728886757148E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,298.0E0,925.0729506598976E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,299.0E0,925.0730092422959E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,300.0E0,925.0730646096083E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,301.0E0,925.0731169382824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,302.0E0,925.0731663950788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,303.0E0,925.0732131376163E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,304.0E0,925.0732573148543E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,305.0E0,925.0732990675792E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,306.0E0,925.073338528853E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,307.0E0,925.0733758244353E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,308.0E0,925.0734110731793E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,309.0E0,925.0734443874212E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,310.0E0,925.0734758733266E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,311.0E0,925.0735056312392E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,312.0E0,925.0735337559935E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,313.0E0,925.0735603372212E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,314.0E0,925.0735854596294E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,315.0E0,925.0736092032838E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,316.0E0,925.0736316438497E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot : Infected')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,217.0E0,0.08159469731590331E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,218.0E0,0.0771169824525565E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,219.0E0,0.07288497663241883E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,220.0E0,0.06888519867644753E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,221.0E0,0.06510490687767748E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,222.0E0,0.06153205846008325E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,223.0E0,0.05815527125789478E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,224.0E0,0.054963787493983916E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,225.0E0,0.051947439542554597E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,226.0E0,0.049096617567615984E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,227.0E0,0.04640223893463671E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,228.0E0,0.043855719298372654E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,229.0E0,0.04144894527514849E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,230.0E0,0.03917424861288204E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,231.0E0,0.037024381776870216E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,232.0E0,0.03499249487383378E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,233.0E0,0.033072113840947145E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,234.0E0,0.03125711983058598E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,235.0E0,0.029541729725309267E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,236.0E0,0.027920477721169214E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,237.0E0,0.026388197920829724E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,238.0E0,0.024940007881172344E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,239.0E0,0.023571293063094037E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,240.0E0,0.02227769213406294E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,241.0E0,0.021055083076700818E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,242.0E0,0.01989957005922065E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,243.0E0,0.018807471025962873E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,244.0E0,0.01777530596856113E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,245.0E0,0.01679978584042767E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,246.0E0,0.015877802079293325E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,247.0E0,0.015006416704466091E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,248.0E0,0.014182852957298965E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,249.0E0,0.013404486455083938E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,250.0E0,0.012668836830219738E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,251.0E0,0.011973559828043717E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,252.0E0,0.011316439838176021E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,253.0E0,0.01069538283560251E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,254.0E0,0.010108409709025637E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,255.0E0,0.009553649955243788E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,256.0E0,0.009029335719484067E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,257.0E0,0.00853379616271141E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,258.0E0,0.008065452137990703E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,259.0E0,0.007622811158926669E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,260.0E0,0.0072044626441840455E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,261.0E0,0.006809073422931125E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,262.0E0,0.006435383486896358E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,263.0E0,0.00608220197550921E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,264.0E0,0.005748403381338447E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,265.0E0,0.0054329239637423915E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,266.0E0,0.005134758359308477E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,267.0E0,0.004852956378285361E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,268.0E0,0.004586619976803848E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,269.0E0,0.004334900395241771E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,270.0E0,0.0040969954536174205E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,271.0E0,0.0038721469953958447E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,272.0E0,0.003659638471565047E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,273.0E0,0.0034587926572858052E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,274.0E0,0.003268969493841011E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,275.0E0,0.0030895640490092957E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,276.0E0,0.0029200045893650684E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,277.0E0,0.0027597507583635495E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,278.0E0,0.002608291854406091E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,279.0E0,0.002465145203399848E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,280.0E0,0.002329854620626551E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,281.0E0,0.00220198895701979E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,282.0E0,0.0020811407252190293E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,283.0E0,0.0019669248010226624E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,284.0E0,0.0018589771961027522E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,285.0E0,0.0017569538980708086E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,286.0E0,0.0016605297741989287E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,287.0E0,0.0015693975353030405E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,288.0E0,0.001483266756486876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,289.0E0,0.001401862951626385E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,290.0E0,0.0013249266986454652E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,291.0E0,0.0012522128127958232E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,292.0E0,0.0011834895653066112E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,293.0E0,0.0011185379449140495E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,294.0E0,0.0010571509599179695E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,295.0E0,9.991329785411901E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,296.0E0,9.442991054897746E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,297.0E0,8.924745927275595E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,298.0E0,8.434942825872908E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,299.0E0,7.972020814438308E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,300.0E0,7.534504622722059E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,301.0E0,7.120999945053488E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,302.0E0,6.730188996933497E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,303.0E0,6.360826315482569E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,304.0E0,6.011734790361659E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,305.0E0,5.681801912517957E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,306.0E0,5.36997622880109E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,307.0E0,5.075263991152071E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,308.0E0,4.796725989686641E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,309.0E0,4.533474559581039E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,310.0E0,4.284670752221965E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,311.0E0,4.0495216616059124E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,312.0E0,3.827277897467755E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,313.0E0,3.6172311970860863E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,314.0E0,3.418712168154728E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,315.0E0,3.2310881555275436E-4)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,316.0E0,3.0537612250380874E-4)
COMMIT
DISCONNECT
/*C2*/DISCONNECT
